<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeFluent.Runtime.Client</name>
    </assembly>
    <members>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoDocument">
            <summary>
            Defines an XmlDocument that stores line information for elements.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.Load(System.Xml.XmlReader)">
            <summary>
            Loads the XML document from the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The XmlReader used to feed the XML data into the document.</param>
            <exception cref="T:System.Xml.XmlException">
            There is a load or parse error in the XML. In this case, the document remains empty.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
            <summary>
            Imports a node from another document to the current document.
            </summary>
            <param name="node">The node being imported.</param>
            <param name="deep">true to perform a deep clone; otherwise, false.</param>
            <returns>
            The imported <see cref="T:System.Xml.XmlNode"/>.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            Calling this method on a node type which cannot be imported.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.GetFilePath(System.Xml.XmlNode)">
            <summary>
            Gets the source file path for a given node loaded by the XmlLineInfoDocument class.
            </summary>
            <param name="node">The input node.</param>
            <returns>A local absolute file path</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateElement(System.String,System.String,System.String)">
            <summary>
            Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix"/>, <see cref="P:System.Xml.XmlDocument.LocalName"/>, and <see cref="P:System.Xml.XmlNode.NamespaceURI"/>.
            </summary>
            <param name="prefix">The prefix of the new element (if any). String.Empty and null are equivalent.</param>
            <param name="localName">The local name of the new element.</param>
            <param name="namespaceURI">The namespace URI of the new element (if any). String.Empty and null are equivalent.</param>
            <returns>
            The new <see cref="T:System.Xml.XmlElement"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateAttribute(System.String,System.String,System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlAttribute"/> with the specified <see cref="P:System.Xml.XmlNode.Prefix"/>, <see cref="P:System.Xml.XmlDocument.LocalName"/>, and <see cref="P:System.Xml.XmlNode.NamespaceURI"/>.
            </summary>
            <param name="prefix">The prefix of the attribute (if any). String.Empty and null are equivalent.</param>
            <param name="localName">The local name of the attribute.</param>
            <param name="namespaceURI">The namespace URI of the attribute (if any). String.Empty and null are equivalent. If <paramref name="prefix"/> is xmlns, then this parameter must be http://www.w3.org/2000/xmlns/; otherwise an exception is thrown.</param>
            <returns>The new XmlAttribute.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateCDataSection(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlCDataSection"/> containing the specified data.
            </summary>
            <param name="data">The content of the new XmlCDataSection.</param>
            <returns>The new XmlCDataSection.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateComment(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlComment"/> containing the specified data.
            </summary>
            <param name="data">The content of the new XmlComment.</param>
            <returns>The new XmlComment.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a new <see cref="T:System.Xml.XmlDocumentType"/> object.
            </summary>
            <param name="name">Name of the document type.</param>
            <param name="publicId">The public identifier of the document type or null. You can specify a public URI and also a system identifier to identify the location of the external DTD subset.</param>
            <param name="systemId">The system identifier of the document type or null. Specifies the URL of the file location for the external DTD subset.</param>
            <param name="internalSubset">The DTD internal subset of the document type or null.</param>
            <returns>The new XmlDocumentType.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateEntityReference(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlEntityReference"/> with the specified name.
            </summary>
            <param name="name">The name of the entity reference.</param>
            <returns>The new XmlEntityReference.</returns>
            <exception cref="T:System.ArgumentException">
            The name is invalid (for example, names starting with'#' are invalid.)
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateProcessingInstruction(System.String,System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlProcessingInstruction"/> with the specified name and data.
            </summary>
            <param name="target">The name of the processing instruction.</param>
            <param name="data">The data for the processing instruction.</param>
            <returns>The new XmlProcessingInstruction.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateSignificantWhitespace(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlSignificantWhitespace"/> node.
            </summary>
            <param name="text">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</param>
            <returns>A new XmlSignificantWhitespace node.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateTextNode(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlText"/> with the specified text.
            </summary>
            <param name="text">The text for the Text node.</param>
            <returns>The new XmlText node.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateWhitespace(System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlWhitespace"/> node.
            </summary>
            <param name="text">The string must contain only the following characters &amp;#20; &amp;#10; &amp;#13; and &amp;#9;</param>
            <returns>A new XmlWhitespace node.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
            <summary>
            Creates an <see cref="T:System.Xml.XmlDeclaration"/> node with the specified values.
            </summary>
            <param name="version">The version must be "1.0".</param>
            <param name="encoding">The value of the encoding attribute. This is the encoding that is used when you save the <see cref="T:System.Xml.XmlDocument"/> to a file or a stream; therefore, it must be set to a string supported by the <see cref="T:System.Text.Encoding"/> class, otherwise <see cref="M:System.Xml.XmlDocument.Save(System.String)"/> fails. If this is null or String.Empty, the Save method does not write an encoding attribute on the XML declaration and therefore the default encoding, UTF-8, is used.
            Note: If the XmlDocument is saved to either a <see cref="T:System.IO.TextWriter"/> or an <see cref="T:System.Xml.XmlTextWriter"/>, this encoding value is discarded. Instead, the encoding of the TextWriter or the XmlTextWriter is used. This ensures that the XML written out can be read back using the correct encoding.</param>
            <param name="standalone">The value must be either "yes" or "no". If this is null or String.Empty, the Save method does not write a standalone attribute on the XML declaration.</param>
            <returns>The new XmlDeclaration node.</returns>
            <exception cref="T:System.ArgumentException">
            The values of <paramref name="version"/> or <paramref name="standalone"/> are something other than the ones specified above.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDocument.SourceUri">
            <summary>
            Gets the source URI.
            </summary>
            <value>The source URI.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Triplet`3">
            <summary>
            Provides a utility class that is used to store three related objects. 
            </summary>
            <typeparam name="TFirst">The type of the first object.</typeparam>
            <typeparam name="TSecond">The type of the second object.</typeparam>
            <typeparam name="TThird">The type of the third object.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Triplet`3.#ctor(`0,`1,`2)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Triplet`3"/> struct.
            </summary>
            <param name="first">The first object.</param>
            <param name="second">The second object.</param>
            <param name="third">The third object.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Triplet`3.First">
            <summary>
            Gets or sets the first object of the object triplet.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Triplet`3.Second">
            <summary>
            Gets or sets the second object of the object triplet.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Triplet`3.Third">
            <summary>
            Gets or sets the third object of the object triplet.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Pair`2">
            <summary>
            Provides a utility class that is used to store two related objects. 
            </summary>
            <typeparam name="TFirst">The type of the first.</typeparam>
            <typeparam name="TSecond">The type of the second.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Pair`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Pair`2"/> struct.
            </summary>
            <param name="first">The first object.</param>
            <param name="second">The second object.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Pair`2.First">
            <summary>
            Gets or sets the first object of the object pair.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Pair`2.Second">
            <summary>
            Gets or sets the second object of the object pair.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.ValueValidator">
            <summary>
            Acts as a base class for deriving a validation class so that a value of an object can be verified.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ValueValidator.MessagePrefix">
            <summary>
            Defines the prefix for Value Validator resource messages.
            Currently defined as "CFV".
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.ValueValidator"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.ValueValidator"/> class.
            </summary>
            <param name="failureHandler">The failure handler. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Globalization.CultureInfo,System.String,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},CodeFluent.Runtime.Rules.ValueValidator,System.Object)">
            <summary>
            Helper method to validated a member's value.
            </summary>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="memberName">The member name. May not be null.</param>
            <param name="results">The list of results. May not be null.</param>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="value">The value to validate. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Object,System.Globalization.CultureInfo,System.String,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},CodeFluent.Runtime.Rules.ValueValidator,System.Object)">
            <summary>
            Helper method to validated a member's value.
            </summary>
            <param name="owner">The owner object.</param>
            <param name="culture">The culture to use. If null, the current UI culture will be used.</param>
            <param name="memberName">The member name. May not be null.</param>
            <param name="results">The list of results. May not be null.</param>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="value">The value to validate. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Object)">
            <summary>
            Determines whether the value of an object is valid. 
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed.
            </summary>
            <param name="propertyName">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.ValidateMember(System.Object,System.String)">
            <summary>
            Determines whether the value of an object's member is valid using Reflection.
            </summary>
            <param name="instance">The object instance. May not be null.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.ValidateMember(System.Object,System.Globalization.CultureInfo,System.String)">
            <summary>
            Determines whether the value of an object's member is valid using Reflection.
            </summary>
            <param name="instance">The object instance. May not be null.</param>
            <param name="culture">The culture. May be null.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <returns>
            null if the value is valid; otherwise an error message in the current UI culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ValueValidator.ValidateMember(System.Object,System.Globalization.CultureInfo,System.String,System.Reflection.BindingFlags)">
            <summary>
            Determines whether the value of an object's member is valid using Reflection.
            </summary>
            <param name="instance">The object instance. May not be null.</param>
            <param name="culture">The culture. May be null.</param>
            <param name="memberName">Name of the object's member.</param>
            <param name="bindingAttr">The binding attributes.</param>
            <returns>null if the value is valid; otherwise an error message in the current UI culture.</returns>
        </member>
        <member name="E:CodeFluent.Runtime.Rules.ValueValidator.PropertyChanged">
            <summary>
            Occurs when a property changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.ValueValidator.FailureHandler">
            <summary>
            Gets or sets the failure handler.
            </summary>
            <value>The failure handler.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceRangeMode">
            <summary>
            Defines if a trace range is excluded or included.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRangeMode.Include">
            <summary>
            Trace range is included.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRangeMode.Exclude">
            <summary>
            Trace range is excluded.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IDockWindowOwner">
            <summary>
            Defines a DockWindow owner Control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.IDockWindowOwner.PerformLayout">
            <summary>
            Performs the layout.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.Font">
            <summary>
            Gets the font.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.BackColor">
            <summary>
            Gets the color of the back.
            </summary>
            <value>The color of the back.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockWindowOwner.Windows">
            <summary>
            Gets a list of windows.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EnumEditor`1">
            <summary>
            Defines a base UITypeEditor that displays a ListBox for an Enum type.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EnumEditor">
            <summary>
            Defines a UITypeEditor for all enum types, including enums with the FlagsAttribute set.
            This editor supports any underlying enum types.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.GetName(System.Object)">
            <summary>
            Retrieves the name of the constant in the specified enumeration that has the specified value.
            </summary>
            <param name="value">The value of a particular enumerated constant in terms of its underlying type.</param>
            <returns>A string containing the name of the enumerated constant in enumType whose value is value, or null if no such constant is found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.Parse(System.String,System.Boolean)">
            <summary>
            Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.
            A parameter specifies whether the operation is case-sensitive.
            </summary>
            <param name="value">A string containing the name or value to convert.</param>
            <param name="ignoreCase">If true, ignore case; otherwise, regard case.</param>
            <returns>An object of required type whose value is represented by value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.ToObject(System.UInt64)">
            <summary>
            Returns an instance of the specified enumeration type set to the specified 64-bit unsigned integer value.
            </summary>
            <param name="value">The value to set.</param>
            <returns>An instance of the enumeration set to value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EnumEditor.ShowToolTip(System.Windows.Forms.ListBox)">
            <summary>
            Shows the tool tip.
            </summary>
            <param name="listBox">The list box. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.EditorService">
            <summary>
            Gets the editor service.
            </summary>
            <value>The editor service.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.DefaultZeroName">
            <summary>
            Gets the default name of the zero value for flags enum.
            Override this if you need a localized version of the EnumEditor class.
            </summary>
            <value>The default name of the zero value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.DecamelizeOptions">
            <summary>
            Determines if names are decamelized or not.
            </summary>
            <value>The decamelize options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.EnumType">
            <summary>
            Gets the enum type. May be null.
            </summary>
            <value>The enum type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.Values">
            <summary>
            Gets the possible list of values. May be null.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.Names">
            <summary>
            Gets the list of values. May be null.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.UnderlyingType">
            <summary>
            Gets the enum underlying type. If null, the edited value type will be used.
            </summary>
            <value>The enum underlying type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.DisplayNames">
            <summary>
            Gets a list of display names. May be null.
            </summary>
            <value>The display names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.IsListBoxSorted">
            <summary>
            Gets a value indicating whether the list box is sorted for non flags enumerations.
            </summary>
            <value>
            	<c>true</c> if the list box is sorted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.IsFlags">
            <summary>
            Gets a value indicating whether the enum is a multi-valued enum.
            </summary>
            <value><c>true</c> if the enum is a multi-valued enum; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.InitialValue">
            <summary>
            Gets the initial value.
            </summary>
            <value>The initial value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.FinalValue">
            <summary>
            Gets the final value.
            </summary>
            <value>The final value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.Context">
            <summary>
            Gets the type descriptor context.
            </summary>
            <value>The type descriptor context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor.ServiceProvider">
            <summary>
            Gets the service provider.
            </summary>
            <value>The service provider.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor`1.InitialValue">
            <summary>
            Gets the initial value.
            </summary>
            <value>The initial value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.EnumEditor`1.FinalValue">
            <summary>
            Gets the final value.
            </summary>
            <value>The final value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EncodingEditor">
            <summary>
            Defines a UITypeEditor for encoding types.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DropDownListEditor">
            <summary>
            Defines a base UITypeEditor that displays a ListBox.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.FillListBoxItems(System.Windows.Forms.ListBox,System.Object)">
            <summary>
            Fills the list box with items.
            </summary>
            <param name="listBox">The list box. May not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.ConvertFrom(System.Object)">
            <summary>
            Converts the input value to the target type.
            </summary>
            <param name="value">The input value.</param>
            <returns>A converted value</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.ConvertTo(System.Object)">
            <summary>
            Converts the selected value to the target type.
            </summary>
            <param name="value">The selected value.</param>
            <returns>A converted value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DropDownListEditor.OnListBoxSelectedValueChanged(System.Object,System.EventArgs)">
            <summary>
            Called when the selected value changes.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.CloseOnSelect">
            <summary>
            Gets a value indicating whether list box is closed when an item is selected.
            </summary>
            <value><c>true</c> if list box is closed when an item is selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.EditorService">
            <summary>
            Gets the editor service.
            </summary>
            <value>The editor service.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.Context">
            <summary>
            Gets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DropDownListEditor.BaseValue">
            <summary>
            Gets the base value.
            </summary>
            <value>The base value.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingEditor.FillListBoxItems(System.Windows.Forms.ListBox,System.Object)">
            <summary>
            Fills the list box items.
            </summary>
            <param name="listBox">The list box.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.Language">
            <summary>
            Defines a template language.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Language.Undefined">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Language.CSharp">
            <summary>
            C#.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Language.VisualBasic">
            <summary>
            Visual Basic.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Language.VBScript">
            <summary>
            VBScript.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Language.JScript">
            <summary>
            JScript.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ReferenceComparer">
            <summary>
            Defines a utility class that compare objects using their references, regardless of any overloads defined on the object class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ReferenceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="x">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <param name="y">The y.</param>
            <returns>
            	<c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ReferenceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <param name="obj">The obj.</param>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ReferenceComparer.Current">
            <summary>
            Gets the unique ReferenceComparer instance.
            </summary>
            <value>The unique ReferenceComparer instance.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1">
            <summary>
            Compares two expressions on objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <typeparam name="T">The type of objects to compare</typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DataBinderComparer">
            <summary>
            Compares two expressions on objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.Compare(System.Object,System.Object,System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            Comparisong uses an expressions on the two objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <param name="expression">The expression to use. If null the input objects will be compared.</param>
            <param name="direction">The sort direction.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DataBinderComparer.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DataBinderComparer.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.#ctor(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1"/> class.
            </summary>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DataBinderComparer`1"/> class.
            </summary>
            <param name="property">The property. May not be null.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.Compare(`0,`0,System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            Comparisong uses an expressions on the two objects for equivalence.
            The expression must follow System.Web.UI.DataBinder utility class syntax.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <param name="expression">The expression. If null, objects will be comparer directly.</param>
            <param name="direction">The sort direction.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBinderComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value Condition Less than zero x is less than y. Zero x equals y. Greater than zero x is greater than y.
            </returns>
            <exception cref="T:System.ArgumentException">Neither x nor y implements the <see cref="T:System.IComparable"></see> interface.-or- x and y are of different types and neither one can handle comparisons with the other. </exception>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentSummaryValidator">
            <summary>
            Defines a CodeFluent summary validator instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentSummaryValidator.Validate(System.Globalization.CultureInfo,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException})">
            <summary>
            Validates the current instance.
            </summary>
            <param name="culture">The culture to use. May not be null.</param>
            <param name="results">A list of results. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ITraceable">
            <summary>
            Defines a traceable object.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ITraceable.Trace(System.CodeDom.Compiler.IndentedTextWriter)">
            <summary>
            Traces the current object out to the specified writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Design.PropertyGridPage">
            <summary>
            Defines a page for displaying a property grid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.WizardPage">
            <summary>
            Defines a wizard page.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.SetCurrentPage(CodeFluent.Runtime.Design.WizardPage)">
            <summary>
            Sets the current page.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnDeactivated">
            <summary>
            Called when the page is deactivated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnNext">
            <summary>
            Called when the next button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnPrevious">
            <summary>
            Called when the previous button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnFinish">
            <summary>
            Called when the finish button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnCancel">
            <summary>
            Called when the cancel button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.OnButtonsUpdated">
            <summary>
            Called when the buttons have been updated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.GetNextPage">
            <summary>
            Gets the next page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardPage.GetPreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.NextPage">
            <summary>
            Gets or sets the next page.
            </summary>
            <value>The next page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.PreviousPage">
            <summary>
            Gets or sets the previous page.
            </summary>
            <value>The previous page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.HeaderLabel">
            <summary>
            Gets or sets the header label.
            </summary>
            <value>The header label.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.Form">
            <summary>
            Gets or sets the main wizard form.
            </summary>
            <value>The form.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardPage.ConfirmClose">
            <summary>
            Gets or sets a value indicating whether the close buttons pops up a confirmation message box.
            </summary>
            <value><c>true</c> if confirmation is requested; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.PropertyGridPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.OnButtonsUpdated">
            <summary>
            Called when the buttons have been updated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.ValidateSelectedObject">
            <summary>
            Validates the object being configured using the IDataErrorInfo interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.PropertyGridPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.ConfigurationPropertyGrid">
            <summary>
            The configuration property grid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.ConfigurationLabel">
            <summary>
            The configuration label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.PropertyGridPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowPosition">
            <summary>
            Defines position for a docked window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Top">
            <summary>
            The window is positioned at the top.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Bottom">
            <summary>
            The window is positioned at the bottom.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Left">
            <summary>
            The window is positioned at the left.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowPosition.Right">
            <summary>
            The window is positioned at the right.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowCollection">
            <summary>
            Defines a collection of DockWindows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.IndexOf(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Insert(System.Int32,CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Add(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Contains(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.CopyTo(CodeFluent.Runtime.Design.DockWindow[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.Remove(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindowCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockWindowCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindowCollection.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.DockWindow"/> at the specified index.
            </summary>
            <value>A window item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindowCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockItemCollection">
            <summary>
            Defines a collection of DockItems.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.IndexOf(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Insert(System.Int32,CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Move(CodeFluent.Runtime.Design.DockItem,System.Int32)">
            <summary>
            Moves the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="index">The new index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Add(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Contains(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.CopyTo(CodeFluent.Runtime.Design.DockItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.Remove(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockItemCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemCollection.Window">
            <summary>
            Gets the owner window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.DockItem"/> at the specified index.
            </summary>
            <value>A window item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockCaptionButton">
            <summary>
            Defines one of the caption buttons.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockCaptionButton.WindowPosition">
            <summary>
            The Windows Position button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockCaptionButton.AutoHideToggle">
            <summary>
            The Auto Hide toggle button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockCaptionButton.Close">
            <summary>
            The Close button.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.RangeStream">
            <summary>
            Defines a stream based on another stream, but restricted to a specified range.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.#ctor(System.IO.Stream,System.Int64,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.RangeStream"/> class.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">
            The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="offset"/> or <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support reading.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking, such as if the stream is constructed from a pipe or console output.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.RangeStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">
            The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="offset"/> or <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support writing.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.RangeStart">
            <summary>
            Gets the range start.
            </summary>
            <value>The range start.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.RangeEnd">
            <summary>
            Gets the range end.
            </summary>
            <value>The range end.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.BaseStream">
            <summary>
            Gets the base stream.
            </summary>
            <value>The base stream.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            </summary>
            <value></value>
            <returns>true if the stream supports reading; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            </summary>
            <value></value>
            <returns>true if the stream supports seeking; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            </summary>
            <value></value>
            <returns>true if the stream supports writing; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            </summary>
            <value></value>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            <exception cref="T:System.NotSupportedException">
            A class derived from Stream does not support seeking.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.RangeStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            </summary>
            <value></value>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The stream does not support seeking.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.DirectiveCollection">
            <summary>
            Defines a collection of directives.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveCollection.Remove(CodeFluent.Model.Common.Templating.Directive)">
            <summary>
            Removes the specified directive from this collection.
            </summary>
            <param name="directive">The directive to remove.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveCollection.Add(CodeFluent.Model.Common.Templating.Directive)">
            <summary>
            Adds the specified directive to the collection.
            </summary>
            <param name="directive">The directive to add.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveCollection.Get(System.String)">
            <summary>
            Gets a collection of directives with the specified name.
            </summary>
            <param name="name">The directive name. May not be null.</param>
            <returns>A collection of the Directive class.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.DirectiveCollection.Count">
            <summary>
            Gets the number of directive in this collection.
            </summary>
            <value>The number of directive in this collection.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.DirectiveCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CodeFluent.Model.Common.Templating.Directive"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.DirectiveCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Model.Common.Templating.Directive"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.AssemblyLoadHandler">
            <summary>
            Represents the method that handles a <see cref="T:CodeFluent.Model.Common.Templating.AssemblyLoadEventArgs"/> event. 
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Crc16">
            <summary>
            Represents a set of CRC16 utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.Compute(System.Byte[])">
            <summary>
            Computes the specified bytes.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.ComputeFile(System.String)">
            <summary>
            Computes the specified file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.Compute(System.String)">
            <summary>
            Computes the specified text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc16.Compute(System.IO.Stream)">
            <summary>
            Computes the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>The computed CRC16 checksum.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DynamicPropertiesObject">
            <summary>
            Represents an object whose properties can be dynamically created at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicPropertiesObject"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicPropertiesObject"/> class.
            </summary>
            <param name="readOnly">if set to <c>true</c> all dynamic properties are read only.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.SortDescriptors(System.Collections.IComparer)">
            <summary>
            Sorts the descriptors using the specified comparer.
            </summary>
            <param name="comparer">The comparer to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.GetSortOrder(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets a property descriptor sort order.
            </summary>
            <param name="descriptor">The property descriptor.</param>
            <returns>The sort order or -1 if it was not defined.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object)">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <returns>An instance of a newly created PropertyDescriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Attribute[])">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="attributes">Custom attributes for the property. May be null.</param>
            <returns>An instance of a newly created PropertyDescriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Int32,System.Attribute[])">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="sortOrder">The sort order.</param>
            <param name="attributes">Custom attributes for the property. May be null.</param>
            <returns>
            An instance of a newly created PropertyDescriptor.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean)">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <returns>An instance of a newly created PropertyDescriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Int32)">
            <summary>
            Adds a dynamic property to the object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="value">The property value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="sortOrder">The sort order.</param>
            <returns>
            An instance of a newly created PropertyDescriptor.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.AddPropertyDescriptor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adds a property descriptor.
            </summary>
            <param name="propertyDescriptor">The property descriptor to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.GetPropertyValue(System.String,System.Object)">
            <summary>
            Gets the value of a property.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="defaultValue">The default value if the property does not exists.</param>
            <returns>The value of the property.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"></see> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"></see> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"></see> for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"></see> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"></see> that represents the editor for this object.</param>
            <returns>
            An <see cref="T:System.Object"></see> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the filtered properties for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the property whose owner is to be found.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.GetProperty(System.String)">
            <summary>
            Gets a specific property.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <returns>An instance of a property descriptor.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.PropertyDescriptors">
            <summary>
            Gets the property descriptors.
            </summary>
            <value>The property descriptors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicPropertiesObject.DisplayName">
            <summary>
            Gets the display name which is a concatenation of all property names.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CombinedPropertiesObject">
            <summary>
            Defines an object that has the combination of properties of a collection of objects.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.#ctor(System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CombinedPropertiesObject"/> class.
            </summary>
            <param name="objects">The list of objects to combine. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.#ctor(System.Object[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CombinedPropertiesObject"/> class.
            </summary>
            <param name="objects">The list of objects to combine. May not be null.</param>
            <param name="readOnly">if set to <c>true</c> combined properties are read only.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"></see> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"></see> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"></see> for this object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"></see> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"></see> that represents the editor for this object.</param>
            <returns>
            An <see cref="T:System.Object"></see> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CombinedPropertiesObject.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the property whose owner is to be found.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ConsoleListener">
            <summary>
            Represents a Trace listener that traces to the current Windows Console.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.WriteLine(System.String)">
            <summary>
            Writes a message to the listener you create in the derived class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.Write(System.String)">
            <summary>
            Writes the specified message to the listener you create in the derived class.
            </summary>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.Write(System.String,System.String)">
            <summary>
            Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener"></see> class.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.EnsureConsole">
            <summary>
            Ensures a console is available, even for a Windows process.
            </summary>
            <returns>true if the console was created; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.AttachParentProcessConsole">
            <summary>
            Attach the parent process console.
            </summary>
            <returns>true if attachment succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.AttachConsole(System.Diagnostics.Process)">
            <summary>
            Attach to a given process console.
            </summary>
            <param name="process">The process. May not be null.</param>
            <returns>true if attachment succeeded; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.CloseConsole">
            <summary>
            Closes the console.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ConsoleListener.WriteLine(System.String,System.String)">
            <summary>
            Writes a category name and a message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener"></see> class, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonPanelCollection">
            <summary>
            Defines a collection of ribbon panels.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.EnableAll(System.Boolean)">
            <summary>
            Enables or disable all panels.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.EnableAll(System.Boolean,System.Boolean)">
            <summary>
            Enables or disable all panels.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
            <param name="recursive">if set to <c>true</c> items are also enabled or disabled.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.IndexOf(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Add(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Contains(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.CopyTo(CodeFluent.Runtime.Design.RibbonPanel[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.Remove(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanelCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Tab">
            <summary>
            Gets the owner tab.
            </summary>
            <value>The tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> with the specified title.
            </summary>
            <value></value>
            <value>A ribbon panel instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> at the specified index.
            </summary>
            <value>A ribbon tab instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanelCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ProgressPage">
            <summary>
            Defines a page that displays a progress bar and supports a background worker.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.StatusLabel">
            <summary>
            The status label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.Progress">
            <summary>
            The progress bar.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ProgressPage.DescriptionLabel">
            <summary>
            The description label.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ProgressPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnCancel">
            <summary>
            Called when the cancel button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnWorkerDoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            Called when the worker starts its work.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.DoWorkEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnWorkerRunWorkerCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            Called when the worker has completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnWorkerProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Called when the worker progress changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.ProgressChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ProgressPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.ProgressPage.ProgressStateIsDescription">
            <summary>
            Gets or sets a value indicating whether the progress state is a string passed in the user state.
            </summary>
            <value>
            	<c>true</c> if the progress state is a string passed in the user state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.ProgressPage.Worker">
            <summary>
            Gets the background worker.
            </summary>
            <value>The worker.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockItem">
            <summary>
            Represents a docked item. A docked item contains a Control that will be rendered when the item is selected.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.UpdateWindow">
            <summary>
            Updates the owning window.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItem.SetSelected(System.Boolean)">
            <summary>
            Selects or unselects the item.
            </summary>
            <param name="value">if set to <c>true</c> the item is selected; otherwise the item is unselected.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Window">
            <summary>
            Gets the containing window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.AutoHideSize">
            <summary>
            Gets or sets the size of the item when it is docked in an auto hide window.
            </summary>
            <value>The size of the auto hide.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Image">
            <summary>
            Gets or sets the image. May be null.
            </summary>
            <value>The image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.FloatBounds">
            <summary>
            Gets or sets the floating bounds.
            </summary>
            <value>The float bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Selected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockItem"/> is selected.
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.CanClose">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockItem"/> can be closed.
            </summary>
            <value><c>true</c> if this item can be closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.CanAutoHide">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockItem"/> can be auto hidden.
            </summary>
            <value><c>true</c> if this item can be auto hidden; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItem.Control">
            <summary>
            Gets or sets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockChildPanel">
            <summary>
            Defines the control that will hold an item's Control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockChildPanel.#ctor(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockChildPanel"/> class.
            </summary>
            <param name="window">The window.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockChildPanel.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ControlEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockChildPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockChildPanel.BorderSize">
            <summary>
            Gets or sets the border size.
            </summary>
            <value>The border size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockChildPanel.Window">
            <summary>
            Gets the owning window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureEditorOptions">
            <summary>
            Defines options for the Culture Editor
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.ShowName">
            <summary>
            Show the culture name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.ShowEnglishName">
            <summary>
            Show the culture english name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.ShowNativeName">
            <summary>
            Show the culture native name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.CultureEditorOptions.Default">
            <summary>
            The default options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentValidationException">
            <summary>
            The exception that is thrown when an entity state is not valid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.CodeFluentRuntimeException">
            <summary>
            The exception that is thrown when a generic CodeFluent runtime error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentRuntimeException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.Throw(System.String,System.Object[])">
            <summary>
            Throws an Exception with the specified name.
            </summary>
            <param name="name">The name to use. May not be null.</param>
            <param name="arguments">The arguments to pass.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetCode(System.String)">
            <summary>
            Gets the code from a CodeFluent exception message.
            </summary>
            <param name="message">The message.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.Exception)">
            <summary>
            Gets all messages of an exception, including inner exceptions message.
            </summary>
            <param name="exception">The exception. May be null.</param>
            <returns>A newline concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.Exception,System.String)">
            <summary>
            Gets all messages of an exception, including inner exceptions message.
            </summary>
            <param name="exception">The exception. May be null.</param>
            <param name="separator">The separator to use. May be null.</param>
            <returns>A concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetInterestingException(System.Exception)">
            <summary>
            Gets the interesting exception from an exception. This methods removes the leading TargetInvocationExceptions.
            </summary>
            <param name="exception">The original exception. May be null.</param>
            <returns>An exception instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all interesting CodeFluent messages.
            </summary>
            <param name="errors">The errors. May be null.</param>
            <returns>A concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetAllMessages(System.String)">
            <summary>
            Gets all interesting CodeFluent messages.
            </summary>
            <param name="error">The error. May be null.</param>
            <returns>A concatenated list of messages.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentRuntimeException.GetInterestingExceptionMessage(System.Exception)">
            <summary>
            Gets the interesting exception message from an exception.
            </summary>
            <param name="exception">The original exception. May be null.</param>
            <returns>An exception message.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentRuntimeException.MessageWithoutCode">
            <summary>
            Gets the message without the code, if it exists. If there is no CodeFluent code, the original message is returned.
            </summary>
            <value>The message without the code.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentRuntimeException.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>The error code.</value>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="results">A list of exceptions.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="memberName">Name of the member that failed validation. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.CodeFluentValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.CodeFluentValidationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentValidationException.Results">
            <summary>
            Gets a list of validation exceptions. May be null.
            </summary>
            <value>The results.</value>
        </member>
        <member name="P:CodeFluent.Runtime.CodeFluentValidationException.MemberName">
            <summary>
            Gets the name of the member that failed the validation.
            </summary>
            <value>The name of the member. May be null.</value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.AssemblyLoadEventArgs">
            <summary>
            Provides data for the AssemblyLoad event.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.AssemblyLoadEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.AssemblyLoadEventArgs"/> class.
            </summary>
            <param name="outputPath">The output path.</param>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.AssemblyLoadEventArgs.OutputPath">
            <summary>
            Gets the compiled assembly path.
            </summary>
            <value>The unit.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.AssemblyLoadEventArgs.Assembly">
            <summary>
            Gets or sets the assembly.
            </summary>
            <value>The assembly.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlXPathDocument">
            <summary>
            Defines an XmlDocument that has a corresponding XPATH expression for each element.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlXPathDocument.XmlTransformNamespaceUri">
            <summary>
            Defines the Xml transform namespace URI.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlXPathDocument.XmlTransformNamespacePrefix">
            <summary>
            Defines the Xml transform namespace default prefix.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.InjectXml(System.Xml.XmlDocument)">
            <summary>
            Injects transformations into another Xml document.
            </summary>
            <param name="target">The target document. May not be null.</param>
            <returns>true if something has changed in the target document; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathDocument"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.#ctor(System.Xml.XmlNameTable)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathDocument"/> class with a specified name table.
            </summary>
            <param name="nameTable">The name table.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.#ctor(System.Xml.XmlImplementation)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathDocument"/> class with a specified implementation.
            </summary>
            <param name="implementation">The implementation.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.Construct">
            <summary>
            Constructs this instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.CreateElement(System.String,System.String,System.String)">
            <summary>
            Creates an element with the specified <see cref="P:System.Xml.XmlNode.Prefix"/>, <see cref="P:System.Xml.XmlDocument.LocalName"/>, and <see cref="P:System.Xml.XmlNode.NamespaceURI"/>.
            </summary>
            <param name="prefix">The prefix of the new element (if any). String.Empty and null are equivalent.</param>
            <param name="localName">The local name of the new element.</param>
            <param name="namespaceURI">The namespace URI of the new element (if any). String.Empty and null are equivalent.</param>
            <returns>
            The new <see cref="T:System.Xml.XmlElement"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.AddDiscriminantAttribute(System.String,System.String)">
            <summary>
            Adds a discriminant attribute.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="namespaceURI">The namespace URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.AddFilteredAttribute(System.String,System.String)">
            <summary>
            Adds a filtered attribute.
            </summary>
            <param name="name">The attribute name.</param>
            <param name="namespaceURI">The namespace URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.IsDiscriminant(System.Xml.XmlAttribute)">
            <summary>
            Determines whether the specified attribute is discriminant for building XPATH expressions.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>
            	<c>true</c> if the specified attribute is filtered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.IsFiltered(System.Xml.XmlAttribute)">
            <summary>
            Determines whether the specified attribute is filtered.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>
            	<c>true</c> if the specified attribute is filtered; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathDocument.FindDifferentAttributes(System.Xml.XmlNode,System.Xml.XmlNode,System.Collections.Generic.IList{System.Xml.XmlAttribute},System.Collections.Generic.IList{System.Xml.XmlAttribute},System.Collections.Generic.IList{System.Xml.XmlAttribute})">
            <summary>
            Finds attributes differences between two Xml nodes.
            </summary>
            <param name="node1">The first node. May not be null.</param>
            <param name="node2">The second node. May not be null.</param>
            <param name="onlyInNode1">The list of attributes only in the first node. May not be null.</param>
            <param name="onlyInNode2">The list of attributes only in the second node. May not be null.</param>
            <param name="different">The list of attributes in both nodes with different values. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathDocument.XmlTransformNamespaceManager">
            <summary>
            Gets the Xml transform namespace manager.
            </summary>
            <value>The Xml transform namespace manager.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathDocument.XPathNamespaceManager">
            <summary>
            Gets the corresponding Xml namespace manager.
            </summary>
            <value>The Xml namespace manager.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlUtilities">
            <summary>
            Represents a set of Xml utilities
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlUtilities.XmlNamespaceUri">
            <summary>
            Defines the Xml Namespace uri: 'http://www.w3.org/2000/xmlns/'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.XmlUtilities.XmlNamespacePrefix">
            <summary>
            Defines the Xml Namespace prefix: 'xmlns'.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2005SchemasDirectory">
            <summary>
            Gets the Visual Studio 2005 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2008SchemasDirectory">
            <summary>
            Gets the Visual Studio 2008 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2010SchemasDirectory">
            <summary>
            Gets the Visual Studio 2010 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetVs2012SchemasDirectory">
            <summary>
            Gets the Visual Studio 2012 schemas directory path.
            </summary>
            <returns>A directory path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.Indent(System.Xml.XmlDocument)">
            <summary>
            Indents the specified Xml document.
            </summary>
            <param name="doc">The document instance. If null, null will be returned.</param>
            <returns>A string representing the output indented document.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.Indent(System.Xml.XmlNode)">
            <summary>
            Indents the specified Xml node.
            </summary>
            <param name="node">The node instance. If null, null will be returned.</param>
            <returns>A string representing the output indented document.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.IndentContent(System.Xml.XmlNode)">
            <summary>
            Indents the specified Xml node content.
            </summary>
            <param name="node">The node instance. If null, null will be returned.</param>
            <returns>A string representing the output indented document.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.IsNamespaceAttribute(System.Xml.XmlAttribute)">
            <summary>
            Determines whether the specified attribute is an xml namespace declaration attribute.
            </summary>
            <param name="attribute">The attribute.</param>
            <returns>
            	<c>true</c> if the specified attribute is an xml namespace declaration attribute; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.HaveSameAttributes(System.Xml.XmlNode,System.Xml.XmlNode,System.Boolean,System.Object[])">
            <summary>
            Determines if two Xml nodes have the same set of attributes.
            </summary>
            <param name="left">The left node. May not be null.</param>
            <param name="right">The right node. May not be null.</param>
            <param name="ignoreCase">if set to <c>true</c> case will be ignored when comparing attributes values.</param>
            <param name="names">The names of attributes to check. May not be null.</param>
            <returns><c>true</c> if the nodes have the attributes and their values are the sames;<c>false</c> otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.MergeAttributes(System.Xml.XmlNode,System.Xml.XmlNode,System.String[])">
            <summary>
            Merges the attributes of two nodes.
            </summary>
            <param name="sourceNode">The source node. May not be null.</param>
            <param name="targetNode">The target node. May not be null.</param>
            <param name="skipNames">A list of names that can be skipped. May be null or empty.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.SetAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Sets an attribute on a node. If the attribute already exists, its value will be overwritten.
            The function can also delete an attribute.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The attribute name. May not be null.</param>
            <param name="value">The value to set. If null, the attribute will be deleted.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.SetAttribute(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Sets an attribute on a node. If the attribute already exists, its value will be overwritten.
            The function can also delete an attribute.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name. May not be null.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="value">The value to set. If null, the attribute will be deleted.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Gets a node attribute value. If the attribute does not exists, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Guid)">
            <summary>
            Gets a node attribute value as a System.Guid. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets a node attribute value as a System.Boolean. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Char)">
            <summary>
            Gets a node attribute value as a System.Char. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The parameter name. May not be null.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Decimal. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Double,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Double. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Single,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Single. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.UInt32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.UInt64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.UInt16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.UInt16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.SByte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.SByte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Byte,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Byte. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Int16,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int16. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Int64,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int64. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Int32,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.Int32. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets a node attribute value as a System.DateTime. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Enum)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.Boolean,System.Enum)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Enum)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute(System.Xml.XmlNode,System.String,System.String,System.Enum,System.Boolean)">
            <summary>
            Gets a node attribute value as an enum. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,``0)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Collections.Generic.IEnumerable{System.Xml.XmlNode},System.String,System.Boolean,``0,System.IFormatProvider)">
            <summary>
            Gets an attribute value from a list of node. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="nodes">The nodes. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,System.Boolean,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="name">The name.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,System.String,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetAttribute``1(System.Xml.XmlNode,System.String,System.String,System.Boolean,``0,System.IFormatProvider)">
            <summary>
            Gets a typed node attribute value. If the attribute does not exists or is not of the target type, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="node">The node. May not be null.</param>
            <param name="localName">The local name.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="expandEnvironmentVariables">if set to <c>true</c> environment variables are expanded.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The format provider to use, depending on the target type.</param>
            <returns>The attribute value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.GetOwnerElement(System.Xml.XmlNode)">
            <summary>
            Gets the owner element of a node or the node itself if the node is an element.
            </summary>
            <param name="node">The node. May not be null.</param>
            <returns>The parent element instance or null if the node has no parent.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.AddNamespaceAttributeToDocument(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Adds the xmlns attribute with a prefix to an existing document, corresponding to a given Xml namespace uri.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="prefix">The prefix. May not be null.</param>
            <param name="namespaceUri">The namespace URI. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlUtilities.AddNamespaceAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Adds the xmlns attribute with a prefix to an existing node, corresponding to a given Xml namespace uri.
            </summary>
            <param name="node">The node. May not be null.</param>
            <param name="prefix">The prefix. May not be null.</param>
            <param name="namespaceUri">The namespace URI. May not be null.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.PersistentList`1">
            <summary>
            Represents a collection of objects that can be individually accessed by index.
            The list is persisted as a comma separated list of values.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PersistentList`1.DefaultSeparator">
            <summary>
            The default separator character. Equals to ';'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PersistentList`1.EscapeCharacter">
            <summary>
            The default escape character. Equals to '\'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PersistentList`1.Null">
            <summary>
            The null serialized representation. Equals to '\null'.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class.
            </summary>
            <param name="separator">The serialization separator character to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Char,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="separator">The serialization separator character to use.</param>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.#ctor(System.Char,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.PersistentList`1"/> class using a serialized instance.
            </summary>
            <param name="separator">The serialization separator character to use.</param>
            <param name="serializedInstance">The serialized instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Add(`0)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            -or-
            Type <paramref name="array"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Deserialize(System.String)">
            <summary>
            Deserializes the specified object instance.
            </summary>
            <param name="serializedInstance">The serialized instance. May be null.</param>
            <returns>
            A deserialized object of the target type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Deserialize(System.Type,System.String)">
            <summary>
            Deserializes the specified object instance.
            </summary>
            <param name="type">The serialized object instance type. May not be null.</param>
            <param name="serializedInstance">The serialized instance. May be null.</param>
            <returns>
            A deserialized object of the target type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Serialize(System.Object)">
            <summary>
            Serializes the specified object instance.
            </summary>
            <param name="obj">The object instance. May be null.</param>
            <returns>
            A string representing the serialized object instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Serialize(System.Object,System.Char)">
            <summary>
            Serializes the specified object instance.
            </summary>
            <param name="obj">The object instance. May be null.</param>
            <param name="separator">The separator character.</param>
            <returns>
            A string representing the serialized object instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Serialize(CodeFluent.Runtime.PersistenceSerializationMode)">
            <summary>
            Serializes this instance.
            </summary>
            <param name="mode">The serialization mode.</param>
            <returns>The serialized instance. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.Deserialize(System.Type,CodeFluent.Runtime.PersistenceSerializationMode,System.Object)">
            <summary>
            Deserializes the specified object instance.
            </summary>
            <param name="type">The serialized object instance type. May not be null.</param>
            <param name="mode">The serialization mode.</param>
            <param name="serializedInstance">The serialized object instance. May be null.</param>
            <returns>The deserialized instance. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the ListChanged event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.OnPropertyChanged(System.String)">
            <summary>
            Called when a property has changed.
            </summary>
            <param name="name">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.PersistentList`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.PersistentList`1.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.PersistentList`1.ListChanged">
            <summary>
            Occurs when the list changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.Separator">
            <summary>
            Gets the separator character for serialization.
            </summary>
            <value>The separator character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.PersistentList`1.RaiseListChangedEvents">
            <summary>
            Gets or sets a value indicating whether list changed events must be raised.
            </summary>
            <value>
            	<c>true</c> if list changed events must be raised; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1">
            <summary>
            Provides data for a key change event.
            </summary>
            <typeparam name="Tk">The type of the key.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1"/> class.
            </summary>
            <param name="oldKey">The old key.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.KeyChangedEventArgs`1.OldKey">
            <summary>
            Gets the old key.
            </summary>
            <value>The old key.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesCallback">
            <summary>
            Defines a callback delegate to customize JSON serialization and deserialization.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundProperty">
            <summary>
            Represents a Compound file property.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.SummaryInformationFormatId">
            <summary>
            Defines the SummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.DocSummaryInformationFormatId">
            <summary>
            Defines the DocSummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.UserDefinedPropertiesId">
            <summary>
            Defines the UserDefinedProperties FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundProperty.KnownProperties">
            <summary>
            Defines the list of well-known properties.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundProperty.#ctor(System.Guid,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> class.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundProperty.#ctor(System.Guid,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> class.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name.</param>
            <param name="id">The id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.FormatId">
            <summary>
            Gets the FMTID.
            </summary>
            <value>The format id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Id">
            <summary>
            Gets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Changed">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> has changed.
            </summary>
            <value><c>true</c> if changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Deleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> is deleted.
            </summary>
            <value><c>true</c> if deleted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.IsKnownProperty">
            <summary>
            Gets a value indicating whether this instance is a known property.
            </summary>
            <value>
            	<c>true</c> if this instance is a known property; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundProperty.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidator">
            <summary>
            Provides comparions the value with a constant value.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,CodeFluent.Runtime.Rules.CompareValidatorOperator,System.Object,System.Object,System.Object,CodeFluent.Runtime.Rules.CompareValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CompareValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="operator">The comparison operator.</param>
            <param name="valueToCompare">The value to compare. May be null.</param>
            <param name="maximumValue">The maximum value. May be null.</param>
            <param name="minimumValue">The minimum value. May be null.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Evaluate(System.Object,System.Object,CodeFluent.Runtime.Rules.CompareValidatorOperator,CodeFluent.Runtime.Rules.CompareValidatorOptions,System.Globalization.CultureInfo)">
            <summary>
            Compares two values using the specified operator.
            </summary>
            <param name="value">The value input value.</param>
            <param name="valueToCompare">The value to compare.</param>
            <param name="operator">The operator.</param>
            <param name="options">The options.</param>
            <param name="culture">The culture to use for possible type coercion.</param>
            <returns>
            true if the comparison succeed; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Evaluate(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Compares the value with the constant value.
            </summary>
            <param name="value">The value to compare.</param>
            <param name="culture">The culture to use for possible type coercion.</param>
            <returns>
            true if the comparison succeed; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CompareValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.ValueToCompare">
            <summary>
            Gets or sets the comparison value.
            </summary>
            <value>The comparison value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.MaximumValue">
            <summary>
            Gets or sets the maximum value of the validation range.
            </summary>
            <value>The maximum value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.MinimumValue">
            <summary>
            Gets or sets the minimum value of the validation range.
            </summary>
            <value>The minimum value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.Operator">
            <summary>
            Gets or sets the comparison operator
            </summary>
            <value>The comparison operator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CompareValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidator.FailureCode.Failed">
            <summary>
            The comparison has failed.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ReportPage">
            <summary>
            Defines a page for displaying actions report.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ReportPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.OnPrevious">
            <summary>
            Called when the previous button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.OnFinish">
            <summary>
            Called when the finish button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.ShowReport">
            <summary>
            Shows the report.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ReportPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.ReportTextBox">
            <summary>
            The report text box.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.ReportLabel">
            <summary>
            The report label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ReportPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowMode">
            <summary>
            Defines a window mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMode.Dock">
            <summary>
            The window is docked.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMode.Hide">
            <summary>
            The window is hidden.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMode.AutoHide">
            <summary>
            The window is auto hidden.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockTabsList">
            <summary>
            Defines a Control that renders a Window's tabs list.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockTabsList.Radius">
            <summary>
            Defines the tabs radius.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.#ctor(CodeFluent.Runtime.Design.DockWindow)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockTabsList"/> class.
            </summary>
            <param name="window">The owning window.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.GetItemAt(System.Int32,System.Int32)">
            <summary>
            Gets the item at a specified position.
            </summary>
            <param name="x">The position x-coordinate.</param>
            <param name="y">The position y-coordinate.</param>
            <returns>An instance of the DockItem class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.GetItemBounds(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Gets the bounds of a specified item.
            </summary>
            <param name="item">The item. May not be null.</param>
            <returns>An instance of the Rectangle structure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Layout"/> event.
            </summary>
            <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockTabsList.ComputeLayout">
            <summary>
            Computes the layout.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockTabsList.Window">
            <summary>
            Gets the owning window.
            </summary>
            <value>The window.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockFloatDropForm">
            <summary>
            Defines the utility Form that will be used to display dock drop bitmaps on floating windows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.#ctor(CodeFluent.Runtime.Design.DockPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockFloatDropForm"/> class.
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropCenter(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this center.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this center.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropBottom(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel bottom.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel bottom.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropTop(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this top.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this top.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropRight(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this right.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this right.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatDropForm.OnDropLeft(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this left.
            </summary>
            <param name="screenLocation">The location.</param>
            <returns>
            true if the location points to this left.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatDropForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatDropForm.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatDropForm.DropCenterBounds">
            <summary>
            Gets or sets the drop center bounds.
            </summary>
            <value>The drop center bounds.</value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.Directive">
            <summary>
            Defines a CodeFluent template directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.TemplateDirectiveName">
            <summary>
            Defines the Template directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.ReferenceDirectiveName">
            <summary>
            Defines the Reference directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.NamespaceDirectiveName">
            <summary>
            Defines the Namespace directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.NamespaceMemberDirectiveName">
            <summary>
            Defines the NamespaceMember directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.ParameterDirectiveName">
            <summary>
            Defines the Parameter directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.RemarkDirectiveName">
            <summary>
            Defines the Remark directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.MemberDirectiveName">
            <summary>
            Defines the Member directive.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Directive.EncodingDirectiveName">
            <summary>
            Defines the Encoding directive.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Directive.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Directive.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.Directive"/> class.
            </summary>
            <param name="name">The directive name.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Directive.GetAttributeValue``1(System.String,``0)">
            <summary>
            Gets a directive attribute value.
            </summary>
            <typeparam name="T">The value expected type.</typeparam>
            <param name="name">The attribute name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>A System.String directive value.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Directive.GetAttributeValue``1(System.String,``0,System.IFormatProvider)">
            <summary>
            Gets a directive attribute value.
            </summary>
            <typeparam name="T">The value expected type.</typeparam>
            <param name="name">The attribute name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">The provider.</param>
            <returns>A System.String directive value.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Directive.SetAttributeValue(System.String,System.String[])">
            <summary>
            Sets an attribute values. If the attribute does not exists, it is created.
            </summary>
            <param name="name">The attribute name. May not be null.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Directive.SetAttributeValue(System.String,System.String)">
            <summary>
            Sets an attribute value. If the attribute does not exists, it is created.
            </summary>
            <param name="name">The attribute name. May not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Directive.DisplayName">
            <summary>
            Gets the display name.
            </summary>
            <value>The display name.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Directive.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Directive.Attributes">
            <summary>
            Gets the collection of attributes.
            </summary>
            <value>A collection attributes.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoElement">
            <summary>
            Defines an XmlElement that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoElement"/> class.
            </summary>
            <param name="prefix">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix"/> property.</param>
            <param name="localName">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName"/> property.</param>
            <param name="namespaceURI">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoElement.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoElement.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoElement.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoElement.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptException">
            <summary> 
            Defines a Windows Script Engine exception. 
            </summary> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="message">The message.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.Exception)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="innerException">The inner exception.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.String,System.Exception)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="message">The message.</param> 
            <param name="innerException">The inner exception.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptException"/> class. 
            </summary> 
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param> 
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param> 
            <exception cref="T:System.ArgumentNullException"> 
            The <paramref name="info"/> parameter is null. 
            </exception> 
            <exception cref="T:System.Runtime.Serialization.SerializationException"> 
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). 
            </exception> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Description">
            <summary> 
            Gets the error description intended for the customer. 
            </summary> 
            <value>The description text.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Line">
            <summary> 
            Gets the line number of error. 
            </summary> 
            <value>The line number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Column">
            <summary> 
            Gets the character position of error. 
            </summary> 
            <value>The column number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Number">
            <summary> 
            Gets a value describing the error. 
            </summary> 
            <value>The error number.</value> 
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ScriptException.Text">
            <summary> 
            Gets the text line in the source file where an error occurred. 
            </summary> 
            <value>The text.</value> 
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Perceived">
            <summary>
            Defines a file's perceived type based on its extension.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Perceived.GetPerceivedType(System.String)">
            <summary>
            Gets a file's perceived type based on its extension.
            </summary>
            <param name="fileName">The file name. May not be null..</param>
            <returns>An instance of the PerceivedType type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Perceived.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Perceived.Extension">
            <summary>
            Gets the file's xtension.
            </summary>
            <value>The file's extension.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Perceived.PerceivedType">
            <summary>
            Indicates the normalized perceived type.
            </summary>
            <value>The normalized perceived type.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Perceived.PerceivedTypeSource">
            <summary>
            Indicates the source of the perceived type information.
            </summary>
            <value>the source of the perceived type information.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs">
            <summary>
            Provides enhanced data for the CollectionChanged event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs"/> class.
            </summary>
            <param name="action">One of the CollectionChangeAction values that specifies how the collection changed.</param>
            <param name="element">An Object that specifies the instance of the collection where the change occurred.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs.#ctor(System.ComponentModel.CollectionChangeAction,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs"/> class.
            </summary>
            <param name="action">One of the CollectionChangeAction values that specifies how the collection changed.</param>
            <param name="element">An Object that specifies the instance of the collection where the change occurred.</param>
            <param name="index">The element index in the collection.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IndexedCollectionChangeEventArgs.Index">
            <summary>
            Gets the element index.
            </summary>
            <value>The element index.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CustomThreadPool">
            <summary>
            Provides a pool of threads that can be used to post work items.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Threading.ThreadPriority)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
            <param name="threadPriority">The priority of threads in the pool.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Threading.ThreadPriority,System.Threading.ApartmentState,System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
            <param name="threadPriority">The priority of threads in the pool.</param>
            <param name="threadApartmentState">The ApartmentState of threads in the pool.</param>
            <param name="threadCulture">The culture of threads in the pool. May be null.</param>
            <param name="threadUiCulture">The UI culture of threads in the pool. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.Threading.ThreadPriority,System.Threading.ApartmentState,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Threading.ParameterizedThreadStart,System.Threading.ParameterizedThreadStart)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> class.
            </summary>
            <param name="minimumWorkerThreads">The minimum worker threads.</param>
            <param name="maximumWorkerThreads">The maximum worker threads.</param>
            <param name="workerThreadIdleTimeout">The worker thread idle timeout in milliseconds.</param>
            <param name="nameFormat">The name format.</param>
            <param name="threadPriority">The priority of threads in the pool.</param>
            <param name="threadApartmentState">The ApartmentState of threads in the pool.</param>
            <param name="threadCulture">The culture of threads in the pool. May be null.</param>
            <param name="threadUiCulture">The UI culture of threads in the pool. May be null.</param>
            <param name="threadInit">A thread init callback. May be null.</param>
            <param name="threadEnd">A thread end callback. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Queues a method for execution, and specifies an object containing data to be used by the method. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callBack">A WaitCallback representing the method to execute.</param>
            <returns>
            true if the method is successfully queued; OutOfMemoryException is thrown if the work item could not be queued.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Queues a method for execution, and specifies an object containing data to be used by the method. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callBack">A WaitCallback representing the method to execute.</param>
            <param name="state">An object containing data to be used by the method.</param>
            <returns>true if the method is successfully queued; OutOfMemoryException is thrown if the work item could not be queued.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CustomThreadPool.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:CodeFluent.Runtime.Utilities.CustomThreadPool"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadCulture">
            <summary>
            Gets the culture of the threads in the pool.
            </summary>
            <value>The threads culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadUiCulture">
            <summary>
            Gets the UI culture of the threads in the pool.
            </summary>
            <value>The threads UI culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadApartmentState">
            <summary>
            Gets the apartment state of the threads in the pool.
            </summary>
            <value>The threads apartment state.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.ThreadPriority">
            <summary>
            Gets the priority of threads in the pool.
            </summary>
            <value>The threads priority.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.WorkerThreadIdleTimeout">
            <summary>
            Gets the worker thread idle timeout.
            </summary>
            <value>The worker thread idle timeout.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.QueueLength">
            <summary>
            Gets the length of the work queue.
            If this length always increases over time, it means worker threads are not working fast enough, and the system will eventually run out of memory.
            </summary>
            <value>The length of the work queue.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.MinimumWorkerThreads">
            <summary>
            Gets the minimum number of worker threads.
            </summary>
            <value>The minimum number of worker threads.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.MaximumWorkerThreads">
            <summary>
            Gets the maximum number of worker threads.
            </summary>
            <value>The maximum number of worker threads.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.AvailableWorkerThreads">
            <summary>
            Gets the number of available worker threads.
            </summary>
            <value>The number of available worker threads.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CustomThreadPool.CurrentWorkerThreads">
            <summary>
            Gets the number of current worker threads.
            </summary>
            <value>The number of current worker threads.</value>
        </member>
        <member name="F:CodeFluent.Runtime.Design.GuidEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockFloatWindowCollection">
            <summary>
            Defines a collection of DockFloatWindows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.IndexOf(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Insert(System.Int32,CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Add(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Contains(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.CopyTo(CodeFluent.Runtime.Design.DockFloatWindow[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.Remove(CodeFluent.Runtime.Design.DockFloatWindow)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindowCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockFloatWindowCollection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindowCollection.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.DockFloatWindow"/> at the specified index.
            </summary>
            <value>A window item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindowCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureEditor">
            <summary>
            Defines a UITypeEditor for culture types.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.CultureEditor"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.AddChosenCulture(System.Globalization.CultureInfo)">
            <summary>
            Adds a culture to the list of chosen cultures.
            </summary>
            <param name="culture">The culture. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.ResetChosenCultures">
            <summary>
            Resets the remembered chosen cultures.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.RememberChosenCultures">
            <summary>
            Gets a value indicating whether the editor should remember chosen cultures.
            </summary>
            <value>
            	<c>true</c> if the editor should remember chosen cultures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.ItemsCount">
            <summary>
            Gets the items count.
            </summary>
            <value>The items count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.SeparatorWidth">
            <summary>
            Gets the width of the separator.
            </summary>
            <value>The width of the separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureEditor.CultureTypes">
            <summary>
            Gets the culture types.
            </summary>
            <value>The culture types.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureEditor.CultureComparer">
            <summary>
            Defines a CultureInfo comparer utility class
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureEditor.CultureComparer.System#Collections#Generic#IComparer{System#Globalization#CultureInfo}#Compare(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>
            Value
            Condition
            Less than zero
            <paramref name="x"/> is less than <paramref name="y"/>.
            Zero
            <paramref name="x"/> equals <paramref name="y"/>.
            Greater than zero
            <paramref name="x"/> is greater than <paramref name="y"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CultureComboBox">
            <summary>
            Defines a ComboBox the enumerates cultures.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.CultureComboBox"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureComboBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CultureComboBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ComboBox.DrawItem"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.DrawItemEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.SelectedCulture">
            <summary>
            Gets or sets the selected culture.
            </summary>
            <value>The selected culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.RememberChosenCultures">
            <summary>
            Gets a value indicating whether the combobox should remember chosen cultures.
            </summary>
            <value>
            	<c>true</c> if the editor should remember chosen cultures; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.CultureTypes">
            <summary>
            Gets the culture types.
            </summary>
            <value>The culture types.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.CultureComboBox.SeparatorWidth">
            <summary>
            Gets the width of the separator.
            </summary>
            <value>The width of the separator.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.CollectionTypeConverter">
            <summary>
            Provides a simple type converter to convert Collection objects to and from various other representations.
            Displays 'Count: ' and the number of items in the collections.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CollectionTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.CollectionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"></see> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
            <exception cref="T:System.ArgumentNullException">The destinationType parameter is null. </exception>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException">
            <summary>
            The exception that is thrown when an error occurs in a CodeFluent template.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(CodeFluent.Model.Common.Templating.Template,System.Runtime.InteropServices.COMException)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="template">The template instance. May not be null.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(CodeFluent.Model.Common.Templating.Template,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="template">The template instance. May not be null.</param>
            <param name="source">The error source.</param>
            <param name="description">The error description.</param>
            <param name="line">The error line number.</param>
            <param name="column">The error column number.</param>
            <param name="number">The error number.</param>
            <param name="text">The error text.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(CodeFluent.Model.Common.Templating.Template,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="template">The template instance. May not be null.</param>
            <param name="source">The error source.</param>
            <param name="description">The error description.</param>
            <param name="line">The error line number.</param>
            <param name="column">The error column number.</param>
            <param name="number">The error number.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(CodeFluent.Model.Common.Templating.Template,System.String,System.String,System.Object[],System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="template">The template instance. May not be null.</param>
            <param name="filePath">The template file path.</param>
            <param name="methodName">Name of the method.</param>
            <param name="parameters">The parameters.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
            <param name="message">The message.</param>
            <param name="simpleMessage">A simple message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.Description">
            <summary>
            Gets the error description.
            </summary>
            <value>The error description.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.Line">
            <summary>
            Gets the error line number.
            </summary>
            <value>The error line number.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.Column">
            <summary>
            Gets the error column number.
            </summary>
            <value>The error column number.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.Number">
            <summary>
            Gets the error number.
            </summary>
            <value>The error number.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.CodeFluentTemplateException.Text">
            <summary>
            Gets the error text.
            </summary>
            <value>The error text.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.VersionInfo">
            <summary>
            Represents a set of utilities to read Win32 version information from a file.
            This class should not be use. Replace it with System.Diagnostics.FileVersionInfo which provides equivalent features.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.VersionInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.VersionInfo"/> class.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.LCID">
            <summary>
            Gets the LCID.
            </summary>
            <value>The LCID.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.CodePage">
            <summary>
            Gets the code page.
            </summary>
            <value>The code page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersion">
            <summary>
            Gets the file version.
            </summary>
            <value>The file version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionMajor">
            <summary>
            Gets the file version major.
            </summary>
            <value>The file version major.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionMinor">
            <summary>
            Gets the file version minor.
            </summary>
            <value>The file version minor.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionRevision">
            <summary>
            Gets the file version revision.
            </summary>
            <value>The file version revision.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileVersionBuild">
            <summary>
            Gets the file version build.
            </summary>
            <value>The file version build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersion">
            <summary>
            Gets the product version.
            </summary>
            <value>The product version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionMajor">
            <summary>
            Gets the product version major.
            </summary>
            <value>The product version major.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionMinor">
            <summary>
            Gets the product version minor.
            </summary>
            <value>The product version minor.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionRevision">
            <summary>
            Gets the product version revision.
            </summary>
            <value>The product version revision.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductVersionBuild">
            <summary>
            Gets the product version build.
            </summary>
            <value>The product version build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.Comments">
            <summary>
            Gets the comments.
            </summary>
            <value>The comments.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.InternalName">
            <summary>
            Gets the internal name.
            </summary>
            <value>The internal name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.ProductName">
            <summary>
            Gets product name.
            </summary>
            <value>The product name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.CompanyName">
            <summary>
            Gets the company name.
            </summary>
            <value>The company name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.LegalCopyright">
            <summary>
            Gets the legal copyright.
            </summary>
            <value>The legal copyright.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FileDescription">
            <summary>
            Gets the file description.
            </summary>
            <value>The file description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.LegalTrademarks">
            <summary> Gets the legal trademarks.</summary>
            <returns>The legal trademarks.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.PrivateBuild">
            <summary>
            Gets the private build.
            </summary>
            <value>The private build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.OriginalFileName">
            <summary>
            Gets the original file name.
            </summary>
            <value>The original file name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.SpecialBuild">
            <summary>
            Gets the special build.
            </summary>
            <value>The special build.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.VersionInfo.FilePath">
            <summary>
            Gets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.RazorTemplateExecutor">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.RazorTemplateExecutor"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.WriteLiteral(System.Object)">
            <summary>
            Writes the text representation of an object to the text stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.Write">
            <summary>
            Writes nothing
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.Section(System.String)">
            <summary>
            Runs the action corresponding to the section name
            </summary>
            <param name="name">The session name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.Write(System.Object)">
            <summary>
            Writes the text representation of an object to the text stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.DefineSection(System.String,CodeFluent.Runtime.Utilities.RazorTemplateExecutor.SectionWriter)">
            <summary>
            Defines a section.
            </summary>
            <param name="name">The section name.</param>
            <param name="action">The action to perform.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.BaseWriter">
            <summary>
            Gets or sets the base text writer.
            </summary>
            <value>The base writer.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.RazorTemplateExecutor.SectionWriter">
            <summary>
            Defines a section writer delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions">
            <summary>
            Define options for JSON utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions"/> class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.SerializationOptions">
            <summary>
            Gets or sets the serialization options.
            </summary>
            <value>The serialization options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.WriteValueCallback">
            <summary>
            Gets or sets a write value callback.
            </summary>
            <value>The write value callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.BeforeWriteObjectCallback">
            <summary>
            Gets or sets a write object callback that is called before an object (not a value) is serialized.
            </summary>
            <value>The write value callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.AfterWriteObjectCallback">
            <summary>
            Gets or sets a write object callback that is called before an object (not a value) is serialized.
            </summary>
            <value>The write value callback.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesOptions.WriteNamedValueObjectCallback">
            <summary>
            Gets or sets a write object callback that is called before an object field or property is serialized.
            </summary>
            <value>The write value callback.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert">
            <summary>
            Provides plural to singular and singular to plural conversion of nouns in a specific culture.
            This implementation is not strictly a general inflector, as it's been designed for table name conversion.
            For example, we don't change a table named "People" in a table named "Person".
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.IsSingular(System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the specified word is singular.
            </summary>
            <param name="word">The word.</param>
            <param name="culture">The culture in which the word is expressed.</param>
            <returns>
            	<c>true</c> if the specified word is singular; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.IsPlural(System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the specified word is plural.
            </summary>
            <param name="word">The word.</param>
            <param name="culture">The culture in which the word is expressed.</param>
            <returns>
            	<c>true</c> if the specified word is plural; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.SingularToPlural(System.String,System.Globalization.CultureInfo)">
            <summary>
            Convers a word from singular to plural.
            </summary>
            <param name="word">The singular word to convert.</param>
            <param name="culture">The culture.</param>
            <returns>The plural word.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.PluralToSingular(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts a word from plural to singular.
            </summary>
            <param name="word">The plural word to convert.</param>
            <param name="culture">The culture.</param>
            <returns>The singular word.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.GetConverter(System.Globalization.CultureInfo,CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter)">
            <summary>
            Gets a converter for a given language.
            </summary>
            <param name="culture">The culture. May not be null.</param>
            <param name="defaultConverter">The default converter. If null, the english converter will be used.</param>
            <returns>An instance of the IGrammaticalNumberConverter interface.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.GrammarNumberConvertors">
            <summary>
            Gets a semicolon separated list of convertors types.
            </summary>
            <value>The grammar number convertors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.Converters">
            <summary>
            Gets a list of configured converters.
            </summary>
            <value>A list of configured converters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.EnglishConverter">
            <summary>
            Gets the english converter.
            </summary>
            <value>The english converter.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.GrammaticalNumberConvert.FrenchConverter">
            <summary>
            Gets the french converter.
            </summary>
            <value>The french converter.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter">
            <summary>
            Defines a class that can convert nouns from plural to singular.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.IsSingular(System.String)">
            <summary>
            Determines whether the specified word is singular.
            </summary>
            <param name="word">The word.</param>
            <returns>
            	<c>true</c> if the specified word is singular; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.SingularToPlural(System.String)">
            <summary>
            Convers a word from singular to plural.
            </summary>
            <param name="word">The singular word to convert.</param>
            <returns>The plural word.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.IsPlural(System.String)">
            <summary>
            Determines whether the specified word is plural.
            </summary>
            <param name="word">The word.</param>
            <returns>
            	<c>true</c> if the specified word is plural; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.PluralToSingular(System.String)">
            <summary>
            Converts a word from plural to singular.
            </summary>
            <param name="word">The plural word to convert.</param>
            <returns>The singular word.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IGrammaticalNumberConverter.Culture">
            <summary>
            Gets the supported culture for this converter
            </summary>
            <value>The culture.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffUtilities">
            <summary>
            A helper class to compute differences between two versions of a text or a text file.
            Implements 'An O(ND) Difference Algorithm and its Variations" by Eugene Myers Algorithmica Vol. 1 No. 2, 1986, p 251'.
            Based on the work found at http://www.mathertel.de
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffTextFiles(System.String,System.String)">
            <summary>
            Find the difference in two text files, comparing by text lines.
            </summary>
            <param name="fileA">A-version of the file (usualy the old one)</param>
            <param name="fileB">B-version of the file (usualy the new one)</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffTextFiles(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Find the difference in two text files, comparing by text lines.
            </summary>
            <param name="fileA">A-version of the file (usualy the old one)</param>
            <param name="fileB">B-version of the file (usualy the new one)</param>
            <param name="trimSpace">When set to true, all leading and trailing whitespace characters are stripped out before the comparation is done.</param>
            <param name="ignoreMultipleSpace">When set to true, all whitespace characters are converted to a single space character before the comparation is done.</param>
            <param name="ignoreCase">When set to true, all characters are converted to their lowercase equivivalence before the comparation is done.</param>
            <param name="ignoreNonWordBreakingSpaces">When set to true, all characters between words and non words characters are deleted before the comparation is done.</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffText(System.String,System.String)">
            <summary>
            Find the difference in two texts, comparing by text lines.
            </summary>
            <param name="TextA">A-version of the text (usualy the old one)</param>
            <param name="TextB">B-version of the text (usualy the new one)</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffText(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Find the difference in two text documents, comparing by text lines.
            </summary>
            <param name="TextA">A-version of the text (usualy the old one)</param>
            <param name="TextB">B-version of the text (usualy the new one)</param>
            <param name="trimSpace">When set to true, all leading and trailing whitespace characters are stripped out before the comparation is done.</param>
            <param name="ignoreMultipleSpace">When set to true, all whitespace characters are converted to a single space character before the comparation is done.</param>
            <param name="ignoreCase">When set to true, all characters are converted to their lowercase equivivalence before the comparation is done.</param>
            <param name="ignoreNonWordBreakingSpaces">When set to true, all characters between words and non words characters are deleted before the comparation is done.</param>
            <returns>A list of differences.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.DiffCodes(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This function converts all textlines of the text into unique numbers for every unique textline
            so further work can work only with simple numbers.
            </summary>
            <param name="aText">the input text</param>
            <param name="h">This extern initialized dictionary is used for storing all ever used textlines.</param>
            <param name="trimSpace">ignore leading and trailing space characters</param>
            <param name="ignoreCase">When set to true, all characters are converted to their lowercase equivivalence before the comparation is done.</param>
            <param name="ignoreMultipleSpace">When set to true, all whitespace characters are converted to a single space character before the comparation is done.</param>
            <param name="ignoreNonWordBreakingSpaces">When set to true, all characters between words and non words characters are deleted before the comparation is done.</param>
            <returns>a array of integers.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.SMS(CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32,CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32)">
            <summary>This is the algorithm to find the Shortest Middle Snake (SMS).</summary>
            <param name="DataA">sequence A</param>
            <param name="LowerA">lower bound of the actual range in DataA</param>
            <param name="UpperA">upper bound of the actual range in DataA (exclusive)</param>
            <param name="DataB">sequence B</param>
            <param name="LowerB">lower bound of the actual range in DataB</param>
            <param name="UpperB">upper bound of the actual range in DataB (exclusive)</param>
            <returns>a MiddleSnakeData record containing x,y and u,v</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.LCS(CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32,CodeFluent.Runtime.Utilities.DiffData,System.Int32,System.Int32)">
            <summary>This is the divide-and-conquer implementation of the longes common-subsequence (LCS)
            algorithm.
            The published algorithm passes recursively parts of the A and B sequences.
            To avoid copying these arrays the lower and upper bounds are passed while the sequences stay constant.</summary>
            <param name="DataA">sequence A</param>
            <param name="LowerA">lower bound of the actual range in DataA</param>
            <param name="UpperA">upper bound of the actual range in DataA (exclusive)</param>
            <param name="DataB">sequence B</param>
            <param name="LowerB">lower bound of the actual range in DataB</param>
            <param name="UpperB">upper bound of the actual range in DataB (exclusive)</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffUtilities.CreateDiffs(CodeFluent.Runtime.Utilities.DiffData,CodeFluent.Runtime.Utilities.DiffData)">
            <summary>Scan the tables of which lines are inserted and deleted,
            producing an edit script in forward order.</summary>
            dynamic array
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffUtilities.Item">
            <summary>Represents details of one difference.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.StartA">
            <summary>Gets the start Line number in Data A.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.StartB">
            <summary>Gets the start Line number in Data B.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.DeletedA">
            <summary>Gets the number of changes in Data A.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffUtilities.Item.InsertedB">
            <summary>Gets the number of changes in Data B.</summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffUtilities.SMSRD">
            <summary>Shortest Middle Snake Return Data</summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DiffData">
            <summary>Data on one input file being compared.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffData.Length">
            <summary>Number of elements (lines).</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffData.data">
            <summary>Buffer of numbers that will be compared.</summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.DiffData.modified">
            <summary>Array of booleans that flag for modified data.
            This is the result of the diff.
            This means deletedA in the first Data or inserted in the second Data.</summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DiffData.#ctor(System.Int32[])">
            <summary>Initialize the Diff-Data buffer.</summary>
            <param name="initData">reference to the buffer</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundPropertyCollection">
            <summary>
            Represents a list of Compound file properties.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.IndexOf(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Insert(System.Int32,CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.SetValue(System.Guid,System.String,System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name. May be null.</param>
            <param name="value">The value. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.GetValue``1(System.Guid,System.String,``0)">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="formatId">The format id.</param>
            <param name="name">The name. May be null.</param>
            <param name="defaultValue">The default value to use if the property was not found.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.GetValue(System.Guid,System.String,System.Object)">
            <summary>
            Gets a property value.
            </summary>
            <param name="formatId">The format id.</param>
            <param name="name">The name. May be null.</param>
            <param name="defaultValue">The default value to use if the property was not found.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Add(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Contains(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.CopyTo(CodeFluent.Runtime.Utilities.CompoundProperty[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Remove(CodeFluent.Runtime.Utilities.CompoundProperty)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Item(System.Guid,System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> with the specified format id and name.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Utilities.CompoundProperty"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Category">
            <summary>
            Gets or sets the category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.PresentationTarget">
            <summary>
            Gets or sets the presentation target.
            </summary>
            <value>The presentation target.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Manager">
            <summary>
            Gets or sets the manager.
            </summary>
            <value>The manager.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>The company.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Bytes">
            <summary>
            Gets or sets the bytes count.
            </summary>
            <value>The bytes count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Lines">
            <summary>
            Gets or sets the lines count.
            </summary>
            <value>The lines count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Paragraphs">
            <summary>
            Gets or sets the paragraphs count.
            </summary>
            <value>The paragraphs count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Slides">
            <summary>
            Gets or sets the slides count.
            </summary>
            <value>The slides count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.HiddenSlides">
            <summary>
            Gets or sets the hidden slides count.
            </summary>
            <value>The hidden slides count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.MMClips">
            <summary>
            Gets or sets the multimedia clips count.
            </summary>
            <value>The multimedia clips count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.ScaleCrop">
            <summary>
            Gets or sets a value indicating whether to scale crop.
            </summary>
            <value><c>true</c> if the document is scale cropped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.SharedDoc">
            <summary>
            Gets or sets a value indicating whether the document is shared.
            </summary>
            <value><c>true</c> if the document is shared; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.HyperLinksChanged">
            <summary>
            Gets or sets a value indicating whether hyperlinks have changed.
            </summary>
            <value><c>true</c> if hyperlinks have changed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LinksUpToDate">
            <summary>
            Gets or sets a value indicating whether links are up-to-date.
            </summary>
            <value><c>true</c> if links are up-to-date; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Notes">
            <summary>
            Gets or sets the notes count.
            </summary>
            <value>The notes count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>The author.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LastSavedBy">
            <summary>
            Gets or sets the name of the last author.
            </summary>
            <value>The name of the last author.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.RevisionNumber">
            <summary>
            Gets or sets the revision number.
            </summary>
            <value>The revision number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>The subject.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.ApplicationName">
            <summary>
            Gets or sets the name of the application.
            </summary>
            <value>The name of the application.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Comments">
            <summary>
            Gets or sets the comments.
            </summary>
            <value>The comments.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Template">
            <summary>
            Gets or sets the template.
            </summary>
            <value>The template.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Security">
            <summary>
            Gets or sets the security.
            </summary>
            <value>The security.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Characters">
            <summary>
            Gets or sets the characters count.
            </summary>
            <value>The characters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Pages">
            <summary>
            Gets or sets the pages count.
            </summary>
            <value>The pages count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.Words">
            <summary>
            Gets or sets the words count.
            </summary>
            <value>The words count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.CreateDate">
            <summary>
            Gets or sets the create date.
            </summary>
            <value>The create date.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LastPrintedDate">
            <summary>
            Gets or sets the last printed date.
            </summary>
            <value>The last printed.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.LastSavedDate">
            <summary>
            Gets or sets the last saved date.
            </summary>
            <value>The last saved date.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundPropertyCollection.TotalEditingTime">
            <summary>
            Gets or sets the total editing time.
            </summary>
            <value>The total editing time.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.IValueValidationFailureHandler">
            <summary>
            Defines an interface for value validation failure.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.IValueValidationFailureHandler.Handle(System.Object,System.Globalization.CultureInfo,CodeFluent.Runtime.Rules.ValueValidator,System.String,System.Object[])">
            <summary>
            Handles a validation failure for a specific value.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <param name="validator">The validator instance.</param>
            <param name="failureCode">The failure code.</param>
            <param name="arguments">The arguments.</param>
            <returns>The validation failure message. May not be null.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.SummaryPage">
            <summary>
            Defines a page for displaying the list of actions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.SummaryPage"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.OnActivated">
            <summary>
            Called when the page is activated.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.ShowActions">
            <summary>
            Shows the actions.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.SummaryPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.ActionsTextBox">
            <summary>
            The actions text box.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.SummaryPage.ActionsLabel">
            <summary>
            The actions panel.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.SummaryPage.ActionSeparator">
            <summary>
            Gets or sets the action separator.
            </summary>
            <value>The action separator.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonTabCollection">
            <summary>
            Defines a collection of ribbon tabs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.IndexOf(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Add(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Contains(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.CopyTo(CodeFluent.Runtime.Design.RibbonTab[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.Remove(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTabCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> with the specified title.
            </summary>
            <value>A ribbon tab instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> at the specified index.
            </summary>
            <value>A ribbon tab instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTabCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonTab">
            <summary>
            Defines a ribbon tab.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonTab"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.ComputeBounds">
            <summary>
            Computes the tab and children bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the tab.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintPanels(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the panels.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintTitle(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the title.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintHighlightedHeader(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints a highlighted tab header.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.PaintSelectedHeader(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the selected header.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.GetSelectedTabPath(System.Int32)">
            <summary>
            Gets the selected tab path.
            </summary>
            <param name="radius">The radius.</param>
            <returns>A graphics path or null if the tab cannot be drawn.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
            	<c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.HeaderBounds">
            <summary>
            Gets the header bounds.
            </summary>
            <value>The header bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.VisiblePanels">
            <summary>
            Gets the visible panels.
            </summary>
            <value>The visible panels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Panels">
            <summary>
            Gets or sets the panels.
            </summary>
            <value>The panels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.PreviousTab">
            <summary>
            Gets the previous tab.
            </summary>
            <value>The previous tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.NextTab">
            <summary>
            Gets the next tab.
            </summary>
            <value>The next tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon tab.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject"/> class.
            </summary>
            <param name="tab">The owner tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The default action for the control cannot be performed.
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Tab">
            <summary>
            Gets the owner tab.
            </summary>
            <value>The tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The bounds of control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonTab.TabAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The name of the control cannot be retrieved or set.
            </exception>
        </member>
        <member name="T:CodeFluent.Runtime.Design.GuidEditor">
            <summary>
            Defines a UITypeEditor for Guid types.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.GuidEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.AutoObject">
            <summary>
            Defines a utility class to implement objects with typed properties without private fields.
            This class supports automatically property change notifications and error validations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoObject"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoObject"/> class.
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.CreatePropertiesDictionary">
            <summary>
            Creates the properties dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.Validate(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Validates this instances.
            </summary>
            <param name="errors">The errors.</param>
            <param name="memberName">The member to validate or null to validate all members.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.Validate(System.String)">
            <summary>
            Validates the specified member name.
            </summary>
            <param name="memberName">The member to validate or null to validate all members.</param>
            <returns>A string if an error occured; null otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperty``1(System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <typeparam name="T">The property type</typeparam>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.GetProperty``1">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The property type</typeparam>
            <returns>The value automatically converted into the requested type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.GetPropertyType(System.String)">
            <summary>
            Gets the type of the specified property.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <returns>An instance of the Type class</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperties(System.String)">
            <summary>
            Sets properties using a comma-separated list of key/value pairs.
            All properties are cleared before set.
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperties(System.String,System.Boolean)">
            <summary>
            Sets properties using a comma-separated list of key/value pairs
            </summary>
            <param name="keyValuePairs">The key value pairs.</param>
            <param name="clear">if set to <c>true</c> properties are cleared before set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.SetProperty``1(System.String,``0)">
            <summary>
            Sets a specified property value.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="name">The property name. May not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.GetProperty``1(System.String,``0)">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The property type.</typeparam>
            <param name="name">The property name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoObject.OnPropertyChanged(System.String)">
            <summary>
            Called when a property changed.
            </summary>
            <param name="name">The property name.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Design.AutoObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.DefaultValues">
            <summary>
            Gets the properties default values.
            </summary>
            <value>The default values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.Properties">
            <summary>
            Gets the properties and their values.
            </summary>
            <value>The properties and their values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.System#ComponentModel#IDataErrorInfo#Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
            <value></value>
            <returns>
            An error message indicating what is wrong with this object. The default is an empty string ("").
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoObject.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType">
            <summary>
            Defines the type of an NTFS alternate stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.Data">
            <summary>
            Standard data. This corresponds to the NTFS $DATA stream type on the default (unnamed) data stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.ExtendedAttributeData">
            <summary>
            Extended attribute data. This corresponds to the NTFS $EA stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.SecurityData">
            <summary>
            Security descriptor data.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.AlternateData">
            <summary>
            Alternative data streams. This corresponds to the NTFS $DATA stream type on a named data stream.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.Link">
            <summary>
            Hard link information. This corresponds to the NTFS $FILE_NAME stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.PropertyData">
            <summary>
            Property data.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.ObjectId">
            <summary>
            Objects identifiers. This corresponds to the NTFS $OBJECT_ID stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.ReparseData">
            <summary>
            Reparse points. This corresponds to the NTFS $REPARSE_POINT stream type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.SparseDock">
            <summary>
            Sparse file. This corresponds to the NTFS $DATA stream type for a sparse file.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.BinaryServices.NtfsAlternateStreamType.TransactionalNtfsData">
            <summary>
            Transactional NTFS (TxF) data stream. This corresponds to the NTFS $TXF_DATA stream type.
            </summary>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.Output">
            <summary>
            Defines the class visible to ActiveX scripts.
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code. 
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Output.WriteBlock(System.Int32)">
            <summary>
            Writes a block.
            </summary>
            <param name="index">The block index.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Output.Write(System.Object)">
            <summary>
            Writes the specified value.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.ITemplate">
            <summary>
            Defines an interface that a base template type can implement to gather information on the running template.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.ITemplate.Initialize(System.IO.TextWriter,System.Collections.IDictionary,CodeFluent.Model.Common.Templating.Template)">
            <summary>
            Initializes this base template type instance.
            </summary>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
            <param name="template">The template.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration">
            <summary>
            Defines an XmlDeclaration that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration"/> class.
            </summary>
            <param name="version">The XML version; see the <see cref="P:System.Xml.XmlDeclaration.Version"/> property.</param>
            <param name="encoding">The encoding scheme; see the <see cref="P:System.Xml.XmlDeclaration.Encoding"/> property.</param>
            <param name="standalone">Indicates whether the XML document depends on an external DTD; see the <see cref="P:System.Xml.XmlDeclaration.Standalone"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDeclaration.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SortableBindingList`1">
            <summary>
            Provides a generic collection that supports data binding and sorting.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ISortableList`1">
            <summary>
            Defines a sortable list.
            </summary>
            <typeparam name="T">The type of items in the list.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ISortableList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified Comparison.
            </summary>
            <param name="comparison">The Comparison to use when comparing elements.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ISortableList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in a range of elements in list using the specified comparer.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The IComparer implementation to use when comparing elements, or null to use the default comparer Default.</param>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SortableBindingList`1.ListChangedTypeDeleting">
            <summary>
            Defines a deleting list changed event type.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingList`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingList`1"/> class.
            </summary>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> of items to be contained in the <see cref="T:System.ComponentModel.BindingList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.CreateInstance(System.Type)">
            <summary>
            Creates an instance of the SortableBindingList for the specified type.
            </summary>
            <param name="type">The argument type.</param>
            <returns>
            An instance of the SortableBindingList with the specified type argument.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.CreateInstance">
            <summary>
            Creates an instance of the SortableBindingList.
            </summary>
            <returns>
            An instance of the SortableBindingList.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort">
            <summary>
            Sorts the elements in the entire list using the default comparer. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the default comparer. 
            </summary>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Collections.Generic.IComparer{`0},System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0},System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="index">The length of the range to sort.</param>
            <param name="count">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The comparer. If null, the default comparer will be used.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer.
            </summary>
            <param name="comparison">The Comparison to use when comparing elements.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.String)">
            <summary>
            Sorts the elements in the entire list by a property, using the default comparer.
            </summary>
            <param name="property">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Sort(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the elements in the entire list using the default comparer.
            </summary>
            <param name="property">The property name.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the items.
            </summary>
            <param name="property">The property to sort by.</param>
            <param name="direction">The direction to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ApplySortCore(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the items.
            </summary>
            <param name="property">The property to sort by.</param>
            <param name="direction">The direction to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">You are removing a newly added item and <see cref="P:System.ComponentModel.IBindingList.AllowRemove"/> is set to false. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.RemoveSortCore">
            <summary>
            Removes any sort applied with <see cref="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)"/> if sorting is implemented in a derived class; otherwise, raises <see cref="T:System.NotSupportedException"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">Method is not overridden in a derived class. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Returns the <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties on each item used to bind data.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects to find in the collection as bindable. This can be null.</param>
            <returns>
            The <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> that represents the properties on each item used to bind data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Returns the name of the list.
            </summary>
            <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor"/> objects, for which the list name is returned. This can be null.</param>
            <returns>The name of the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of the list.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes the elements from the specified collection.
            </summary>
            <param name="collection">The collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Clone">
            <summary>
            Clones the specified list.
            </summary>
            <returns>A new instance of the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.Clone(System.Boolean)">
            <summary>
            Clones the specified list.
            </summary>
            <param name="deep">if set to <c>true</c> the objects contained in the list will be cloned as well if they implement the System.ICloneable interface.</param>
            <returns>A new instance of the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToArray">
            <summary>
            Copies the elements of the list to a new array.
            </summary>
            <returns>An array of elements in the list.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingList`1.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.-or- null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.-or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SortProperty">
            <summary>
            Gets the property that is being used for sorting.
            </summary>
            <value></value>
            <returns>The property that is being used for sorting.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SortDirection">
            <summary>
            Gets the direction of the sort.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.ComponentModel.ListSortDirection"/> values.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SupportsSortingCore">
            <summary>
            Gets a value indicating whether the list supports sorting.
            </summary>
            <value></value>
            <returns>true if the list supports sorting; otherwise, false. The default is false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.SortDirectionCore">
            <summary>
            Gets the direction the list is sorted.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.ComponentModel.ListSortDirection"/> values. The default is <see cref="F:System.ComponentModel.ListSortDirection.Ascending"/>. </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.Last">
            <summary>
            Gets the last item in the list.
            </summary>
            <value>The last item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.First">
            <summary>
            Gets the first item in the list.
            </summary>
            <value>The first item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingList`1.IsSortedCore">
            <summary>
            Gets a value indicating whether the list is sorted.
            </summary>
            <value></value>
            <returns>true if the list is sorted; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ParentProcessUtilities">
            <summary>
            A utility class to determine a process parent.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParentProcessUtilities.GetParentProcess">
            <summary>
            Gets the parent process of the current process.
            </summary>
            <returns>An instance of the Process class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParentProcessUtilities.GetParentProcess(System.Int32)">
            <summary>
            Gets the parent process of specified process.
            </summary>
            <param name="id">The process id.</param>
            <returns>An instance of the Process class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParentProcessUtilities.GetParentProcess(System.IntPtr)">
            <summary>
            Gets the parent process of a specified process.
            </summary>
            <param name="handle">The process handle.</param>
            <returns>An instance of the Process class.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IKeyable`1">
            <summary>
            Defines an item that has a key.
            </summary>
            <typeparam name="Tk">The type of the key.</typeparam>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.IKeyable`1.KeyChanged">
            <summary>
            Occurs when the key has changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IKeyable`1.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ErrorEventArgs">
            <summary>
            Provides data for an error event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ErrorEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ErrorEventArgs"/> class.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ErrorEventArgs.Error">
            <summary>
            Gets or sets the error.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ErrorEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.ErrorEventArgs"/> is handled.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DataBindingEvaluator">
            <summary>
            A utility class equivalent to the System.Web.DataBinder class, but that does not require a reference to the System.Web assembly.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.Eval(System.Object,System.String,System.String)">
            <summary>
            Evaluates data-binding expressions at run time.
            </summary>
            <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
            <param name="expression">The navigation path from the container object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <param name="format">A .NET Framework format string (like those used by String.Format) that converts the Object instance returned by the data-binding expression to a String object.</param>
            <returns>
            A String object that results from evaluating the data-binding expression and converting it to a string type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.Eval(System.Object,System.String,System.IFormatProvider,System.String)">
            <summary>
            Evaluates data-binding expressions at run time.
            </summary>
            <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
            <param name="expression">The navigation path from the container object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <param name="provider">The format provider.</param>
            <param name="format">A .NET Framework format string (like those used by String.Format) that converts the Object instance returned by the data-binding expression to a String object.</param>
            <returns>A String object that results from evaluating the data-binding expression and converting it to a string type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.Eval(System.Object,System.String)">
            <summary>
            Evaluates data-binding expressions at run time.
            </summary>
            <param name="container">The object reference against which the expression is evaluated. This must be a valid object identifier in the page's specified language.</param>
            <param name="expression">The navigation path from the container object to the public property value to be placed in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <returns>
            A String object that results from evaluating the data-binding expression and converting it to a string type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.GetPropertyValue(System.Object,System.String)">
            <summary>
            Retrieves the value of the specified property of the specified object.
            </summary>
            <param name="container">The object that contains the property.</param>
            <param name="propName">The name of the property that contains the value to retrieve.</param>
            <returns>The value of the specified property.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DataBindingEvaluator.GetIndexedPropertyValue(System.Object,System.String)">
            <summary>
            Retrieves the value of a property of the specified container and navigation path.
            </summary>
            <param name="container">The object reference against which expr is evaluated. This must be a valid object identifier in the specified language for the page.</param>
            <param name="expression">The navigation path from the container object to the public property value to place in the bound control property. This must be a string of property or field names separated by periods, such as Tables[0].DefaultView.[0].Price in C# or Tables(0).DefaultView.(0).Price in Visual Basic.</param>
            <returns>An object that results from the evaluation of the data-binding expression.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFileStream">
            <summary>
            Defines a stream in a compound file.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStream.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Parent">
            <summary>
            Gets the parent file.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Path">
            <summary>
            Gets the stream path.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Name">
            <summary>
            Gets the stream name.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Length">
            <summary>
            Gets the stream length.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStream.Stream">
            <summary>
            Gets the physical underlying stream.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFileStorage">
            <summary>
            Defines a storage container in a compound file.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetChildStorage(System.String)">
            <summary>
            Gets a child storage by its name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>An instance of the CompoundFileStorage class or null if not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetOrAddChildStorage(System.String)">
            <summary>
            Gets a child storage by its name or create a new one if not found.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>An instance of the CompoundFileStorage class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetChildStream(System.String)">
            <summary>
            Gets a child stream by its name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            An instance of the CompoundFileStream class or null if not found.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileStorage.GetOrAddChildStream(System.String)">
            <summary>
            Gets a child stream by its name or create a new one if not found.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns>
            An instance of the CompoundFileStream class.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.Parent">
            <summary>
            Gets the parent file.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.IsRoot">
            <summary>
            Gets a value indicating whether this instance is the root storage.
            </summary>
            <value>
              <c>true</c> if this instance is the root storage; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.Path">
            <summary>
            Gets the storage path.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.Name">
            <summary>
            Gets the storage name.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.ChildStorages">
            <summary>
            Gets a list of child storages.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFileStorage.ChildStreams">
            <summary>
            Gets a list of child streams.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions">
            <summary>
            Defines CodeFluent generation options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.None">
            <summary>
            No options is set.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.CompiledWithVisualStudio">
            <summary>
            This assembly has been compiled with Microsoft Visual Studio.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.CompiledWithCodeFluent">
            <summary>
            This assembly has been compiled with CodeFluent.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions.CompiledWithTemplateEngine">
            <summary>
            This assembly has been compiled with the CodeFluent Template Engine
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LuhnValidator">
            <summary>
            Provides validation of a string using the Luhn algorithm.
            See http://en.wikipedia.org/wiki/Luhn_algorithm for more information
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.SimpleStringValidator">
            <summary>
            Defines a base class for simple string validation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.SimpleStringValidator"/> class.
            </summary>
            <param name="failureHandler">The failure handler.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.GetFailureCode(System.Object,System.String,System.Enum)">
            <summary>
            Gets the failure code.
            </summary>
            <param name="owner">The owner.</param>
            <param name="memberName">Name of the member.</param>
            <param name="code">The code.</param>
            <returns>A string representing the failure code.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.SimpleStringValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.SimpleStringValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.SimpleStringValidator.BaseFailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.SimpleStringValidator.BaseFailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.SimpleStringValidator.BaseFailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Boolean,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.LuhnValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string has a valid Luhn checksum.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.IsLuhnValid(System.String,System.Boolean)">
            <summary>
            Determines whether the specified string has a valid Luhn checksum.
            </summary>
            <param name="value">The input text. If null, false, will be returned.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <returns>
            	<c>true</c> if the specified string has a valid Luhn checksum; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.CalculateLuhnCheckDigit(System.String,System.Boolean)">
            <summary>
            Calculates the luhn check digit.
            </summary>
            <param name="value">The input text.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <returns>
            The Luhn checksum or -1 if the input string contains invalid characters.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LuhnValidator.CalculateLuhnCheckDigit(System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculates the luhn check digit.
            </summary>
            <param name="value">The input text.</param>
            <param name="start">The start offset in the input text.</param>
            <param name="count">The count of digits to consider in the input text.</param>
            <param name="allowWhitespaces">if set to <c>true</c> whitespace characters are allowed.</param>
            <returns>
            The Luhn checksum or -1 if the input string contains invalid characters.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LuhnValidator.AllowWhitespaces">
            <summary>
            Gets or sets a value indicating whether whitespace characters are allowed.
            </summary>
            <value><c>true</c> if whitespace characters are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LuhnValidator.FailureCode.Failed">
            <summary>
            The string is not a valid Luhn string.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.FileExtensionIcon">
            <summary>
            Represents a set of utilities to manager file extension icons.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.SaveFromExtension(System.String,System.Boolean,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an icon from a file extension only.
            </summary>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is saved; otherwise the big icon is saved.</param>
            <param name="outputFile">The output file. May not be null.</param>
            <param name="format">The target image format. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.SaveFromPath(System.String,System.Boolean,System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an icon from a file path.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is saved; otherwise the big icon is saved.</param>
            <param name="outputFile">The output file. May not be null.</param>
            <param name="format">The target image format. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFromExtension(System.String)">
            <summary>
            Gets an Icon object from a file extension only.
            </summary>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <returns>An instance of the Icon class. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFromExtension(System.String,System.Boolean)">
            <summary>
            Gets an Icon object from a file extension only.
            </summary>
            <param name="fileExtension">The input file extension. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is returned; otherwise the big icon is returned.</param>
            <returns>
            An instance of the Icon class. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.FileExtensionIcon.GetFromPath(System.String,System.Boolean)">
            <summary>
            Gets an Icon object from a file path.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="small">if set to <c>true</c> the small icon is returned; otherwise the big icon is returned.</param>
            <returns>
            An instance of the Icon class. May not be null.
            </returns>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.TypeCreateEventArgs">
            <summary>
            Provides data for the TypeCreate event.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.TypeCreateEventArgs.#ctor(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.TypeCreateEventArgs"/> class.
            </summary>
            <param name="unit">The CodeDom compile unit. May not be null.</param>
            <param name="namespace">The type namespace. May not be null.</param>
            <param name="type">The created type. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.TypeCreateEventArgs.Unit">
            <summary>
            Gets the CodeDom compile unit.
            </summary>
            <value>The unit.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.TypeCreateEventArgs.Namespace">
            <summary>
            Gets the type namespace.
            </summary>
            <value>The type namespace.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.TypeCreateEventArgs.Type">
            <summary>
            Gets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference">
            <summary>
            Defines an XmlLineInfoEntityReference that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference"/> class.
            </summary>
            <param name="name">The name of the entity reference; see the <see cref="P:System.Xml.XmlEntityReference.Name"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoEntityReference.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.TokenElevationType">
            <summary>
            Defines the token elevation type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Unknown">
            <summary>
            The token elevation type cannot be determined or the running Windows version does not support token elevation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Default">
            <summary>
            The token does not have a linked token.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Full">
            <summary>
            The token is linked to an elevated token. You are running as an administrator without UAC disabled.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.TokenElevationType.Limited">
            <summary>
            The token is linked to a limited token. You are running as an administrator with UAC enabled.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SilverlightVersion">
            <summary>
            Defines the Silverlight CLR versions.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Unspecified">
            <summary>
            The CLR is not Silverlight.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight1">
            <summary>
            Silverlight 1. Not supported by CodeFluent Entities.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight2">
            <summary>
            Silverlight 2.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight3">
            <summary>
            Silverlight 3.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.Silverlight4">
            <summary>
            Silverlight 3.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.WindowsPhone70">
            <summary>
            Silverlight for Windows Phone 7.0
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.SilverlightVersion.WindowsPhone71">
            <summary>
            Silverlight for Windows Phone 7.1
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ScriptEngine">
            <summary> 
            Represents a Windows Script Engine such as JScript, VBScript, etc. 
            </summary> 
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEngine.MethodName">
            <summary>
            The name of the function used for simple evaluation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ScriptEngine.DefaultLanguage">
            <summary>
            The default scripting language name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.#ctor(System.String)">
            <summary> 
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ScriptEngine"/> class. 
            </summary> 
            <param name="language">The scripting language. Standard Windows Script engines names are 'jscript' or 'vbscript'.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.SetNamedItem(System.String,System.Object)">
            <summary> 
            Adds the name of a root-level item to the scripting engine's name space. 
            </summary> 
            <param name="name">The name. May not be null.</param> 
            <param name="value">The value. It must be a ComVisible object.</param> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String,System.String)">
            <summary> 
            Evaluates an expression using the specified language. 
            </summary> 
            <param name="language">The language.</param> 
            <param name="expression">The expression. May not be null.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String,System.String,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary> 
            Evaluates an expression using the specified language, with an optional array of named items. 
            </summary> 
            <param name="language">The language.</param> 
            <param name="expression">The expression. May not be null.</param> 
            <param name="namedItems">The named items array.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Eval(System.String)">
            <summary> 
            Evaluates an expression. 
            </summary> 
            <param name="expression">The expression. May not be null.</param> 
            <returns>The result of the evaluation.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Parse(System.String)">
            <summary> 
            Parses the specified text and returns an object that can be used for evaluation. 
            </summary> 
            <param name="text">The text to parse.</param> 
            <returns>An instance of the ParsedScript class.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ScriptEngine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.EnumeratorConverter`2">
            <summary>
            A utility class to convert generic enumerators
            </summary>
            <typeparam name="T1">The first generic type. T1 needs to be of T2 type.</typeparam>
            <typeparam name="T2">The second generic type. T2 needs to be a base class for T1.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T1 instances enumerator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerable{`1})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T1 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerator{`1})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T1 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerator{`1})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T1 instances enumerator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T2 instances enumerator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T2 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerable(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Converts the enumerable.
            </summary>
            <param name="e">The enumerable.</param>
            <returns>A T2 instances enumerable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.EnumeratorConverter`2.GetEnumerator(System.Collections.Generic.IEnumerator{`0})">
            <summary>
            Converts the enumerator.
            </summary>
            <param name="e">The enumerator.</param>
            <returns>A T2 instances enumerator.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Web.Utilities.EditableUri">
            <summary>
                Provides an editable object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="uriString">A string that identifies the resource to be represented by the instance.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.String,System.UriKind)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="uriString">A string that identifies the resource to be represented by the instance.</param>
            <param name="uriKind">Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="uri">The URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Uri,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="relativeUri">The relative URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Uri,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="baseUri">The base URI.</param>
            <param name="relativeUri">The relative URI to add to the base URI.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Web.Utilities.EditableUri"/> class.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="streamingContext">The streaming context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetComponents(System.UriComponents,System.UriFormat)">
            <summary>
            Gets the specified components of the current instance using the specified escaping for special characters.
            </summary>
            <param name="components">A bitwise combination of the UriComponents values that specifies which parts of the current instance to return to the caller.</param>
            <param name="format">One of the UriFormat values that controls how special characters are escaped.</param>
            <returns>A string that contains the components.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetLeftPart(System.UriPartial)">
            <summary>
            Gets the specified portion of a uri instance.
            </summary>
            <param name="part">One of the UriPartial values that specifies the end of the URI portion to return.</param>
            <returns>A string that contains the specified portion of the uri instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.IsBaseOf(System.Uri)">
            <summary>
            Determines whether the current uri instance is a base of the specified uri instance.
            </summary>
            <param name="uri">The specified uri instance to test.</param>
            <returns>true if the current uri instance is a base of uri; otherwise, false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.IsWellFormedOriginalString">
            <summary>
            Indicates whether the string used to construct this uri was well-formed and is not required to be further escaped.
            </summary>
            <returns>A bool value that is true if the string was well-formed in accordance with RFC 2396 and RFC 2732; else false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.MakeRelativeUri(System.Uri)">
            <summary>
            Determines the difference between two uri instances.
            </summary>
            <param name="toUri">The URI to compare to the current URI.</param>
            <returns>If the hostname and scheme of this URI instance and toUri are the same, then this method returns a relative uri that, when appended to the current URI instance, yields toUri. If the hostname or scheme is different, then this method returns a Uri that represents the toUri parameter.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.Equals(CodeFluent.Runtime.Web.Utilities.EditableUri)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="other"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.op_Equality(CodeFluent.Runtime.Web.Utilities.EditableUri,CodeFluent.Runtime.Web.Utilities.EditableUri)">
            <summary>
            Determines whether two EditableUri instances have the same value.
            </summary>
            <param name="uri1">A EditableUri instance to compare with uri2.</param>
            <param name="uri2">A EditableUri instance to compare with uri1.</param>
            <returns>
            A bool value that is true if the EditableUri instances are equivalent; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.op_Inequality(CodeFluent.Runtime.Web.Utilities.EditableUri,CodeFluent.Runtime.Web.Utilities.EditableUri)">
            <summary>
            Determines whether two EditableUri instances do not have the same value.
            </summary>
            <param name="uri1">A EditableUri instance to compare with uri2.</param>
            <param name="uri2">A EditableUri instance to compare with uri1.</param>
            <returns>
            A bool value that is true if the EditableUri instances are not equivalent; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.AbsolutePath">
            <summary>
            Gets or sets the absolute path of the URI.
            </summary>
            <value>A string containing the absolute path to the resource.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.AbsoluteUri">
            <summary>
            Gets the absolute URI.
            </summary>
            <value>A string containing the entire URI.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Authority">
            <summary>
            Gets the Domain Name System (DNS) host name or IP address and the port number for a server.
            </summary>
            <value>A string containing the authority component of the URI represented by this instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.DnsSafeHost">
            <summary>
            Gets an unescaped host name that is safe to use for DNS resolution.
            </summary>
            <value>A string that contains the unescaped host part of the URI that is suitable for DNS resolution; or the original unescaped host string, if it is already suitable for resolution.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Fragment">
            <summary>
            Gets or sets the escaped URI fragment.
            </summary>
            <value>A string that contains any URI fragment information.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EscapeParameterSeparator">
            <summary>
            Gets or sets a value indicating whether the parameter separator (ampersand) must be escaped.
            </summary>
            <value>
            	<c>true</c> if the parameter separator must be escaped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Host">
            <summary>
            Gets or sets the host component of this instance.
            </summary>
            <value>A string that contains the host name. This is usually the DNS host name or IP address of the server.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.HostNameType">
            <summary>
            Gets the type of the host name specified in the URI.
            </summary>
            <value>A member of the UriHostNameType enumeration.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsDefaultPort">
            <summary>
            Gets whether the port value of the URI is the default for this scheme.
            </summary>
            <value>
            A bool value that is true if the value in the Port property is the default port for this scheme; otherwise, false.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsFile">
            <summary>
            Gets a value indicating whether the specified uri is a file URI.
            </summary>
            <value>A bool value that is true if the uri is a file URI; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsLoopback">
            <summary>
            Gets whether the specified uri references the local host.
            </summary>
            <value>A bool value that is true if this uri references the local host; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsAbsoluteUri">
            <summary>
            Gets whether the uri instance is absolute.
            </summary>
            <value>A bool value that is true if the uri instance is absolute; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.IsUnc">
            <summary>
            Gets whether the specified uri is a universal naming convention (UNC) path.
            </summary>
            <value>A bool value that is true if the uri is a UNC path; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.LocalPath">
            <summary>
            Gets a local operating-system representation of a file name.
            </summary>
            <value>A string that contains the local operating-system representation of a file name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.OriginalString">
            <summary>
            Gets the original URI string that was passed to the uri constructor.
            </summary>
            <value>A string containing the exact URI specified when this instance was constructed; otherwise, string.Empty.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.PathAndQuery">
            <summary>
            Gets the AbsolutePath and Query properties separated by a question mark (?).
            </summary>
            <value>A string that contains the AbsolutePath and Query properties separated by a question mark (?).</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Port">
            <summary>
            Gets or sets the port number of this URI.
            </summary>
            <value>An int value that contains the port number for this URI.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Query">
            <summary>
            Gets or sets any query information included in the specified URI.
            </summary>
            <value>A string that contains any query information included in the specified uri.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Scheme">
            <summary>
            Gets or sets the scheme name for this URI.
            </summary>
            <value>A string that contains the scheme for this URI, converted to lowercase.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Segments">
            <summary>
            Gets an array containing the path segments that make up the specified URI.
            </summary>
            <value>A string array that contains the path segments that make up the specified uri.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.UserEscaped">
            <summary>
            Indicates that the URI string was completely escaped before the uri instance was created.
            </summary>
            <value>A bool value that is true if the URI string was completely escaped before the uri instance was created; otherwise, false.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.UserInfo">
            <summary>
            Gets or sets the user name, password, or other user-specific information associated with the specified URI.
            </summary>
            <value>A string that contains the user information associated with the URI. The value does not include the '@' character reserved for delimiting the user information part of the URI.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Uri">
            <summary>
            Gets the underlying URI object.
            </summary>
            <value>An Uri instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.Parameters">
            <summary>
            Gets a collection of uri parameters.
            </summary>
            <value>An instance of the EditableUriParameterCollection type.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection">
            <summary>
            Represents a collection of EditableUri parameters.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Set(System.String,System.Object)">
            <summary>
            Sets the specified parameter value.
            If the parameter does not exits, it will be added, otherwise, it's value will be replaced.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
            <param name="value">The parameter value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.RemoveAll">
            <summary>
            Removes all parameters.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Remove(System.String)">
            <summary>
            Removes the specified parameter.
            </summary>
            <param name="name">The parameter name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets a typed parameter value.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="name">The parameter name. May not be null.</param>
            <param name="defaultValue">The default value if the parameter was not found or could not be converted to the target type.</param>
            <returns>An instance of the T type or defaultValue.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Names">
            <summary>
            Gets the parameters names.
            </summary>
            <value>A list of string representing the parameters names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Values">
            <summary>
            Gets the parameters values.
            </summary>
            <value>A list of typed object representing the parameters values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Item(System.String)">
            <summary>
            Gets or sets a parameter with the specified name.
            </summary>
            <value>The parameter value or null if it does not exists.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Web.Utilities.EditableUri.EditableUriParameterCollection.Count">
            <summary>
            Gets the parameters count.
            </summary>
            <value>An int value representing the number of parameters in the collection.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFile">
            <summary>
            A utility class to read and write Compound File. See [MS-CFB]: Compound File Binary File Format for more information at msdn.microsoft.com/en-us/library/dd942138.aspx.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DiFatHeaderCount">
            <summary>
            Defines the number of integrated DiFat sectors.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DirectoryEntriesPerSector">
            <summary>
            Defines the number of directory entries per sector.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.HeaderSize">
            <summary>
            Defines the file header size.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.SummaryInformationFormatId">
            <summary>
            Defines the SummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.SummaryInformationStreamName">
            <summary>
            Defines the SummaryInformation stream name.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DocSummaryInformationFormatId">
            <summary>
            Defines the DocSummaryInformation FMTID.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.CompoundFile.DocSummaryInformationStreamName">
            <summary>
            Defines the DocSummaryInformation stream name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Load(System.IO.Stream)">
            <summary>
            Loads the file from the specified input stream.
            </summary>
            <param name="inputStream">The input stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Load(System.String)">
            <summary>
            Loads the file from the specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Save(System.String)">
            <summary>
            Saves the file to specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Save(System.IO.Stream)">
            <summary>
            Saves the file to the specified output stream.
            </summary>
            <param name="outputStream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.SetProperty(System.Guid,System.Int32,System.Object)">
            <summary>
            Sets a property value.
            </summary>
            <param name="fmtid">The property fmtid.</param>
            <param name="id">The property id.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFile.GetProperty``1(System.Guid,System.Int32,``0)">
            <summary>
            Gets a property value.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="fmtid">The property fmtid.</param>
            <param name="id">The property id.</param>
            <param name="defaultValue">The default value if the property was not found or if the value could not be converted into expected type.</param>
            <returns>The property value.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.MiniStreamCutoff">
            <summary>
            Gets the mini stream cutoff value.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.SectorSize">
            <summary>
            Gets the sector size.
            </summary>
            <value>
            The sector size.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.MiniSectorSize">
            <summary>
            Gets the mini sector size.
            </summary>
            <value>
            The the mini sector size.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.FatEntriesPerSector">
            <summary>
            Gets the number or fat entries per sector.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.RootStorage">
            <summary>
            Gets the root storage container.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.ClassId">
            <summary>
            Gets or sets the CLSID.
            </summary>
            <value>
            The CLSID.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Author">
            <summary>
            Gets or sets the author.
            </summary>
            <value>
            The author.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Company">
            <summary>
            Gets or sets the company.
            </summary>
            <value>
            The company.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Subject">
            <summary>
            Gets or sets the subject.
            </summary>
            <value>
            The subject.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Keywords">
            <summary>
            Gets or sets the keywords.
            </summary>
            <value>
            The keywords.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundFile.Comments">
            <summary>
            Gets or sets the comments.
            </summary>
            <value>
            The comments.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RequiredValidator">
            <summary>
            Provides validation of an object that must not be null or empty.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RequiredValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.LuhnValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="trim">if set to <c>true</c> the value is trimmed if it's a string.</param>
            <param name="allowEmpty">if set to <c>true</c> empty strings are allowed.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RequiredValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RequiredValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RequiredValidator.Trim">
            <summary>
            Gets or sets a value indicating whether a string only composed of whitespaces is allowed.
            </summary>
            <value><c>true</c> if a string only composed of whitespace characters is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RequiredValidator.AllowEmpty">
            <summary>
            Gets or sets a value indicating whether an empty string is allowed.
            </summary>
            <value><c>true</c> if an empty string is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RequiredValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RequiredValidator.FailureCode.Null">
            <summary>
            The object is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RequiredValidator.FailureCode.Empty">
            <summary>
            The object is an empty string.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceRangeCollection">
            <summary>
            Defines a collection of trace ranges
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.GetStackTrace">
            <summary>
            Gets the stack trace.
            </summary>
            <returns>A string representing the stack trace.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.GetStackTrace(System.Int32)">
            <summary>
            Gets the stack trace.
            </summary>
            <param name="maxLines">The maximum number of lines to return.</param>
            <returns>A string representing the stack trace.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(CodeFluent.Runtime.Diagnostics.ITraceable)">
            <summary>
            Traces the specified traceable object.
            </summary>
            <param name="obj">The object to trace. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Text.StringBuilder,CodeFluent.Runtime.Diagnostics.ITraceable)">
            <summary>
            Traces the specified traceable object.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to trace the object to. May not null.</param>
            <param name="obj">The object to trace. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="obj">The object to trace. May not be null.</param>
            <returns>A string representing the traced object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Text.StringBuilder,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="sb">The <see cref="T:System.Text.StringBuilder"/> to trace the object to. May not null.</param>
            <param name="obj">The object to trace. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.ParseConfigurationTraceRanges(System.String)">
            <summary>
            Parses a formatted text and determines what trace ranges it defines.
            format is 'levelX-levelY;levelZ;!levelW;!LevelS-LevelX;'.
            * means all level.
            !* means no level.
            example 1: "*;!100-110" means all level, but 100 to 110
            example 2: "!*;100-110" means no level, but 100 to 110
            example 3: "" means no level (eq. to !*)
            </summary>
            <param name="name">The configuration parameter name to parse. May be null.</param>
            <returns>An array of TraceRange instances.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.ParseTraceRanges(System.String)">
            <summary>
            Parses a formatted text and determines what trace ranges it defines.
            format is 'levelX-levelY;levelZ;!levelW;!LevelS-LevelX;'.
            * means all level.
            !* means no level.
            example 1: "*;!100-110" means all level, but 100 to 110
            example 2: "!*;100-110" means no level, but 100 to 110
            example 3: "" means no level (eq. to !*)
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <returns>An array of TraceRange instances.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Add(CodeFluent.Runtime.Diagnostics.TraceRange)">
            <summary>
            Adds the specified range to the collection.
            </summary>
            <param name="range">The range to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTrace(System.Int64)">
            <summary>
            Determines if a given level must be traced.
            </summary>
            <param name="traceLevel">The trace level to check.</param>
            <returns>True if the level must be trace; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Collections.IDictionary,System.String)">
            <summary>
            Traces the specified dictionary.
            </summary>
            <param name="level">The trace level.</param>
            <param name="dictionary">The input dictionary. May be null.</param>
            <param name="prefix">The prefix to prepend to the trace. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Collections.IDictionary)">
            <summary>
            Traces the specified dictionary.
            </summary>
            <param name="dictionary">The input dictionary. may be null.</param>
            <returns>
            A string representing the traced dictionary.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Enum,System.Object)">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Object,System.Object[])">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Enum,System.Object,System.Object[])">
            <summary>
            Traces the specified object.
            </summary>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Trace(System.Int32,System.Enum,System.Object,System.Object[])">
            <summary>
            Traces the specified object.
            </summary>
            <param name="skipFrames">The number of frames to skip.</param>
            <param name="level">The level.</param>
            <param name="value">The input object. May be null.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.TraceAlways(System.Object)">
            <summary>
            Always traces the object, whether traces or trace levels are enabled.
            </summary>
            <param name="value">The input object. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Current">
            <summary>
            Gets the current trace range collection.
            </summary>
            <value>The current collection. May not be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceLevels">
            <summary>
            Gets or sets a value indicating whether trace levels must be traced.
            </summary>
            <value><c>true</c> if trace levels must be traced; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceMethodName">
            <summary>
            Gets or sets a value indicating whether method name must be traced.
            </summary>
            <value>
            	<c>true</c> if method name must be traced; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceTypeName">
            <summary>
            Gets or sets a value indicating whether originating type name must be traced.
            </summary>
            <value><c>true</c> if originating type name must be traced; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Text">
            <summary>
            Gets or sets the trace range original definition text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.DisplayName">
            <summary>
            Gets the trace range resulting text.
            </summary>
            <value>The result text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.MustTraceAlways">
            <summary>
            Gets or sets a value indicating whether everything is traced, even if level does not match.
            </summary>
            <value><c>true</c> if trace always; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.IsEnabled">
            <summary>
            Gets or sets a value indicating whether tracing is enabled.
            </summary>
            <value>
            	<c>true</c> if tracing is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRangeCollection.Count">
            <summary>
            Gets the count of ranges.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownSeparator">
            <summary>
            Defines a ribbon dropdown separator.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownItem">
            <summary>
            Defines a ribbon dropdown item.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl.IClickable">
            <summary>
            Defines an interface implemented by ribbon items that can be clicked.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl">
            <summary>
            Defines a simple ribbon control.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.IconSize">
            <summary>
            Defines the icon size. Currently equal to 32.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.SmallIconSize">
            <summary>
            Defines the small icon size. Currently equal to 16.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.ArrowWidth">
            <summary>
            Defines the arrow width. Currently equal to 6.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonControl.ArrowHeight">
            <summary>
            Defines the arrow height. Currently equal to 4.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonControl"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Performs the work of setting the specified bounds of this control.
            </summary>
            <param name="x">The new <see cref="P:System.Windows.Forms.Control.Left"/> property value of the control.</param>
            <param name="y">The new <see cref="P:System.Windows.Forms.Control.Top"/> property value of the control.</param>
            <param name="width">The new <see cref="P:System.Windows.Forms.Control.Width"/> property value of the control.</param>
            <param name="height">The new <see cref="P:System.Windows.Forms.Control.Height"/> property value of the control.</param>
            <param name="specified">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified"/> values.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control"/> and its child controls and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.CreateAccessibilityInstance">
            <summary>
            Creates a new accessibility object for the control.
            </summary>
            <returns>
            A new <see cref="T:System.Windows.Forms.AccessibleObject"/> for the control.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.GetItemAt(System.Drawing.Point)">
            <summary>
            Gets the item at a given position.
            </summary>
            <param name="position">The position.</param>
            <returns>An instance of a ribbon item or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnItemMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is clicked on an item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RaiseClick(CodeFluent.Runtime.Design.RibbonControl.IClickable)">
            <summary>
            Raises click events.
            </summary>
            <param name="clickable">The clickable object. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RaiseClick(CodeFluent.Runtime.Design.RibbonControl.IClickable,System.Windows.Forms.MouseButtons)">
            <summary>
            Raises click events.
            </summary>
            <param name="clickable">The clickable object. May not be null.</param>
            <param name="buttons">The buttons.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RaiseClick(CodeFluent.Runtime.Design.RibbonControl.IClickable,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises click events.
            </summary>
            <param name="clickable">The clickable object. May not be null.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.ComputeActiveTabBounds">
            <summary>
            Computes the active tab bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.ComputeBounds">
            <summary>
            Computes the ribbon and children bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.MeasureOptimalText(CodeFluent.Runtime.Design.RibbonItemMode,System.String,System.Int32)">
            <summary>
            Measures the optimal size for a given text.
            </summary>
            <param name="mode">The ribbon item mode.</param>
            <param name="text">The input text.</param>
            <param name="maxLines">The maximumn number of lines.</param>
            <returns>A size instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:PaintBackground"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Design.RibbonControl.ItemMouseClick">
            <summary>
            Occurs when the mouse is clicked on an item. An Item can be a ribbon item or a ribbon dropdown item.
            An item implementes the IClickable interface.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonImages">
            <summary>
            Gets the built-in ribbon images.
            </summary>
            <value>The ribbon images.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.Style">
            <summary>
            Gets or sets the ribbon style.
            </summary>
            <value>The style.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ItemsPadding">
            <summary>
            Gets or sets the items padding.
            </summary>
            <value>The items padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.SmallItemsPadding">
            <summary>
            Gets or sets the small items padding.
            </summary>
            <value>The small items padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.PanelsPadding">
            <summary>
            Gets or sets the panels padding.
            </summary>
            <value>The panels padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderPadding">
            <summary>
            Gets or sets the tab header padding.
            </summary>
            <value>The tab header padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderRadius">
            <summary>
            Gets or sets the tab header radius.
            </summary>
            <value>The tab header radius.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderTopPadding">
            <summary>
            Gets or sets the tab header top padding.
            </summary>
            <value>The tab header top padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ShadowSize">
            <summary>
            Gets or sets the size of the shadow.
            </summary>
            <value>The size of the shadow.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabHeaderSeparatorWidth">
            <summary>
            Gets or sets the width of the tab header separator.
            </summary>
            <value>The width of the tab header separator.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Drawing.Font"/> to apply to the text displayed by the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont"/> property.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
            	<IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.FirstTabOffset">
            <summary>
            Gets or sets the first tab offset.
            </summary>
            <value>The first tab offset.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IsMinimizeBoxHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance minimize box is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance minimize box is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.MinimizeBox">
            <summary>
            Gets or sets a value indicating whether a minimize box must be shown.
            </summary>
            <value><c>true</c> if a minimize box must be shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IsMinimized">
            <summary>
            Gets or sets a value indicating whether this instance is minimized.
            </summary>
            <value>
            	<c>true</c> if this instance is minimized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ImageList">
            <summary>
            Gets or sets the image list used for icons.
            </summary>
            <value>The image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.AutoImageList">
            <summary>
            Gets the 32x32 image list computed from the SmallImageList.
            </summary>
            <value>The auto image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.AutoSmallImageList">
            <summary>
            Gets the 16x16 image list computed from the ImageList.
            </summary>
            <value>The auto small image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.SmallImageList">
            <summary>
            Gets or sets the image list used for small icons.
            </summary>
            <value>The small image list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ActiveTab">
            <summary>
            Gets the active tab.
            </summary>
            <value>The active tab.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabsPanelsBounds">
            <summary>
            Gets the tabs panels bounds.
            </summary>
            <value>The tabs panels bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.TabsHeadersBounds">
            <summary>
            Gets the tabs headers bounds.
            </summary>
            <value>The tabs headers bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.SuspendTooltips">
            <summary>
            Gets or sets a value indicating whether tooltips are suspended.
            </summary>
            <value><c>true</c> if tooltips are suspended; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.ShowHeaderSeparators">
            <summary>
            Gets or sets a value indicating whether header separators must be shown.
            </summary>
            <value>
            	<c>true</c> if header separators must be shown; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.VisibleTabs">
            <summary>
            Gets the visible tabs.
            </summary>
            <value>The visible tabs.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.Tabs">
            <summary>
            Gets the tabs.
            </summary>
            <value>The tabs.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.MinimizeBoxBackBounds">
            <summary>
            Gets the minimize box background bounds.
            </summary>
            <value>The minimize box back bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.MinimizeBoxBounds">
            <summary>
            Gets the minimize box bounds.
            </summary>
            <value>The minimize box bounds.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl.IClickable">
            <summary>
            Defines an interface implemented by ribbon items that can be clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.IClickable.RaiseOnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the on mouse click event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IClickable.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IClickable.RaiseRibbonMouseClick">
            <summary>
            Gets a value indicating whether mouse click must be raised at ribbon control level.
            </summary>
            <value>
            	<c>true</c> if mouse click must be raised at ribbon control; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.IClickable.Location">
            <summary>
            Gets the click location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonControl)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The bounds of control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Name">
            <summary>
            Gets or sets the accessible object name.
            </summary>
            <value></value>
            <returns>
            The accessible object name.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonControl.RibbonAccessibleObject.Owner">
            <summary>
            Gets the owner of the accessible object.
            </summary>
            <value></value>
            <returns>
            The <see cref="T:System.Windows.Forms.Control"/> that owns the <see cref="T:System.Windows.Forms.Control.ControlAccessibleObject"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.OnMouseClick(System.Object,System.EventArgs)">
            <summary>
            Called when the mouse is clicked on this item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Design.RibbonDropDownItem.MouseClick">
            <summary>
            Occurs when the mouse is clicked on the item.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.AccessibleObject">
            <summary>
            Gets the accessible object.
            </summary>
            <value>The accessible object.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Icon">
            <summary>
            Gets the icon.
            </summary>
            <value>The icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IconIndex">
            <summary>
            Gets or sets the index of the icon.
            </summary>
            <value>The index of the icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IsChecked">
            <summary>
            Gets or sets a value indicating whether this instance is checked.
            </summary>
            <value>
            	<c>true</c> if this instance is checked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.List">
            <summary>
            Gets the owner list.
            </summary>
            <value>The list.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon dropdown item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject"/> class.
            </summary>
            <param name="item">The owner item.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The default action for the control cannot be performed.
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Item">
            <summary>
            Gets the owner item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The bounds of control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The name of the control cannot be retrieved or set.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItem.DropDownItemAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownSeparator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownSeparator"/> class.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ListBoxPage">
            <summary>
            Defines a page that contains a list box.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ListBoxPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ListBoxPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.ChoiceListBox">
            <summary>
            The choice list box.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.ChoiceText">
            <summary>
            The choice text.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.ListBoxPage.LayoutPanel">
            <summary>
            The layout panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ListBoxPage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ListBoxPage"/> class.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockDropForm">
            <summary>
            Defines the utility Form that will be used to display dock drop bitmaps.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockDropForm.MoveThreshold">
            <summary>
            Defines the drag move threshold.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.#ctor(CodeFluent.Runtime.Design.DockPanel,System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockDropForm"/> class.
            </summary>
            <param name="panel">The panel.</param>
            <param name="locationOffset">The location offset.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the <see cref="T:System.Windows.Forms.Form"/>.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyPress"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnTop(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel top.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel top.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnBottom(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel bottom.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel bottom.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnLeft(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel left.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel left.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnRight(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to the panel right.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>true if the location points to the panel right.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropCenter(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control center.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control center.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropCenter(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this center.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this center.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropTop(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control top.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control top.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropTop(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this top.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this top.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropLeft(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control left.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control left.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropLeft(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this left.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to this left.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropRight(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control right.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control right.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropRight(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this right.
            </summary>
            <param name="location">The location.</param>
            <returns>
            true if the location points to this right.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropBottom(System.Windows.Forms.Control,System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Determines if the screen location points to a control bottom.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="dropCenterBounds">The drop center bounds.</param>
            <param name="screenLocation">The screen location.</param>
            <returns>
            true if the location points to a control bottom.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnDropBottom(System.Drawing.Point)">
            <summary>
            Determines if the screen location points to this bottom.
            </summary>
            <param name="location">The location.</param>
            <returns>
            true if the location points to this bottom.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.HandleMouseUp(System.Windows.Forms.Control,System.Drawing.Point,System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Design.DockWindow},CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Handles the mouse up event.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="location">The location.</param>
            <param name="windows">The windows. May be null.</param>
            <param name="item">The item. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropForm.HandleMouseMove(System.Windows.Forms.Control,System.Drawing.Point,CodeFluent.Runtime.Design.DockWindow,CodeFluent.Runtime.Design.DockFloatWindow,System.Drawing.Size)">
            <summary>
            Handles the mouse move event.
            </summary>
            <param name="control">The control. May not be null.</param>
            <param name="location">The location.</param>
            <param name="moving">The moving window.</param>
            <param name="floatMoving">The moving float window.</param>
            <param name="floatSize">Float size.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.Canceled">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockDropForm"/> drop operation is canceled.
            </summary>
            <value><c>true</c> if canceled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.LocationOffset">
            <summary>
            Gets or sets the initial drag location offset.
            </summary>
            <value>The location offset.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.SelectionForm">
            <summary>
            Gets the selection form.
            </summary>
            <value>The selection form.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.FloatDropForm">
            <summary>
            Gets float drop form.
            </summary>
            <value>The float drop form.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.Panel">
            <summary>
            Gets the owning panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropWindow">
            <summary>
            Gets the window where the cursor was dropped.
            </summary>
            <value>The drop window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropItem">
            <summary>
            Gets the window item where the cursor was dropped.
            </summary>
            <value>The drop item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.TargetItem">
            <summary>
            Gets the target item where the cursor was dropped.
            </summary>
            <value>The target item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropWindowPosition">
            <summary>
            Gets the drop window position or null if the cursor was not dropped near a border.
            </summary>
            <value>The drop window position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.DropCenterBounds">
            <summary>
            Gets or sets the drop center bounds.
            </summary>
            <value>The drop center bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.SelectionBounds">
            <summary>
            Gets or sets the selection bounds.
            </summary>
            <value>The selection bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockAutoHidePanel">
            <summary>
            Defines a control that will hold auto hide windows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.#ctor(CodeFluent.Runtime.Design.DockPanel,CodeFluent.Runtime.Design.DockWindowPosition)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockAutoHidePanel"/> class.
            </summary>
            <param name="panel">The panel.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.GetItemBounds(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Gets an item bounds.
            </summary>
            <param name="item">The item. May not be null.</param>
            <returns>An instance of the Rectangle structure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Layout"/> event.
            </summary>
            <param name="levent">A <see cref="T:System.Windows.Forms.LayoutEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHidePanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Windows">
            <summary>
            Enumerates the windows.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Horizontal">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockAutoHidePanel"/> is horizontal.
            </summary>
            <value><c>true</c> if horizontal; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Vertical">
            <summary>
            Gets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.DockAutoHidePanel"/> is vertical.
            </summary>
            <value><c>true</c> if vertical; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Position">
            <summary>
            Gets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHidePanel.Items">
            <summary>
            Enumerates the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.Template">
            <summary>
            Defines properties and characteristics of a template that is used by the CodeFluent software factory.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Template.TemplateStackDictionaryKeyName">
            <summary>
            Defines the template stack dictionary key name.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Template.DefaultStartToken">
            <summary>
            Defines the default start token for templates.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Template.DefaultDirectiveToken">
            <summary>
            Defines the default directive token for templates.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Template.DefaultEndToken">
            <summary>
            Defines the default end token for templates.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.Template"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Load(System.String,CodeFluent.Model.Common.Templating.TemplateOptions)">
            <summary>
            Loads the template from the specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="options">The template options.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Load(System.String,CodeFluent.Model.Common.Templating.TemplateOptions,System.Text.Encoding)">
            <summary>
            Loads the template from the specified file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="options">The template options.</param>
            <param name="encoding">The encoding to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Load(System.IO.Stream,CodeFluent.Model.Common.Templating.TemplateOptions)">
            <summary>
            Loads a template from the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="options">The template options.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Load(System.IO.Stream,CodeFluent.Model.Common.Templating.TemplateOptions,System.Text.Encoding)">
            <summary>
            Loads a template from the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="options">The template options.</param>
            <param name="encoding">The character encoding to use. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Load(System.IO.Stream,CodeFluent.Model.Common.Templating.TemplateOptions,System.Text.Encoding,System.Boolean)">
            <summary>
            Loads a template from the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="options">The template options.</param>
            <param name="encoding">The character encoding to use. May not be null.</param>
            <param name="detectEncodingFromByteOrderMarks">Indicates whether to look for byte order marks at the beginning of the file.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Load(System.IO.TextReader,CodeFluent.Model.Common.Templating.TemplateOptions)">
            <summary>
            Loads a template from the specified text reader.
            </summary>
            <param name="reader">The input text reader. May not be null.</param>
            <param name="options">The template options.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.LoadText(System.String,CodeFluent.Model.Common.Templating.TemplateOptions)">
            <summary>
            Loads a template from the specified text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <param name="options">The template options.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Build">
            <summary>
            Builds this template.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.GetFirstTemplate(System.Collections.IDictionary)">
            <summary>
            Gets the first template of a stack context.
            This method supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="dictionary">The context dictionary. May be null.</param>
            <returns>A template instance or null if the stack context is empty.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.GetLastTemplate(System.Collections.IDictionary)">
            <summary>
            Gets the last template of a stack context.
            This method supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="dictionary">The context dictionary. May be null.</param>
            <returns>A template instance or null if the stack context is empty.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.GetStack(System.Collections.IDictionary)">
            <summary>
            Gets the template stack from a stack context
            This method supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
            <param name="dictionary">The context dictionary. May be null.</param>
            <returns>A TemplateStack instance or null if the stack context is empty.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Run">
            <summary>
            Runs the template.
            </summary>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Run(System.Collections.IDictionary)">
            <summary>
            Runs the template.
            </summary>
            <param name="dictionary">A context dictionary. May be null.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Run(System.IO.TextWriter)">
            <summary>
            Runs the template.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Run(System.IO.TextWriter,System.Collections.IDictionary)">
            <summary>
            Runs the template.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="dictionary">A context dictionary. May be null.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.GetDefaultTempNamespace">
            <summary>
            Gets the default templates temporary namespace.
            </summary>
            <returns>A string representing the default templates temporary namespace.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.GetDefaultTempDirectoryPath">
            <summary>
            Gets the default templates directory path.
            </summary>
            <returns>A string representing the default templates directory path.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddParameterDirective(System.String,System.Type)">
            <summary>
            Adds a parameter directive.
            </summary>
            <param name="name">The directive name. May not be null.</param>
            <param name="type">The directive type. May not be null.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddParameterDirective(System.String,System.Type,System.Boolean)">
            <summary>
            Adds a parameter directive.
            </summary>
            <param name="name">The directive name. May not be null.</param>
            <param name="type">The directive type. May not be null.</param>
            <param name="nullable">if set to <c>true</c>, a null value for the template parameter instance will be allowed.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddParameterDirective(System.String,System.Type,System.Boolean,System.Boolean)">
            <summary>
            Adds a parameter directive.
            </summary>
            <param name="name">The directive name. May not be null.</param>
            <param name="type">The directive type. May not be null.</param>
            <param name="nullable">if set to <c>true</c>, a null value for the template parameter instance will be allowed.</param>
            <param name="checkType">if set to <c>true</c> the runtime type will be checked.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddParameterDirective(System.String,System.String)">
            <summary>
            Adds a parameter directive.
            </summary>
            <param name="name">The directive name. May not be null.</param>
            <param name="typeName">The type name. May not be null.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddParameterDirective(System.String,System.String,System.Boolean)">
            <summary>
            Adds a parameter directive.
            </summary>
            <param name="name">The directive name. May not be null.</param>
            <param name="typeName">The type name. May not be null.</param>
            <param name="nullable">if set to <c>true</c>, a null value for the template parameter instance will be allowed.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddParameterDirective(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a parameter directive.
            </summary>
            <param name="name">The directive name. May not be null.</param>
            <param name="typeName">The type name. May not be null.</param>
            <param name="nullable">if set to <c>true</c>, a null value for the template parameter instance will be allowed.</param>
            <param name="checkType">if set to <c>true</c> the runtime type will be checked.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddNamespaceDirective(System.Type)">
            <summary>
            Adds a namespace directive.
            </summary>
            <param name="type">The type whose namespace must be added. May not be null.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddNamespaceDirective(System.String)">
            <summary>
            Adds a namespace directive.
            </summary>
            <param name="name">The namespace. May not be null.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddReferenceDirective(System.Reflection.Assembly)">
            <summary>
            Adds a reference directive.
            </summary>
            <param name="assembly">The assembly to add as a reference. May not be null.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddReferenceDirective(System.Type)">
            <summary>
            Adds a reference directive.
            </summary>
            <param name="type">The type whose assembly must be added as a reference. May not be null.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.AddReferenceDirective(System.String)">
            <summary>
            Adds a reference directive.
            </summary>
            <param name="name">The assembly name to add as a reference. May not be null.</param>
            <returns>The corresponding directive instance.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.GetTemplateEncoding(System.Text.Encoding)">
            <summary>
            Gets the template character encoding.
            </summary>
            <param name="defaultEncoding">The default encoding.</param>
            <returns>The template character encoding.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.BuildRazorUnit">
            <summary>
            Builds the CodeDom compilation unit using the Razor engine.
            </summary>
            <returns>And instance of the CodeCompileUnit class.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.BuildUnit">
            <summary>
            Builds the CodeDom compilation unit.
            </summary>
            <returns>And instance of the CodeCompileUnit class.</returns>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.Initialize(System.Object,System.IO.TextWriter,System.Collections.IDictionary,CodeFluent.Model.Common.Templating.Template)">
            <summary>
            Initializes the specified object as a template.
            </summary>
            <param name="obj">The object to initialize.</param>
            <param name="writer">The writer.</param>
            <param name="context">The context.</param>
            <param name="template">The template.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Template.GetTemplateType(System.String)">
            <summary>
            Gets a type compiled by the Template Engine.
            </summary>
            <param name="typeName">The type name. May not be null.</param>
            <returns>A Type instance or null if not found.</returns>
        </member>
        <member name="E:CodeFluent.Model.Common.Templating.Template.TypeCreate">
            <summary>
            Occurs when a type is created.
            </summary>
        </member>
        <member name="E:CodeFluent.Model.Common.Templating.Template.AssemblyLoad">
            <summary>
            Occurs when an assembly is loaded.
            </summary>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.XmlExtensions">
            <summary>
            Gets the list of valid Xml extensions.
            </summary>
            <value>A list of Xml extensions.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.DefaultProviderOptions">
            <summary>
            Gets or sets the CodeDom provider default options.
            </summary>
            <value>The CodeDom provider default options.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.EmbedSource">
            <summary>
            Specifies if source must be embedded in the resulting binaries.
            </summary>
            <value>A positive value if source must be embedded in the resulting binaries.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.ExtractFileDetails">
            <summary>
            Gets or sets a value indicating whether file details are extracted.
            </summary>
            <value><c>true</c> if file details are extracted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.MaximumExtractedFileDetails">
            <summary>
            Gets or sets the maximum number of extracted file details.
            </summary>
            <value>The maximum extracted file details.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.Options">
            <summary>
            Gets the template options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.LoadOptions">
            <summary>
            Gets the template load options.
            </summary>
            <value>The load options.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.OutputDebugInformation">
            <summary>
            Specifies if debug information must be added.
            </summary>
            <value>A positive value if debug information must be added.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.TempFilePath">
            <summary>
            Gets the temporary file path.
            </summary>
            <value>The temporary file path.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.TryCatch">
            <summary>
            Gets a value indicating whether a surrounding try catch must be created around .NET code.
            </summary>
            <value><c>true</c> if [try catch]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.TempNamespace">
            <summary>
            Gets the template namespace.
            </summary>
            <value>The template namespace.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.TempDirectoryPath">
            <summary>
            Gets or sets the template directory path.
            </summary>
            <value>The temp directory path.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.IsBuilt">
            <summary>
            Gets a value indicating whether this instance is built.
            </summary>
            <value><c>true</c> if this instance is built; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.IsLoaded">
            <summary>
            Gets a value indicating whether this instance is loaded.
            </summary>
            <value><c>true</c> if this instance is loaded; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.NamespaceNestedClassName">
            <summary>
            Gets the name of the automatically created nested class name for namespace code directive.
            </summary>
            <value>The name of the namespace nested class.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.AllowsUI">
            <summary>
            Gets a value indicating whether this instance allows UI.
            </summary>
            <value><c>true</c> if this instance allows UI; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.Instance">
            <summary>
            Gets the Template instance.
            </summary>
            <value>The instance. May be null.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.Engine">
            <summary>
            Gets the template engine.
            </summary>
            <value>The engine.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.EndToken">
            <summary>
            Gets or sets the end token.
            </summary>
            <value>The end token.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.StartToken">
            <summary>
            Gets or sets the start token.
            </summary>
            <value>The start token.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.DirectiveToken">
            <summary>
            Gets or sets the directive token.
            </summary>
            <value>The directive token.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.Directives">
            <summary>
            Gets the collection of directives.
            </summary>
            <value>The collection of directives.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.CodeBlocks">
            <summary>
            Gets a collection of all the code blocks.
            </summary>
            <value>A collection of blocks.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.Blocks">
            <summary>
            Gets a collection of all the blocks.
            </summary>
            <value>A collection of blocks.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.TextBlocks">
            <summary>
            Gets a collection of all text blocks.
            </summary>
            <value>A collection of blocks.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.DirectoryPath">
            <summary>
            Gets the directory path. May be null if FilePath is null.
            </summary>
            <value>The directory path.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.FileExtension">
            <summary>
            Gets the file extension. May be null if FilePath is null.
            </summary>
            <value>The file extension.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.FilePath">
            <summary>
            Gets or sets the file path. May be null.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.Code">
            <summary>
            Gets the template final code.
            </summary>
            <value>The final code.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.TemplateDirective">
            <summary>
            Gets the template directive.
            </summary>
            <value>The template directive.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.HasOutput">
            <summary>
            Gets a value indicating whether this instance has output.
            </summary>
            <value>
            	<c>true</c> if this instance has output; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.CheckSum">
            <summary>
            Gets this template check sum.
            </summary>
            <value>The check sum value.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.CurrentEncoding">
            <summary>
            Gets the current encoding.
            </summary>
            <value>The current encoding.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.Language">
            <summary>
            Gets the template language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Template.LoopMode">
            <summary>
            Gets a value indicating whether loop mode is enabled.
            </summary>
            <value><c>true</c> if loop mode is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.DirectiveAttributeCollection">
            <summary>
            Defines a collection of directive attributes.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveAttributeCollection.Add(CodeFluent.Model.Common.Templating.DirectiveAttribute)">
            <summary>
            Adds the specified directive attribute.
            </summary>
            <param name="directiveAttribute">The directive attribute to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveAttributeCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.DirectiveAttributeCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Model.Common.Templating.DirectiveAttribute"/> with the specified name.
            </summary>
            <value>An instance of the DirectiveAttribute class.</value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.DirectiveAttribute">
            <summary>
            Defines a CodeFluent template directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.LanguageDirectiveAttributeName">
            <summary>
            Defines the Language directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.TempDirectoryPathDirectiveAttributeName">
            <summary>
            Defines the TempDirectoryPath directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.TempNamespaceDirectiveAttributeName">
            <summary>
            Defines the TempNamespace directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.AllowUIDirectiveAttributeName">
            <summary>
            Defines the AllowUI directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.NamespaceNestedClassNameDirectiveAttributeName">
            <summary>
            Defines the NamespaceNestedClassName directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.EngineDirectiveAttributeName">
            <summary>
            Defines the Engine directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.NameDirectiveAttributeName">
            <summary>
            Defines the Name directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.EnumerableDirectiveAttributeName">
            <summary>
            Defines the Enumerable directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.TargetPathFuncDirectiveAttributeName">
            <summary>
            Defines the TargetPathFunc directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.TypeNameDirectiveAttributeName">
            <summary>
            Defines the TypeName directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.InheritsDirectiveAttributeName">
            <summary>
            Defines the Inherits directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.NullableDirectiveAttributeName">
            <summary>
            Defines the Nullable directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.CheckTypeDirectiveAttributeName">
            <summary>
            Defines the CheckType directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.OutputDirectiveAttributeName">
            <summary>
            Defines the Output directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.TryCatchDirectiveAttributeName">
            <summary>
            Defines the TryCatch directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.PreserveWhitespacesDirectiveAttributeName">
            <summary>
            Defines the PreserveWhitespaces directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.CompileDirectiveAttributeName">
            <summary>
            Defines the Compile directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.MemberCodeDirectiveAttributeName">
            <summary>
            Defines the MemberCode directive attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.DirectiveAttribute.NamespaceCodeDirectiveAttributeName">
            <summary>
            Defines the NamespaceCode directive attribute.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.DirectiveAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveAttribute.#ctor(System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.DirectiveAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="values">The values.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.DirectiveAttribute.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.DirectiveAttribute.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.DirectiveAttribute.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.DirectiveAttribute.Values">
            <summary>
            Gets or sets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction">
            <summary>
            Defines an XmlLineInfoProcessingInstruction that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction"/> class.
            </summary>
            <param name="target">The target of the processing instruction; see the <see cref="P:System.Xml.XmlProcessingInstruction.Target"/> property.</param>
            <param name="data">The content of the instruction; see the <see cref="P:System.Xml.XmlProcessingInstruction.Data"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoProcessingInstruction.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ParsedScript">
            <summary> 
            Defines a pre-parsed script object that can be evaluated at runtime. 
            </summary> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParsedScript.CallMethod(System.String,System.Object[])">
            <summary> 
            Calls a method. 
            </summary> 
            <param name="methodName">The method name. May not be null.</param> 
            <param name="arguments">The optional arguments.</param> 
            <returns>The call result.</returns> 
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ParsedScript.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Crc32">
            <summary>
            Represents a set of CRC32 utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Crc32"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.UpdateCrc32(System.UInt32,System.UInt32)">
            <summary>
            Updates a CRC32 with additional data.
            </summary>
            <param name="data">The additional data.</param>
            <param name="oldCrc">The old CRC.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.UpdateCrc32(System.String,System.UInt32)">
            <summary>
            Updates a CRC32 with additional data.
            </summary>
            <param name="data">The additional data.</param>
            <param name="oldCrc">The old CRC.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.UpdateCrc32(System.Byte[],System.UInt32)">
            <summary>
            Updates a CRC32 with additional data.
            </summary>
            <param name="data">The additional data.</param>
            <param name="oldCrc">The old CRC.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.AddToCrc32(System.UInt16)">
            <summary>
            Adds a value to the current CRC32.
            </summary>
            <param name="c">The value to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.AddToCrc32(System.Byte)">
            <summary>
            Adds a value to the current CRC32.
            </summary>
            <param name="c">The value to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.Compute(System.IO.Stream)">
            <summary>
            Computes the specified stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.ComputeFile(System.String)">
            <summary>
            Computes the specified file.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.Compute(System.String)">
            <summary>
            Computes the specified text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Crc32.Compute(System.Byte[])">
            <summary>
            Computes the specified bytes.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <returns>The computed CRC32 checksum.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Crc32.CheckSum">
            <summary>
            Gets or sets the current checksum value.
            </summary>
            <value>The checksum value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ContentType">
            <summary>
            Represents a set of MIME content type utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetRegistryExtension(System.String)">
            <summary>
            Gets a file extension from the HKCR registry.
            </summary>
            <param name="contentType">The content type input.</param>
            <returns>The corresponding extension or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetRegistryContentType(System.String)">
            <summary>
            Gets a content type from the HKCR registry.
            </summary>
            <param name="fileName">Name of the file. May not be null.</param>
            <returns>The corresponding content type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.IsXml(System.String)">
            <summary>
            Determines whether the specified content type is Xml.
            </summary>
            <param name="contentType">Input content type.</param>
            <returns>
            	<c>true</c> if the specified content type is Xml; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetPerceivedType(System.String)">
            <summary>
            Gets a file's perceived type based on its extension.
            </summary>
            <param name="fileName">The file name. May not be null..</param>
            <returns>An instance of the PerceivedType type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetWebContentType(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets a content type for an image format from the IIS metabase.
            </summary>
            <param name="imageFormat">The image format. May not be null.</param>
            <returns>The corresponding content type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ContentType.GetWebContentType(System.String)">
            <summary>
            Gets a content type from the IIS metabase.
            </summary>
            <param name="fileName">The file name or path. May not be null.</param>
            <returns>The corresponding content type.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ContentType.DefaultContentType">
            <summary>
            Gets or sets the default content type.
            </summary>
            <value>The type default content type.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.AssemblyUtilities">
            <summary>
            Represents a set of reflection utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsDynamic(System.Reflection.Assembly)">
            <summary>
            Determines whether the specified assembly is dynamic.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>
            	<c>true</c> if the specified assembly is dynamic; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsVoidType(System.String)">
            <summary>
            Determines whether the specified type name is a void type.
            </summary>
            <param name="typeName">Type name. May be null.</param>
            <returns>
            	<c>true</c> if the specified type name is a void type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetOpenGenericTypeName(System.String,System.Boolean)">
            <summary>
            Gets the open type name. If the type is not generic, the type name is returned as is.
            </summary>
            <param name="typeName">The type name. If null, null will be returned.</param>
            <param name="forReflection">if set to <c>true</c> the type name must be used for reflection.</param>
            <returns>The full type name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAllProperties(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all properties for a type, including base types if any, and interfaces if any.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="flags">The flags.</param>
            <returns>An array of <see cref="T:System.Reflection.PropertyInfo"/> instances. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAllMethods(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all methods for a type, including base types if any, and interfaces if any.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="flags">The flags.</param>
            <returns>An array of <see cref="T:System.Reflection.PropertyInfo"/> instances. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAllMembers(System.Type,System.Reflection.BindingFlags)">
            <summary>
            Gets all members for a type, including base types if any, and interfaces if any.
            </summary>
            <param name="type">The type. May not be null.</param>
            <param name="flags">The flags.</param>
            <returns>An array of <see cref="T:System.Reflection.MemberInfo"/> instances. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsAssignableFrom(System.String,System.Type)">
            <summary>
            Determines whether the specified type name is assignable from the type object.
            </summary>
            <param name="typeName">The type name. May not be null.</param>
            <param name="type">The type instance. May not be null.</param>
            <returns>
            	<c>true</c> if the specified type name is assignable from the type object; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetType(System.String)">
            <summary>
            Gets a type from a type name.
            The type name can be partially defined. Types in mscorlib.dll and system.dll will be found even when not fully defined.
            </summary>
            <param name="fullTypeName">Full name of the type.</param>
            <returns>The type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetType(System.String,System.Boolean)">
            <summary>
            Gets a type from a type name.
            The type name can be partially defined. Types in mscorlib.dll and system.dll will be found even when not fully defined.
            </summary>
            <param name="fullTypeName">Full name of the type.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <returns>The type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetType(System.String,System.Boolean,System.Reflection.Assembly)">
            <summary>
            Gets a type from a type name.
            The type name can be partially defined. Types in mscorlib.dll and system.dll will be found even when not fully defined.
            </summary>
            <param name="fullTypeName">Full name of the type.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <param name="hint">A hint assembly if assembly name is not specified. May be null.</param>
            <returns>The type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.ComponentModel.AttributeCollection)">
            <summary>
            Gets a custom attribute from a collection of attributes
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="attributes">The attributes.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetDescription(System.Object,System.String)">
            <summary>
            Gets an instance description.
            If the obj parameter is a Type object, attributes are read from the type instead of the instance.
            </summary>
            <param name="obj">The instance or a type. May not be null.</param>
            <param name="defaultValue">The default value to use if no description is defined.</param>
            <returns>The description.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetDisplayName(System.Object,System.String)">
            <summary>
            Gets an instance display name.
            If the obj parameter is a Type object, attributes are read from the type instead of the instance.
            </summary>
            <param name="obj">The instance or a type. May not be null.</param>
            <param name="defaultValue">The default value to use if no display name is defined.</param>
            <returns>The display name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetCategory(System.Object,System.String)">
            <summary>
            Gets an instance category.
            If the obj parameter is a Type object, attributes are read from the type instead of the instance.
            </summary>
            <param name="obj">The instance or a type. May not be null.</param>
            <param name="defaultValue">The default value to use if no category is defined.</param>
            <returns>The category.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.ComponentModel.MemberDescriptor)">
            <summary>
            Gets a custom attribute declared on a member descripor.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="descriptor">The descriptor. May not be null.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.Reflection.ICustomAttributeProvider)">
            <summary>
            Gets a custom attribute declared on custom attribute provider.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="provider">The provider. May not be null.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAttribute``1(System.Object)">
            <summary>
            Gets a custom attribute declared on a given object instance's type.
            NOTE: don't use this method, it has problems, but is preserved due to compatibility reasons.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="obj">The object instance. May not be null.</param>
            <returns>An instance of the attribute type if found; otherwise null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetPropertyAttribute``1(System.Object,System.String)">
            <summary>
            Gets a custom attribute declared on a given object instance's property.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="obj">The object instance. May not be null.</param>
            <param name="propertyName">Name of the property. May not be null.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetPropertyAttribute``1(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets a custom attribute declared on a given object instance's property.
            </summary>
            <typeparam name="T">The attribute type.</typeparam>
            <param name="obj">The object instance. May not be null.</param>
            <param name="propertyName">Name of the property. May not be null.</param>
            <param name="flags">The binding flags to use.</param>
            <returns>
            An instance of the attribute type if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetInformationalVersion(System.Reflection.Assembly)">
            <summary>
            Gets the informational version of an assembly.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>The version represented as a string. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetNamespace(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the namespace.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type namespace. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetName(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the name.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type name. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetFullName(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the full name.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type full name. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyName(System.String)">
            <summary>
            Parses the name of an assembly qualified type name string and returns the assembly name.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <returns>The type assembly name. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParseAssemblyQualifiedTypeName(System.String,System.String@,System.String@,System.String@)">
            <summary>
            Parses the name of an assembly qualified type name string.
            </summary>
            <param name="typeName">Full type name to parse. May not be null.</param>
            <param name="name">The type name. May be null.</param>
            <param name="namespace">The type namespace. May be null.</param>
            <param name="assemblyName">The assembly name. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParseAssemblyQualifiedNamespace(System.String@,System.String@)">
            <summary>
            Parses an assembly qualified namespace.
            </summary>
            <param name="namespace">The input assembley namespace. May not be null.</param>
            <param name="assemblyName">The assembly name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.IsValueType(System.String)">
            <summary>
            Determines whether the specified type name is a value type.
            </summary>
            <param name="typeName">The type name. May not be null.</param>
            <returns>
            	<c>true</c> if the specified type name is a value type; otherwise, <c>false. It it cannot be determined, the result is <c>undefined</c>.</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.SetPropertyValue(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Sets the property value.
            </summary>
            <param name="instance">The instance.</param>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw if the property cannot be set.</param>
            <returns>
            true if the property was set; otherwise false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.SetPropertyValue(System.Object,System.String,System.Object,System.Reflection.BindingFlags,System.Boolean)">
            <summary>
            Sets the property value.
            </summary>
            <param name="instance">The instance.</param>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <param name="bindingFlags">Binding flags to use.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw if the property cannot be set.</param>
            <returns>true if the property was set; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetMember(System.Type,System.String)">
            <summary>
            Gets a member (Field or Property) from a given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="path">The member name. May not be null.</param>
            <returns>An instance of the PropertyInfo or FieldInfo types.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetMember(System.Type,System.String,System.Reflection.BindingFlags)">
            <summary>
            Gets a member (Field or Property) from a given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="path">The member name. May not be null.</param>
            <param name="bindingFlags">Binding flags to use.</param>
            <returns>
            An instance of the PropertyInfo or FieldInfo types.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyPath(System.String)">
            <summary>
            Gets an assembly path given a partial name.
            </summary>
            <param name="name">An assembly partial name. May not be null.</param>
            <returns>
            The assembly path if found; otherwise null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyPath(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets an assembly path given a partial name.
            </summary>
            <param name="name">An assembly partial name. May not be null.</param>
            <param name="matchClrVersion">if set to <c>true</c> the method will try to automatically match the current CLR version.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <returns>
            The assembly path if found; otherwise null if throwOnError was set to false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyFullName(System.String)">
            <summary>
            Gets the full name of the specified assembly.
            This method does not use .NET reflection and does not load the file in the current AppDomain.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <returns>
            A string containing the specified assembly full name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyFullName(System.String,System.Boolean)">
            <summary>
            Gets the full name of the specified assembly.
            This method does not use .NET reflection and does not load the file in the current AppDomain.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <param name="includeProcessorArchitecture">if set to <c>true</c> processor architecture will be included in the name.</param>
            <returns>A string containing the specified assembly full name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetAssemblyFullName(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the full name of the specified assembly.
            This method does not use .NET reflection and does not load the file in the current AppDomain.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <param name="includeProcessorArchitecture">if set to <c>true</c> processor architecture will be included in the name.</param>
            <param name="throwOnError">if set to <c>true</c> the method will throw on error.</param>
            <returns>
            A string containing the specified assembly full name.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.GetGlobalAssemblyCachePath(System.String)">
            <summary>
            Gets the global assembly cache path for a given assembly.
            </summary>
            <param name="filePath">The assembly file path. May not be null.</param>
            <returns>
            A directory path or null if the assembly is not in the Global Assembly Cache.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType">
            <summary>
            Defines a parsed type.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.ToString(CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <param name="options">The options to use.</param>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.ToString(System.Type,CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the specified type, using a specific formatting.
            </summary>
            <param name="type">The type. May no be null.</param>
            <param name="options">The options to use.</param>
            <returns>
            A <see cref="T:System.String"/> that represents the specified type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.Parse(System.String)">
            <summary>
            Parses the specified type name.
            </summary>
            <param name="typeName">The type name. May not be null.</param>
            <returns>An instance of the parsed type.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.TypeName">
            <summary>
            Gets the type name.
            </summary>
            <value>The type name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.AssemblyName">
            <summary>
            Gets the assembly name.
            </summary>
            <value>The assembly name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.IsGeneric">
            <summary>
            Gets a value indicating whether this type is generic.
            </summary>
            <value>
            	<c>true</c> if this type is generic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.Arguments">
            <summary>
            Gets the type arguments.
            </summary>
            <value>The type arguments.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions">
            <summary>
            Defines output options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.CSharp">
            <summary>
            Output is C# oriented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.Reflection">
            <summary>
            Output is Reflection oriented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.VisualBasic">
            <summary>
            Output is Visual Basic .NET oriented.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.Open">
            <summary>
            Output an open type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.StripAssemblyNames">
            <summary>
            Strips assembly names
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.AssemblyUtilities.ParsedType.OutputOptions.NonGenericPart">
            <summary>
            Output only the non-generic part.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ExceptionHandler">
            <summary>
            A utility class to report unhandled exceptions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(System.Exception,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Handles the exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(System.Exception,System.Windows.Forms.IWin32Window,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Handles the exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <param name="owner">The owner.</param>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(CodeFluent.Runtime.Diagnostics.ExceptionHandler.ExceptionHandledCallback,System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Runs a piece of code with exception being handled.
            </summary>
            <param name="callback">The code to run. May not be null.</param>
            <param name="reThrow">if set to <c>true</c> the exception will be rethrown.</param>
            <param name="context">The context. May be null.</param>
            <returns>
            true if an exception was handled; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.HandleException(CodeFluent.Runtime.Diagnostics.ExceptionHandler.ExceptionHandledCallback,System.Windows.Forms.IWin32Window,System.Boolean,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Runs a piece of code with exception being handled.
            </summary>
            <param name="callback">The code to run. May not be null.</param>
            <param name="owner">The owner. May be null.</param>
            <param name="reThrow">if set to <c>true</c> the exception will be rethrown.</param>
            <param name="context">The context. May be null.</param>
            <returns>true if an exception was handled; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.CreateManual">
            <summary>
            Creates a manual report.
            </summary>
            <returns>An instance of the ExceptionHandler type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.Report(System.Exception)">
            <summary>
            Reports the specified exception.
            </summary>
            <param name="exception">The exception. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.ExceptionHandler.Report(System.Exception,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])">
            <summary>
            Reports the specified exception and an optional array of values.
            </summary>
            <param name="exception">The exception. May be null</param>
            <param name="context">The context. May be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.Current">
            <summary>
            Gets the current handler.
            </summary>
            <value>The current handler.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ReportPath">
            <summary>
            Gets or sets the handler report path.
            </summary>
            <value>The report path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ReportsPath">
            <summary>
            Gets the reports directory path.
            </summary>
            <value>The reports directory path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.ExceptionHandler.ExceptionHandledCallback">
            <summary>
            Defines a delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonPanel">
            <summary>
            Defines a ribbon panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.GetColumnWidth(System.Int32)">
            <summary>
            Gets the width of the specified column.
            </summary>
            <param name="column">The column index.</param>
            <returns>The column width in pixels.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.MinimalClick">
            <summary>
            The panel has been clicked in the minimal mode.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.OnItemClick(System.Object,System.EventArgs)">
            <summary>
            Called when an item has been clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.ComputeBounds(System.Int32)">
            <summary>
            Computes the panel and children bounds.
            </summary>
            <param name="maxWidth">The maximum panel width.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PaintMinimal(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the panel in minimal mode.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the panel.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.MinimalIconIndex">
            <summary>
            Gets or sets the index of the minimal icon.
            </summary>
            <value>The index of the minimal icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.MinimalIcon">
            <summary>
            Gets the minimal icon.
            </summary>
            <value>The minimal icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.ShowMinimal">
            <summary>
            Gets or sets a value indicating whether the panel is shown using the minimal icon.
            </summary>
            <value><c>true</c> if the panel is shown using the minimal icon; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.ColumnsCount">
            <summary>
            Gets the columns count.
            </summary>
            <value>The columns count.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.HeaderBounds">
            <summary>
            Gets the header bounds.
            </summary>
            <value>The header bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.Tab">
            <summary>
            Gets the owner tab.
            </summary>
            <value>The tab.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject"/> class.
            </summary>
            <param name="panel">The owner panel.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The bounds of control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonPanel.PanelAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The name of the control cannot be retrieved or set.
            </exception>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.Block">
            <summary>
            Defines a template block.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Block.OutputCommandChar">
            <summary>
            Defines the output command character.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.Block.EvalCommandChar">
            <summary>
            Defines the eval command character.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.Block.Trim">
            <summary>
            Trims this block.
            </summary>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Block.Line">
            <summary>
            Gets the block line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Block.IsEvalCommand">
            <summary>
            Gets a value indicating whether this instance is the eval command.
            </summary>
            <value>
            	<c>true</c> if this instance is the eval command; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Block.IsOutputCommand">
            <summary>
            Gets a value indicating whether this instance is the output command.
            </summary>
            <value>
            	<c>true</c> if this instance is the output command; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Block.IsCode">
            <summary>
            Gets a value indicating whether this instance contains code.
            </summary>
            <value><c>true</c> if this instance contains code; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.Block.Text">
            <summary>
            Gets this instance text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType">
            <summary>
            Defines an XmlDocumentType that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType"/> class.
            </summary>
            <param name="name">The qualified name; see the <see cref="P:System.Xml.XmlDocumentType.Name"/> property.</param>
            <param name="publicId">The public identifier; see the <see cref="P:System.Xml.XmlDocumentType.PublicId"/> property.</param>
            <param name="systemId">The system identifier; see the <see cref="P:System.Xml.XmlDocumentType.SystemId"/> property.</param>
            <param name="internalSubset">The DTD internal subset; see the <see cref="P:System.Xml.XmlDocumentType.InternalSubset"/> property.</param>
            <param name="doc">The parent document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoDocumentType.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Serializable`1">
            <summary>
            Defines a utility class to ease Xml serialization.
            </summary>
            <typeparam name="T">The type of objects to serialize and deserialize.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Validate(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Validates this instances.
            </summary>
            <param name="errors">An error collection that will be filled with validation errors.</param>
            <param name="memberName">The name of the member being validated or null if the whole instance is validated.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Validate(System.String)">
            <summary>
            Validates this instances.
            </summary>
            <param name="memberName">The name of the member being validated or null if the whole instance is validated.</param>
            <returns>null if this instance is valid or a string describing the validation errors.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.DeserializeFromConfiguration">
            <summary>
            Deserializes an instance from user configuration.
            </summary>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.String)">
            <summary>
            Deserializes an instance from a given file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.String,`0)">
            <summary>
            Deserializes an instance from a given file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.TextReader,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.Xml.XmlReader,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.String,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given file path.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes an instance from a given stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.Stream,`0)">
            <summary>
            Deserializes an instance from a given stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.Stream,`0,System.Boolean)">
            <summary>
            Deserializes an instance from a given stream.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.IO.TextReader,`0)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.Xml.XmlReader)">
            <summary>
            Deserializes an instance from a given xml reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Deserialize(System.Xml.XmlReader,`0)">
            <summary>
            Deserializes an instance from a given text reader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>An instance of T</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.SerializeToConfiguration">
            <summary>
            Serializes this instance to user configuration.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.Xml.XmlWriter)">
            <summary>
            Serializes this instance to an xml writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.IO.TextWriter)">
            <summary>
            Serializes this instance to a text writer.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.IO.Stream)">
            <summary>
            Serializes this instance to a stream.
            </summary>
            <param name="stream">The output stream. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Serialize(System.String)">
            <summary>
            Serializes this instance to a file.
            </summary>
            <param name="filePath">The output file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.CopyTo(System.Object)">
            <summary>
            Copies this instance to another target instance.
            </summary>
            <param name="target">The target. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Serializable`1.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Serializable`1.System#ComponentModel#IDataErrorInfo#Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
            <value></value>
            <returns>
            An error message indicating what is wrong with this object. The default is an empty string ("").
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Serializable`1.System#ComponentModel#IDataErrorInfo#Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Serializable`1.ConfigurationFilePath">
            <summary>
            Gets the user configuration file path for the given T type.
            </summary>
            <value>The configuration file path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SearchAndReplace">
            <summary>
            Defines a utility class to search for pattern in input text and replace.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SearchAndReplace"/> class.
            </summary>
            <param name="pattern">The pattern to use. May not be null.</param>
            <param name="replacements">A comma separated list of replacement strings. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SearchAndReplace"/> class.
            </summary>
            <param name="pattern">The pattern to use. May not be null.</param>
            <param name="replacements">A comma separated list of replacement strings. May not be null.</param>
            <param name="regexOptions">The regex options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.#ctor(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.Char,System.Char,System.Char)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SearchAndReplace"/> class.
            </summary>
            <param name="pattern">The pattern to use. May not be null.</param>
            <param name="replacements">A comma separated list of replacement strings. May not be null.</param>
            <param name="regexOptions">The regex options.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="assignment">The assignment character.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.Replace(System.String)">
            <summary>
            Replaces the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>The replaced text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SearchAndReplace.Evaluator(System.Text.RegularExpressions.Match)">
            <summary>
            Evaluates the specified match.
            </summary>
            <param name="match">The match. May not be null.</param>
            <returns>The replaced string.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter">
            <summary>
            Defines an Xml Text Writer that is aware of the current line and column information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.GetIndentationLevel(System.Xml.XmlTextWriter)">
            <summary>
            Gets the indentation level of an XmlTextWriter calss.
            </summary>
            <param name="writer">The writer instance. May not be null.</param>
            <returns>The indentation level.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.#ctor(CodeFluent.Runtime.Utilities.LineInfoStreamWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter"/> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.Writer">
            <summary>
            Gets the underlying line info writer.
            </summary>
            <value>The writer instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoXmlTextWriter.IndentationLevel">
            <summary>
            Gets the current indentation level.
            </summary>
            <value>The level.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IEquivalent`1">
            <summary>
            Defines a generalized method that a class implements to create a type-specific method for determining equivalence of instances. 
            </summary>
            <typeparam name="T">The type of objects to compare</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IEquivalent`1.IsEquivalent(`0)">
            <summary>
            Indicates whether the current object is equal to another object of the same type. 
            </summary>
            <param name="obj">An object to compare with this object.</param>
            <returns>
            	<c>true</c> if the specified object is equivalent; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1">
            <summary>
            Provides a class for a collection whose keys are the same as values.
            It is used for computing distinct values from a collection.
            </summary>
            <typeparam name="T">The value and key type</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="collection">An existing collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
            <param name="collection">An existing collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
            <param name="dictionaryCreationThreshold">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="dictionaryCreationThreshold"/> is less than –1.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DistinctDictionary`1"/> class.
            </summary>
            <param name="collection">An existing collection.</param>
            <param name="comparer">The implementation of the <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> generic interface to use when comparing keys, or null to use the default equality comparer for the type of the key, obtained from <see cref="P:System.Collections.Generic.EqualityComparer`1.Default"/>.</param>
            <param name="dictionaryCreationThreshold">The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or –1 to specify that a lookup dictionary is never created.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="dictionaryCreationThreshold"/> is less than –1.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.GetKeyForItem(`0)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>The key for the specified element.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the elements of the specified collection to the end of this collection.
            </summary>
            <param name="collection">The collection. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.Add(`0)">
            <summary>
            Adds an element to the end of the Collection
            </summary>
            <param name="item">The object to be added to the end of the collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.ToArray">
            <summary>
            Copies the elements of the dictionary to a new array.
            </summary>
            <returns>An array of elements in the dictionary.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.GetDistinctValues(System.Collections.Generic.ICollection{`0})">
            <summary>
            Gets the distinct values for a given collection.
            </summary>
            <param name="collection">An existing collection. May not be null.</param>
            <returns>The list of distinct values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The <see cref="T:System.Object"/> to use as the key of the element to add.</param>
            <param name="value">The <see cref="T:System.Object"/> to use as the value of the element to add.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            An element with the same key already exists in the <see cref="T:System.Collections.IDictionary"/> object.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.IDictionary"/> is read-only.
            -or-
            The <see cref="T:System.Collections.IDictionary"/> has a fixed size.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.IDictionary"/> object contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.IDictionary"/> object.</param>
            <returns>
            true if the <see cref="T:System.Collections.IDictionary"/> contains an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#GetEnumerator">
            <summary>
            Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IDictionaryEnumerator"/> object for the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="key"/> is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.IDictionary"/> object is read-only.
            -or-
            The <see cref="T:System.Collections.IDictionary"/> has a fixed size.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#IsFixedSize">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.IList"/> has a fixed size.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.IList"/> has a fixed size; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Keys">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> object containing the keys of the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Values">
            <summary>
            Gets an <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Collections.ICollection"/> object containing the values in the <see cref="T:System.Collections.IDictionary"/> object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DistinctDictionary`1.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute">
            <summary>
            Provides a text description for an assembly generated by CodeFluent.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute"/> class.
            </summary>
            <param name="codeFluentVersion">The CodeFluent version.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.#ctor(System.String,System.String,CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute"/> class.
            </summary>
            <param name="codeFluentVersion">The CodeFluent version.</param>
            <param name="description">The description.</param>
            <param name="options">Generation options.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.#ctor(System.String,System.String,CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttributeOptions,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute"/> class.
            </summary>
            <param name="codeFluentVersion">The CodeFluent version.</param>
            <param name="description">The description.</param>
            <param name="options">Generation options.</param>
            <param name="modelCheckSum">The model check sum.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.IsCodeFluentGeneratedAssembly(System.Reflection.Assembly)">
            <summary>
            Determines whether the specified assembly is a CodeFluent Entities generated assembly.
            </summary>
            <param name="assembly">The assembly. May not be null.</param>
            <returns>
            	<c>true</c> if the specified assembly is a CodeFluent Entities generated assembly; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.ModelCheckSum">
            <summary>
            Gets the model checksum.
            </summary>
            <value>The model checksum.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.Options">
            <summary>
            Gets CodeFluent generation options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.Description">
            <summary>
            Gets a description.
            </summary>
            <value>A description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CodeFluentGeneratedAttribute.CodeFluentVersion">
            <summary>
            Gets the CodeFluent version.
            </summary>
            <value>The CodeFluent version.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.IMethod">
            <summary>
            Defines the interface that a CodeFluent rule engine must implement.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.IMethod.Invoke(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Invokes the specified rule.
            </summary>
            <param name="settings">The static settings. May be null.</param>
            <param name="arguments">The arguments. May be null.</param>
            <returns>An object whose value depends on the invoked rule. May be null.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidatorOperator">
            <summary>
            Specifies the validation comparison operators used by the System.Web.UI.WebControls.CompareValidator
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.Equal">
            <summary>
            A comparison for equality.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.NotEqual">
            <summary>
            A comparison for inequality.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.GreaterThan">
            <summary>
            A comparison for greater than.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.GreaterThanEqual">
            <summary>
            A comparison for greater than or equal to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.LessThan">
            <summary>
            A comparison for less than.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.LessThanEqual">
            <summary>
            A comparison for less than or equal to.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.DataTypeCheck">
            <summary>
            A comparison for data type only.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.Between">
            <summary>
            A range comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.BetweenEqual">
            <summary>
            A range comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.StartsWith">
            <summary>
            A comparison between the beginning of this instance and the specified string. This instance  is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.EndsWith">
            <summary>
            A comparison between the beginning of this instance and the specified string. This instance  is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOperator.Contains">
            <summary>
            A comparison between this instance content and the specified string. This instance is converted to a string if needed before comparison.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceRange">
            <summary>
            Represents a range of trace numbers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRange.All">
            <summary>
            Represents a range that includes all trace numbers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceRange.None">
            <summary>
            Represents a range that includes no trace numbers.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Diagnostics.TraceRange.#ctor(System.Int32,System.Int32,CodeFluent.Runtime.Diagnostics.TraceRangeMode)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Diagnostics.TraceRange"/> class.
            </summary>
            <param name="minimum">The minimum trace number.</param>
            <param name="maximum">The maximum trace number.</param>
            <param name="mode">The tracing range mode.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRange.Mininum">
            <summary>
            Gets the mininum included trace number.
            </summary>
            <value>The mininum trace number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRange.Maximum">
            <summary>
            Gets the maximum included trace number.
            </summary>
            <value>The maximum trace number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Diagnostics.TraceRange.Mode">
            <summary>
            Gets the tracing mode for this range.
            </summary>
            <value>The current range tracing mode.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.TraceLevel">
            <summary>
            Defines trace levels for the current assembly.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.UnhandledException">
            <summary>
            Unhandled Exception.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.BinaryLargeObject">
            <summary>
            Binary Large Object trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.OfficeList">
            <summary>
            Data Synchronization producer trace range for lists.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.OfficeWebs">
            <summary>
            Data Synchronization producer trace range for webs.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Persistence">
            <summary>
            Persistence trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Context">
            <summary>
            Context trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Collections">
            <summary>
            Collections trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.ServiceHost">
            <summary>
            CodeFluent.Runtime.ServiceHost.exe trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Service">
            <summary>
            CodeFluent Service trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.SharePoint">
            <summary>
            CodeFluent SharePoint Runtime trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.SharePointVpp">
            <summary>
            CodeFluent SharePoint Runtime Virtual Path Provider trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Interop">
            <summary>
            CodeFluent Interop code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.RuntimeModel">
            <summary>
            CodeFluent Runtime Model trace range.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.TraceLevel.Database">
            <summary>
            CodeFluent Runtime Database trace range.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonUtilities">
            <summary>
            As set of utility methods used by the RibbonControl.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.GetDisabledImage(System.Drawing.Image)">
            <summary>
            Creates a grayscale image for a given image.
            </summary>
            <param name="image">The image.</param>
            <returns>A grayscal image.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawArrow(System.Drawing.Graphics,System.Int32,System.Int32,System.Windows.Forms.ArrowDirection,System.Drawing.Color)">
            <summary>
            Draws an arrow.
            </summary>
            <param name="graphics">The Graphics used to draw the arrow. May not be null.</param>
            <param name="x">The x-coordinate of the arrow.</param>
            <param name="y">The y-coordinate of the arrow.</param>
            <param name="direction">The direction in which the arrow points.</param>
            <param name="color">The color of the arrow.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawArrow(System.Drawing.Graphics,System.Drawing.Point,System.Windows.Forms.ArrowDirection,System.Drawing.Color)">
            <summary>
            Draws an arrow.
            </summary>
            <param name="graphics">The Graphics used to draw the arrow. May not be null.</param>
            <param name="location">The coordinates of the arrow.</param>
            <param name="direction">The direction in which the arrow points.</param>
            <param name="color">The color of the arrow.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DecodeMessage(System.Windows.Forms.Message)">
            <summary>
            Decodes a Windows message.
            </summary>
            <param name="message">The message.</param>
            <returns>A text representing the message.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a separator line.
            </summary>
            <param name="graphics">The Graphics used to draw the separator line. May not be null.</param>
            <param name="rectangle">The rectangle that defines the separator bounds.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Pen,System.Int32)">
            <summary>
            Draws a rounded rectangle.
            </summary>
            <param name="graphics">The Graphics used to draw the rectangle. May not be null.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="pen">The pen used to draw the rectangle.</param>
            <param name="radius">The corner radius.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush,System.Int32)">
            <summary>
            Fills a rounded rectangle.
            </summary>
            <param name="graphics">The Graphics used to draw the rectangle. May not be null.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="brush">The brush used to fill the rectangle.</param>
            <param name="radius">The corner radius.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.FillRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush,System.Int32,System.Drawing.Pen)">
            <summary>
            Fills a rounded rectangle.
            </summary>
            <param name="graphics">The Graphics used to draw the rectangle. May not be null.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="brush">The brush used to fill the rectangle.</param>
            <param name="radius">The corner radius.</param>
            <param name="border">The pen used as a border. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.GetRoundedRectanglePath(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Gets a rounded rectangle path.
            </summary>
            <param name="rectangle">The rectangle.</param>
            <param name="radius">The corner radius.</param>
            <returns>A graphics path that represents a rounded rectangle.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonUtilities.DrawDropShadow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32,CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition,System.Single,System.Boolean)">
            <summary>
            Draws a drop shadow.
            </summary>
            <param name="graphics">The Graphics used to draw the shadow. May not be null.</param>
            <param name="sourceRectangle">The source rectangle.</param>
            <param name="baseColor">The base color.</param>
            <param name="shadowDepth">The shadow depth.</param>
            <param name="lightSourcePosition">The light source position.</param>
            <param name="lightSourceIntensity">The light source intensity.</param>
            <param name="roundEdges">if set to <c>true</c> the rectangle will have round edges.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonUtilities.IsApplicationActive">
            <summary>
            Gets a value indicating whether this application is active (owns the foreground window).
            </summary>
            <value>
            	<c>true</c> if this application active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition">
            <summary>
            Defines a light source position for a drop shadow.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Bottom">
            <summary>
            Light is positioned at bottom.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Center">
            <summary>
            Light is positioned on center.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Left">
            <summary>
            Light is positioned on the left.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Right">
            <summary>
            Light is positioned on the right.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonUtilities.LightSourcePosition.Top">
            <summary>
            Light is positioned at top.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonStyle">
            <summary>
            Defines the ribbon style
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints a separator.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintHighlightedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the highlighted tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintSelectedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the selected tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.GetTooltipBackgroundBrush(System.Drawing.Rectangle)">
            <summary>
            Gets the tooltip background brush.
            </summary>
            <param name="rect">The rect.</param>
            <returns>A brush instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.PaintButtonBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)">
            <summary>
            Paints a button background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rect.</param>
            <param name="state">The button state.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.Ribbon">
            <summary>
            Gets or sets the ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderRadius">
            <summary>
            Gets the tab header radius.
            </summary>
            <value>The tab header radius.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TooltipEllipseSize">
            <summary>
            Gets the size of the tooltip ellipse.
            </summary>
            <value>The size of the tooltip ellipse.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.ShadowSize">
            <summary>
            Gets the shadow size.
            </summary>
            <value>The shadow size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderTitleColor">
            <summary>
            Gets the color of the tab header title.
            </summary>
            <value>The color of the tab header title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderTitleSelectedColor">
            <summary>
            Gets the color of the selected tab header title.
            </summary>
            <value>The color of the selected tab header title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.TabHeaderTitleHighlightedColor">
            <summary>
            Gets the color of the highlighted tab header title.
            </summary>
            <value>The color of the highlighted tab header title.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style">
            <summary>
            Defines the Office 2010 ribbon style.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.GetTooltipBackgroundBrush(System.Drawing.Rectangle)">
            <summary>
            Gets the tooltip background brush.
            </summary>
            <param name="rect">The rect.</param>
            <returns>A brush instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints a separator.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintHighlightedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the highlighted tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintSelectedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the selected tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.Office2010Style.PaintButtonBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)">
            <summary>
            Paints a button background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rect.</param>
            <param name="state">The button state.</param>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle">
            <summary>
            Defines the Modern ribbon style.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.GetTooltipBackgroundBrush(System.Drawing.Rectangle)">
            <summary>
            Gets the tooltip background brush.
            </summary>
            <param name="rect">The rect.</param>
            <returns>A brush instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints the background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintSeparator(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Paints a separator.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rectangle.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintHighlightedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the highlighted tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintSelectedTabHeader(System.Drawing.Graphics,CodeFluent.Runtime.Design.RibbonTab)">
            <summary>
            Paints the selected tab.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="tab">The tab.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.PaintButtonBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.PushButtonState)">
            <summary>
            Paints a button background.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="rect">The rect.</param>
            <param name="state">The button state.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.TooltipEllipseSize">
            <summary>
            Gets the size of the tooltip ellipse.
            </summary>
            <value>The size of the tooltip ellipse.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.ShadowSize">
            <summary>
            Gets the shadow size.
            </summary>
            <value>The shadow size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.TabHeaderRadius">
            <summary>
            Gets the tab header radius.
            </summary>
            <value>The tab header radius.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonStyle.MetroStyle.TabHeaderTitleSelectedColor">
            <summary>
            Gets the color of the selected tab header title.
            </summary>
            <value>The color of the selected tab header title.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItem">
            <summary>
            Defines a ribbon item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is clicked on this item.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ComputeBounds">
            <summary>
            Computes the item and children bounds.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the item.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.PaintHighlighted(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the highlighted box.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Design.RibbonItem.MouseClick">
            <summary>
            Occurs when the mouse is clicked on this item.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.X">
            <summary>
            Gets or sets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Y">
            <summary>
            Gets or sets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.TooltipText">
            <summary>
            Gets or sets the tooltip text.
            </summary>
            <value>The tooltip text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Icon">
            <summary>
            Gets the icon.
            </summary>
            <value>The icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.SmallIcon">
            <summary>
            Gets the small icon.
            </summary>
            <value>The small icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.RaiseItemMouseClick">
            <summary>
            Gets a value indicating whether mouse click must be raised at ribbon control level.
            </summary>
            <value>
            	<c>true</c> if mouse click must be raised at ribbon control; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ComputedMode">
            <summary>
            Gets or sets the computed mode.
            </summary>
            <value>The computed mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IconIndex">
            <summary>
            Gets or sets the index of the icon.
            </summary>
            <value>The index of the icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.SmallIconIndex">
            <summary>
            Gets or sets the index of the small icon.
            </summary>
            <value>The index of the small icon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsVisible">
            <summary>
            Gets or sets a value indicating whether this instance is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsDisabled">
            <summary>
            Gets a value indicating whether this instance is disabled.
            </summary>
            <value>
            	<c>true</c> if this instance is disabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.IsHighlighted">
            <summary>
            Gets or sets a value indicating whether this instance is highlighted.
            </summary>
            <value>
            	<c>true</c> if this instance is highlighted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Ribbon">
            <summary>
            Gets the owner ribbon.
            </summary>
            <value>The ribbon.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>The bounds.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ColumnIndex">
            <summary>
            Gets the index of the column in the panel.
            </summary>
            <value>The index of the column.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.LineIndex">
            <summary>
            Gets the index of the line in the panel.
            </summary>
            <value>The index of the line.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.AccessibleObject">
            <summary>
            Gets the accessible object.
            </summary>
            <value>The accessible object.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject"/> class.
            </summary>
            <param name="item">The owner item.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The default action for the control cannot be performed.
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Item">
            <summary>
            Gets the owner item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The bounds of control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Description">
            <summary>
            Gets a string that describes the visual appearance of the specified object. Not all objects have a description.
            </summary>
            <value></value>
            <returns>
            A description of the object's visual appearance to the user, or null if the object does not have a description.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The description for the control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItem.ItemAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The name of the control cannot be retrieved or set.
            </exception>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockFloatWindow">
            <summary>
            Defines a floating window in the DockPanel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockFloatWindow"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.GetWindowFromPoint(System.Drawing.Point)">
            <summary>
            Gets a window from a screen location.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>An instance of the DockWindow class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnClosed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closed"/> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnContextMenuClick(System.Object,System.EventArgs)">
            <summary>
            Called when a context menu item is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnContextMenuOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the context menu is opening.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Defines the window procedure function.
            </summary>
            <param name="m">The window message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockFloatWindow.ComputeDockedWindows">
            <summary>
            Computes the docked windows layout.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindow.Windows">
            <summary>
            Gets the list of windows in the floating window.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindow.Index">
            <summary>
            Gets the index in the panel's collection of floating windows.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockFloatWindow.Panel">
            <summary>
            Gets or sets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.BlockCollection">
            <summary>
            Defines a collection of template blocks.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.BlockCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.BlockCollection.Count">
            <summary>
            Gets the number of blocks in the collection.
            </summary>
            <value>The blocks number.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.BlockCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CodeFluent.Model.Common.Templating.Block"/> at the specified index.
            </summary>
            <value>An instance of the Block class.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoText">
            <summary>
            Defines an XmlLineInfoText that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoText.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoText"/> class.
            </summary>
            <param name="strData">The content of the node; see the <see cref="P:System.Xml.XmlText.Value"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoText.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoText.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoText.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoText.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace">
            <summary>
            Defines an XmlLineInfoSignificantWhitespace that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace"/> class.
            </summary>
            <param name="strData">The white space characters of the node.</param>
            <param name="doc">The <see cref="T:System.Xml.XmlDocument"/> object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoSignificantWhitespace.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ShortNameUtilities">
            <summary>
            A utility class to compute unique short names for a given collection of names.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ShortNameUtilities.BuildShortNames(System.Collections.ArrayList,System.Int32)">
            <summary>
            Builds a short names collection.
            </summary>
            <param name="names">The input collection of names to shorten. May not be null.</param>
            <param name="maxLength">Maximum length of computed short names.</param>
            <returns>A dictionary of shorten names</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ShortNameUtilities.CreateShortName(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.String)">
            <summary>
            Create a short name, making sure it does not collide with an existing collection of short names.
            </summary>
            <param name="shortNames">The list of existing short names.</param>
            <param name="maxLength">Maximum length of computed short name.</param>
            <param name="name">The shorten name.</param>
            <returns>A string representing the short name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ShortNameUtilities.BuildShortNames(System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Builds a short names collection.
            </summary>
            <param name="names">The input collection of names to shorten. May not be null.</param>
            <param name="maxLength">Maximum length of computed short names.</param>
            <returns>A dictionary of shorten names</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonSerializationOptions">
            <summary>
            Define options for JSON serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseTypeDescriptor">
            <summary>
            Use Type Descriptor (including custom ones) when serializing custom objects.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseReflection">
            <summary>
            Use pure reflection when serializing custom objects.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseXmlIgnore">
            <summary>
            Avoid fields and properties marked with the XmlIgnore attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.AppendTimeZoneUtcOffsetToDates">
            <summary>
            Append time zone utc offset to date values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.SerializeFields">
            <summary>
            Serializes fields.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseISerializable">
            <summary>
            Use the ISerializable interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseIBinarySerialize">
            <summary>
            Use the IBinarySerialize interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateFormatJs">
            <summary>
            Use the [new Date(utc milliseconds)] format.
            Note this format is not generally supported by browsers native JSON parsers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateFormatIso8601">
            <summary>
            Use the ISO 8601 string format ('s' DateTime format).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.UseScriptIgnore">
            <summary>
            Avoid fields and properties marked with the ScriptIgnore attribute.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.DateFormatRoundtripUtc">
            <summary>
            Use the ISO 8601 roundtrip string format ('o' DateTime format).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.EnumAsText">
            <summary>
            Serialize enum values as text.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.ContinueOnCycle">
            <summary>
            Continue serialization if a cycle was detected.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.ContinueOnValueError">
            <summary>
            Continue serialization if getting a value throws error.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.JsonSerializationOptions.Default">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable">
            <summary>
            Defines a wrapper class that can enumerate
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.#ctor(System.Array)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable"/> class.
            </summary>
            <param name="array">An input array.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable"/> class.
            </summary>
            <param name="enumerable">An input enumerable.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DbDataRecordEnumerable.BaseObject">
            <summary>
            Gets the base object.
            </summary>
            <value>The base object.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException">
            <summary>
            The exception that is thrown when a compound read only error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundReadOnlyException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="T:CodeFluent.Runtime.Design.WizardForm">
            <summary>
            Defines a base form to create a wizard.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.HeaderLabel">
            <summary>
            The header label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.Header">
            <summary>
            The header panel.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.LabelLogo">
            <summary>
            The label logo.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.FinishButton">
            <summary>
            The finish button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.NextButton">
            <summary>
            The next button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.CloseButton">
            <summary>
            The cancel button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.Page">
            <summary>
            The page container control.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.PreviousButton">
            <summary>
            The previous button.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.FooterLabel">
            <summary>
            The footer label.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.BoldFont">
            <summary>
            Defines the bold font used by the Wizard forms.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.WizardForm.RegularFont">
            <summary>
            Defines the base font used by the Wizard forms.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardForm"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.ClearErrors">
            <summary>
            Clears the errors.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddReport(System.Exception)">
            <summary>
            Adds an exception report to display in the report page.
            </summary>
            <param name="report">The report exception. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddReport(CodeFluent.Runtime.Design.WizardAction)">
            <summary>
            Adds a report to display in the report page.
            </summary>
            <param name="report">The report to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.GetAction(System.String)">
            <summary>
            Gets an action using its key.
            </summary>
            <param name="id">The id. May not be null.</param>
            <returns>An instance of the WizardAction class, or null if it was not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.ClearActions">
            <summary>
            Clears the actions.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddAction(CodeFluent.Runtime.Design.WizardAction)">
            <summary>
            Adds an action to display in the summary page.
            </summary>
            <param name="action">The action to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.AddPage(CodeFluent.Runtime.Design.WizardPage)">
            <summary>
            Adds a page.
            </summary>
            <param name="page">The page to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnCancel">
            <summary>
            Called when the cancel button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnFinish">
            <summary>
            Called when the finish button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnPrevious">
            <summary>
            Called when the previous button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnNext">
            <summary>
            Called when the next button is clicked.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.SetCurrentPage(CodeFluent.Runtime.Design.WizardPage)">
            <summary>
            Sets the current page to a specified page.
            </summary>
            <param name="page">The page. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.UpdateButtons">
            <summary>
            Updates the buttons.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardForm.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Closing"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.ShowExceptions">
            <summary>
            Gets or sets a value indicating whether the wizard shows exceptions on mouse clicks.
            </summary>
            <value><c>true</c> if exceptions are shown; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.CancelOnClose">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Design.WizardForm"/> will return a cancel if closed.
            </summary>
            <value><c>true</c> if cancel on close; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.Reports">
            <summary>
            Gets the declared reports so far.
            </summary>
            <value>The reports.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.HasErrors">
            <summary>
            Gets a value indicating whether this instance has errors.
            </summary>
            <value>
            	<c>true</c> if this instance has errors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.Errors">
            <summary>
            Gets the list of errors.
            </summary>
            <value>A list of errors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.Actions">
            <summary>
            Gets the declared actions so far.
            </summary>
            <value>The actions.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.CurrentPage">
            <summary>
            Gets the current page.
            </summary>
            <value>The current page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <value>The previous page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.NextPage">
            <summary>
            Gets the next page.
            </summary>
            <value>The next page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.FinishPage">
            <summary>
            Gets the finish page.
            </summary>
            <value>The finish page.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardForm.LastPage">
            <summary>
            Gets the last page.
            </summary>
            <value>The last page.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.WizardAction">
            <summary>
            Defines a wizard action. Wizard actions are used in summary or report pages.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardAction"/> class.
            </summary>
            <param name="category">The action category. May not be null.</param>
            <param name="text">The action text. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardAction"/> class.
            </summary>
            <param name="id">The action id. May not be null.</param>
            <param name="category">The action category. May not be null.</param>
            <param name="text">The action text. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.WizardAction"/> class.
            </summary>
            <param name="id">The action id. May not be null.</param>
            <param name="category">The action category. May not be null.</param>
            <param name="text">The action text. May not be null.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.WizardAction.CompareTo(CodeFluent.Runtime.Design.WizardAction)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Error">
            <summary>
            Gets or sets an exception.
            </summary>
            <value>The error.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Tag">
            <summary>
            Gets or sets a custom object.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.SortOrder">
            <summary>
            Gets or sets the action sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Id">
            <summary>
            Gets the action id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Category">
            <summary>
            Gets the action category.
            </summary>
            <value>The category.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.WizardAction.Text">
            <summary>
            Gets the action text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindow">
            <summary>
            Defines a window in the DockPanel.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IDockCaptionOwner">
            <summary>
            Defines a DockCaption owner control.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Title">
            <summary>
            Gets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDockCaptionOwner.Position">
            <summary>
            Gets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockWindow"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.CreateCaption">
            <summary>
            Creates an instance of the DockCaption class.
            </summary>
            <returns>An instance of the DockCaption class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.CreateTabsList">
            <summary>
            Creates an instance of the DockTabsList class.
            </summary>
            <returns>An instance of the DockTabsList class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockWindow.CreateChildPanel">
            <summary>
            Creates an instance of the DockChildPanel class.
            </summary>
            <returns>An instance of the DockChildPanel class.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Caption">
            <summary>
            Gets the caption control.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.TabsList">
            <summary>
            Gets the tabs list control.
            </summary>
            <value>The tab list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.ChildPanel">
            <summary>
            Gets the child panel.
            </summary>
            <value>The child panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Items">
            <summary>
            Gets the collection of items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.SplitterDistance">
            <summary>
            Gets the splitter distance.
            </summary>
            <value>The splitter distance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.AutoHidePanel">
            <summary>
            Gets the auto hide panel if the window is auto hidden.
            </summary>
            <value>The auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.HideTabsListIfOnlyOneItem">
            <summary>
            Gets or sets a value indicating whether to hide tabs list if the window contains only one item.
            </summary>
            <value>
            	<c>true</c> if the tabs list is hidden when the window contains only one item; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.PositionRelativeTo">
            <summary>
            Gets or sets the window this window position is relative to.
            </summary>
            <value>The window this window position is relative to or null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockWindow.SelectedItem">
            <summary>
            Gets the selected item.
            </summary>
            <value>The selected item or null..</value>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.DataReaderStream">
            <summary>
            Defines a binary stream on an IDataReader.
            The IDataReader must have been opened using a SequentialAccess command behavior.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.#ctor(System.Data.IDataReader,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.BinaryServices.DataReaderStream"/> class.
            </summary>
            <param name="reader">The input reader instance. May be null.</param>
            <param name="columnOrdinal">The binary column ordinal.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Flush">
            <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between offset and (offset + count - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">The sum of offset and count is larger than the buffer length. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support reading. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <param name="offset">A byte offset relative to the origin parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"></see> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the current stream.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.NotSupportedException">The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output. </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.DataReaderStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <param name="buffer">An array of bytes. This method copies count bytes from buffer to the current stream.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support writing. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
            <exception cref="T:System.ArgumentNullException">buffer is null. </exception>
            <exception cref="T:System.ArgumentException">The sum of offset and count is greater than the buffer length. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset or count is negative. </exception>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading.
            Always return true for DataReaderStream.
            </summary>
            <value>true if the stream supports reading; otherwise, false.</value>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.CanSeek">
            <summary>
            Gets a value indicating whether the current stream supports seeking.
            Always return false for DataReaderStream.
            </summary>
            <value>true if the stream supports seeking; otherwise, false.</value>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.CanWrite">
            <summary>
            Gets a value indicating whether the current stream supports writing.
            Always return false for DataReaderStream.
            </summary>
            <value>true if the stream supports writing; otherwise, false.</value>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.Length">
            <summary>
            Gets the length in bytes of the stream.
            Throws a NotSupportedException for DataReaderStream.
            </summary>
            <value></value>
            <returns>A long value representing the length of the stream in bytes.</returns>
            <exception cref="T:System.NotSupportedException">A class derived from Stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.DataReaderStream.Position">
            <summary>
            Gets or sets the position within the current stream.
            The setter throws a NotSupportedException for DataReaderStream.
            </summary>
            <value></value>
            <returns>The current position within the stream.</returns>
            <exception cref="T:System.IO.IOException">An I/O error occurs. </exception>
            <exception cref="T:System.NotSupportedException">The stream does not support seeking. </exception>
            <exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.TemplateOptions">
            <summary>
            Defines template options.
            This enumeration has a FlagsAttribute attribute that allows a bitwise combination of its member values.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.None">
            <summary>
            No option.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.Xml">
            <summary>
            The template format is Xml.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.RefreshCache">
            <summary>
            Refresh the template cache first.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.XmlAuto">
            <summary>
            Determination of Xml format is automatic.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.Rtf">
            <summary>
            The template format is Rtf.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.RtfAuto">
            <summary>
            Determination of Rtf format is automatic.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.Pdf">
            <summary>
            The template format is Pdf.
            This attribute is not currently supported.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.PdfAuto">
            <summary>
            Determination of Pdf format is automatic.
            This attribute is not currently supported.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.AspNet">
            <summary>
            The template format is ASP.Net server code.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.AspNetParser">
            <summary>
            Determination of ASP.Net format is automatic.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.Razor">
            <summary>
            The template format is Razor.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.RazorAuto">
            <summary>
            Determination of Razor format is automatic.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.Undefined">
            <summary>
            This value supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateOptions.Default">
            <summary>
            The default value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SystemUtilities">
            <summary>
            Defines a set of system utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SystemUtilities.GetTokenElevationType">
            <summary>
            Gets the token elevation type for the current process.
            </summary>
            <returns></returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.BitnessDescription">
            <summary>
            Gets a descriptive string of the current process bitness mode.
            </summary>
            <value>The bitness description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.IsWow64">
            <summary>
            Gets a value indicating whether the specified process is running under WOW64.
            </summary>
            <value><c>true</c> if the specified process is running under WOW64; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.Is64BitsProcess">
            <summary>
            Gets a value indicating whether this process is a 64 bits process.
            </summary>
            <value><c>true</c> if this process is a 64 bits process; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.ProcessorArchitecture">
            <summary>
            Gets the current computer system processor architecture.
            </summary>
            <value>The processor architecture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SystemUtilities.X86ProgramFiles">
            <summary>
            Gets the X86 program files directory.
            </summary>
            <returns>The X86 program files directory.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.PerceivedType">
            <summary>
            Specifies a file's perceived type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Custom">
            <summary>
            The file's perceived type as defined in the registry is not a known type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Unspecified">
            <summary>
            The file does not have a perceived type.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Folder">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Unknown">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Text">
            <summary>
            The file's perceived type is "text".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Image">
            <summary>
            The file's perceived type is "image".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Audio">
            <summary>
            The file's perceived type is "audio".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Video">
            <summary>
            The file's perceived type is "video".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Compressed">
            <summary>
            The file's perceived type is "compressed".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Document">
            <summary>
            The file's perceived type is "document".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.System">
            <summary>
            The file's perceived type is "system".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Application">
            <summary>
            The file's perceived type is "application".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.GameMedia">
            <summary>
            The file's perceived type is "gamemedia".
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedType.Contacts">
            <summary>
            The file's perceived type is "Contacts".
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.NameValueCollection">
            <summary>
            Defines a collection of values for the same key name.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollection"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollection.Add(System.Object)">
            <summary>
            Adds the specified value to the collection.
            </summary>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.FirstValue">
            <summary>
            Gets the first value or null.
            </summary>
            <value>The first value or null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value>The object instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollection.Count">
            <summary>
            Gets the count of values.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilities">
            <summary>
            A set of lightweight JSON utilities. See http://tools.ietf.org/html/rfc4627 for more information on JSON.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.Object)">
            <summary>
            Serializes the specified object. Supports anonymous and dynamic types.
            </summary>
            <param name="value">The object to serialize.</param>
            <returns>A JSON representation of the serialized object.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Serializes the specified object. Supports anonymous and dynamic types.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>
            A JSON representation of the serialized object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Serializes the specified object. Supports anonymous and dynamic types.
            </summary>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>
            A JSON representation of the serialized object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes the specified object to the specified TextWriter. Supports anonymous and dynamic types.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The object to serialize.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.IO.TextWriter,System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Serializes the specified object to the specified TextWriter. Supports anonymous and dynamic types.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Serialize(System.IO.TextWriter,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Serializes the specified object to the specified TextWriter. Supports anonymous and dynamic types.
            </summary>
            <param name="writer">The output writer. May not be null.</param>
            <param name="value">The object to serialize.</param>
            <param name="options">Options to use for serialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <param name="targetType">The required target type.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Type,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified text.
            </summary>
            <param name="text">The text text.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.IO.TextReader)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="reader">The input reader. May not be null.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Type)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="targetType">The required target type.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.IO.TextReader,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="reader">The input reader. May not be null.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.IO.TextReader,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="reader">The input reader. May not be null.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.String)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to deserialize.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.String,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to deserialize.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize``1(System.String,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to deserialize.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Type,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Type,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes an object from the specified TextReader.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="targetType">The required target type.</param>
            <param name="options">Options to use for deserialization.</param>
            <returns>
            An instance of an object representing the input data.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Object)">
            <summary>
            Deserializes data from the specified text and populates a specified object instance.
            </summary>
            <param name="text">The text to deserialize.</param>
            <param name="target">The object instance to populate.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes data from the specified text and populates a specified object instance.
            </summary>
            <param name="text">The text to deserialize.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.String,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes data from the specified text and populates a specified object instance.
            </summary>
            <param name="text">The text to deserialize.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Object)">
            <summary>
            Deserializes data from the specified TextReader and populates a specified object instance.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="target">The object instance to populate.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Object,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Deserializes data from the specified TextReader and populates a specified object instance.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Deserialize(System.IO.TextReader,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Deserializes data from the specified TextReader and populates a specified object instance.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="target">The object instance to populate.</param>
            <param name="options">Options to use for deserialization.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.Apply(System.Object,System.Object,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Applies the content of an array or dictionary to a target object.
            </summary>
            <param name="input">The input object.</param>
            <param name="target">The target object.</param>
            <param name="options">Options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteValue(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a value to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="value">The value to writer.</param>
            <param name="objectGraph">A graph of objects to track cyclic serialization.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteArray(System.IO.TextWriter,System.Array,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes an enumerable to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="array">The array. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteEnumerable(System.IO.TextWriter,System.Collections.IEnumerable,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes an enumerable to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="enumerable">The enumerable. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteDictionary(System.IO.TextWriter,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a dictionary to a JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="dictionary">The dictionary. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteObject(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes an object to the JSON writer.
            </summary>
            <param name="writer">The writer. May not be null.</param>
            <param name="value">The object to serialize. May not be null.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteNameValue(System.IO.TextWriter,System.String,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a name/value pair to a JSON writer.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <param name="name">The name. May not be null.</param>
            <param name="value">The value.</param>
            <param name="objectGraph">The object graph.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.WriteString(System.IO.TextWriter,System.String,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Writes a string to a JSON writer.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <param name="text">The text.</param>
            <param name="options">The options to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.EscapeString(System.String)">
            <summary>
            Escapes a string using JSON representation.
            </summary>
            <param name="value">The string to escape.</param>
            <returns>A JSON-escaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.EscapeString(System.String,CodeFluent.Runtime.Utilities.JsonSerializationOptions)">
            <summary>
            Escapes a string using JSON representation.
            </summary>
            <param name="value">The string to escape.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>A JSON-escaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilities.EscapeString(System.String,CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Escapes a string using JSON representation.
            </summary>
            <param name="value">The string to escape.</param>
            <param name="options">Options to use for serialization.</param>
            <returns>A JSON-escaped string.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CommandLineUtilities">
            <summary>
            A set of command line utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.Int32,``0)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.Int32,``0,System.IFormatProvider)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.Int32,System.Object,System.Type)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">Type of the conversion.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.Int32,System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Gets a positioned argument from the command line.
            </summary>
            <param name="index">The position of the argument in the command line.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">Type of the conversion.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.String,``0)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <typeparam name="T">The target type</typeparam>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument``1(System.String,``0,System.IFormatProvider)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <typeparam name="T">The target type</typeparam>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.HasArgument(System.String)">
            <summary>
            Determines whether the argument is specified in the command line.
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <returns>
            	<c>true</c> if the the argument is specified in the command line; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.String,System.Object,System.Type)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">The target type of the value.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CommandLineUtilities.GetArgument(System.String,System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Gets a named argument from the command line.
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found or is not convertible in the target type.</param>
            <param name="conversionType">The target type of the value.</param>
            <param name="provider">A format provider. May be null.</param>
            <returns>
            A typed value representing the argument type.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CommandLineUtilities.HelpRequested">
            <summary>
            Gets a value indicating whether help was requested.
            </summary>
            <value><c>true</c> if help was requested; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.StringValidator">
            <summary>
            Provides validation of a string value.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.StringValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Int32,System.Int32,System.String,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.StringValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="minLength">An integer that specifies the minimum length of the string value.</param>
            <param name="maxLength">An integer that specifies the maximum length of the string value.</param>
            <param name="invalidCharacters">A string that represents invalid characters.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.StringValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.StringValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.MinLength">
            <summary>
            Gets or sets the minimum length of the string.
            </summary>
            <value>The minimum length of the string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.MaxLength">
            <summary>
            Gets or sets the maximum length of the string.
            </summary>
            <value>The maximum length of the string.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.StringValidator.InvalidCharacters">
            <summary>
            Gets or sets a string that represents invalid characters.
            </summary>
            <value>The a string that represents invalid characters.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.StringValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.MinLength">
            <summary>
            The string is too short.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.MaxLength">
            <summary>
            The string is too long.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidator.FailureCode.InvalidCharacters">
            <summary>
            The string has invalid characters.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LookupValidator">
            <summary>
            Provides validation of a string using a list of allowed values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.DefaultSeparator">
            <summary>
            Defines the default separator value.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LookupValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.String,System.Char,System.Boolean,System.StringComparison,System.Type,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.LookupValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="values">A comma-separated list of values.</param>
            <param name="separator">The separator character.</param>
            <param name="allowMultiple">if set to <c>true</c> a combination of allowed string is valid.</param>
            <param name="comparison">The comparison rule to use.</param>
            <param name="enumType">An enum type name.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LookupValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.LookupValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is in a list of allowed values.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.ValuesList">
            <summary>
            Gets the list of allowed values.
            </summary>
            <value>The list of allowed values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.Separator">
            <summary>
            Gets or sets the separator character.
            </summary>
            <value>The separator character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.AllowMultiple">
            <summary>
            Gets or sets a value indicating whether a combination of allowed values is valid.
            </summary>
            <value><c>true</c> if a combination of allowed values is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.Values">
            <summary>
            Gets or sets the list of allowed values.
            </summary>
            <value>The comma-separated list of values.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.Comparison">
            <summary>
            Gets or sets the comparison rule to use.
            </summary>
            <value>The comparison rule to use.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.LookupValidator.EnumType">
            <summary>
            Gets or sets the type of an enumeration class that will provide the list of allowed values.
            </summary>
            <value>The enumeration class type name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.LookupValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.LookupValidator.FailureCode.Failed">
            <summary>
            The string is not in the list of available values.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.ICodeFluentValidator">
            <summary>
            Defines a CodeFluent validator instance.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.ICodeFluentValidator.Validate(System.Globalization.CultureInfo)">
            <summary>
            Validates the current instance.
            </summary>
            <param name="culture">The culture to use. May not be null.</param>
            <returns>null if validation was successful; otherwise a culture specific error message.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItemCollection">
            <summary>
            Defines a collection of ribbon items.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.EnableAll(System.Boolean)">
            <summary>
            Enables or disable all items.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.IndexOf(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Add(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Contains(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.CopyTo(CodeFluent.Runtime.Design.RibbonItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.Remove(CodeFluent.Runtime.Design.RibbonItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Panel">
            <summary>
            Gets the owner panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> with the specified title.
            </summary>
            <value>A ribbon item instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonItem"/> at the specified index.
            </summary>
            <value>A ribbon item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value></value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownItemCollection">
            <summary>
            Defines a collection of ribbon dropdown items.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.EnableAll(System.Boolean)">
            <summary>
            Enables or disable all items.
            </summary>
            <param name="enable">if set to <c>true</c> enable all.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.IndexOf(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Insert(System.Int32,CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Add(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Contains(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.CopyTo(CodeFluent.Runtime.Design.RibbonDropDownItem[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="array"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="arrayIndex"/> is less than 0.
            </exception>
            <exception cref="T:System.ArgumentException">
            	<paramref name="array"/> is multidimensional.
            -or-
            <paramref name="arrayIndex"/> is equal to or greater than the length of <paramref name="array"/>.
            -or-
            The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Remove(CodeFluent.Runtime.Design.RibbonDropDownItem)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.List">
            <summary>
            Gets the owner list.
            </summary>
            <value>The list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> with the specified title.
            </summary>
            <value>A ribbon dropdown item instance or null if not found.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownItem"/> at the specified index.
            </summary>
            <value>A ribbon dropdown item instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownItemCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <value>The number of elements.</value>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ChangeTypeConverter`1">
            <summary>
            Defines a generic type converter based on CodeFluent conversion routines.
            </summary>
            <typeparam name="T">Any type.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.ChangeTypeConverter`1"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance [can convert to] the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if this instance [can convert to] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ChangeTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:CodeFluent.Runtime.Design.ByteArrayConverter">
            <summary>
            Provides a type converter to convert byte arrays (System.Byte[]) objects to and from various other representations. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.GetBitmap(System.Byte[])">
            <summary>
            Gets the bitmap representation of the array of bytes.
            </summary>
            <param name="bytes">The array of bytes.</param>
            <returns>A bitmap instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.GetBitmap(System.Byte[],System.String,System.Single)">
            <summary>
            Gets the bitmap representation of the array of bytes.
            </summary>
            <param name="bytes">The array of bytes.</param>
            <param name="fontFamilyName">Name of the font family.</param>
            <param name="fontEmSize">Size of the font.</param>
            <returns>A bitmap instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.ByteArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destinationType"/> parameter is null. </exception>
            <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.TypeCreateHandler">
            <summary>
            Represents the method that handles a <see cref="T:CodeFluent.Model.Common.Templating.TypeCreateEventArgs"/> event. 
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlXPathElement">
            <summary>
            Defines an XmlElement for the XmlXPathDocument.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlXPathElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlXPathElement"/> class.
            </summary>
            <param name="prefix">The namespace prefix; see the <see cref="P:System.Xml.XmlElement.Prefix"/> property.</param>
            <param name="localName">The local name; see the <see cref="P:System.Xml.XmlElement.LocalName"/> property.</param>
            <param name="namespaceURI">The namespace URI; see the <see cref="P:System.Xml.XmlElement.NamespaceURI"/> property.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathElement.OwnerDocument">
            <summary>
            Gets the <see cref="T:System.Xml.XmlDocument"/> to which this node belongs.
            </summary>
            <value></value>
            <returns>
            The XmlDocument to which this element belongs.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlXPathElement.XPathExpression">
            <summary>
            Gets the XPath expression for this instance.
            </summary>
            <value>The XPath information.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection">
            <summary>
            Defines an XmlCDataSection that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection"/> class.
            </summary>
            <param name="data">The data.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoCDataSection.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs">
            <summary>
            Provides data for a JSON utilities event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.#ctor(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs"/> class.
            </summary>
            <param name="writer">The writer currently in use.</param>
            <param name="value">The value on the stack.</param>
            <param name="objectGraph">The current serialization object graph.</param>
            <param name="options">The options currently in use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.#ctor(System.IO.TextWriter,System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object},CodeFluent.Runtime.Utilities.JsonUtilitiesOptions,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs"/> class.
            </summary>
            <param name="writer">The writer currently in use.</param>
            <param name="value">The value on the stack.</param>
            <param name="objectGraph">The current serialization object graph.</param>
            <param name="options">The options currently in use.</param>
            <param name="name">The field or property name.</param>
            <param name="component">The component holding the value.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs"/> is handled.
            An handled object can be skipped, not written to the stream. If the object is written, First must be set to false, otherwise it must not be changed.
            </summary>
            <value><c>true</c> if handled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.First">
            <summary>
            Gets or sets a value indicating whether the object being handled is first in the list.
            If the object is handled and written to the stream, this must be set to false after the stream is written.
            If the object is skipped, it must not be changed.
            </summary>
            <value><c>true</c> if this is the first object; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Options">
            <summary>
            Gets the options currently in use.
            </summary>
            <value>The options.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Writer">
            <summary>
            Gets the writer currently in use.
            </summary>
            <value>The writer.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.ObjectGraph">
            <summary>
            Gets the current serialization object graph.
            </summary>
            <value>The object graph.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Value">
            <summary>
            Gets or sets the value on the stack.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Component">
            <summary>
            Gets the component holding the value. May be null.
            </summary>
            <value>The component.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.JsonUtilitiesEventArgs.Name">
            <summary>
            Gets or sets the name on the stack. The Name can be a property or field name when serializing objects. May be null.
            </summary>
            <value>The value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream">
            <summary>
            Defines a MemoryStream that does not sit on the Large Object Heap, thus avoiding memory fragmentation.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.DefaultChunkSize">
            <summary>
            Defines the default chunk size. Currently defined as 0x10000.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class.
            </summary>
            <param name="chunkSize">Size of the underlying chunks.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class based on the specified byte array.
            </summary>
            <param name="buffer">The array of unsigned bytes from which to create the current stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.#ctor(System.Int32,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ChunkedMemoryStream"/> class based on the specified byte array.
            </summary>
            <param name="chunkSize">Size of the underlying chunks.</param>
            <param name="buffer">The array of unsigned bytes from which to create the current stream.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream"/> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            This implementation does nothing.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentException">
            The sum of <paramref name="offset"/> and <paramref name="count"/> is larger than the buffer length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="offset"/> or <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.ToArray">
            <summary>
            Converts the current stream to a byte array.
            </summary>
            <returns>An array of bytes</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentException">
            The sum of <paramref name="offset"/> and <paramref name="count"/> is greater than the buffer length.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is null.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="offset"/> or <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.WriteTo(System.IO.Stream)">
            <summary>
            Writes to the specified stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.FreeOnDispose">
            <summary>
            Gets or sets a value indicating whether to free the underlying chunks on dispose.
            </summary>
            <value><c>true</c> if [free on dispose]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <value></value>
            <returns>true if the stream supports reading; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <value></value>
            <returns>true if the stream supports seeking; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <value></value>
            <returns>true if the stream supports writing; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <value></value>
            <returns>
            A long value representing the length of the stream in bytes.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.ChunkSize">
            <summary>
            Gets or sets the size of the underlying chunks. Cannot be greater than or equal to 85000.
            </summary>
            <value>The chunks size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ChunkedMemoryStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <value></value>
            <returns>
            The current position within the stream.
            </returns>
            <exception cref="T:System.ObjectDisposedException">
            Methods were called after the stream was closed.
            </exception>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.BooleanEnum">
            <summary>
            Defines an enumeration with boolean values.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.BooleanEnum.False">
            <summary>
            The false value.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.BooleanEnum.True">
            <summary>
            The true value.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.IDisplayable">
            <summary>
            Defines classes that have a display name.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.IDisplayable.DisplayName">
            <summary>
            Gets the current instance display name.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockPanel">
            <summary>
            Defines a dock panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockPanel"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.OnItemClosing(System.Object,CodeFluent.Runtime.Design.DockItemEventArgs)">
            <summary>
            Called when an item is closing.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:CodeFluent.Runtime.Design.DockItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.OnItemClosed(System.Object,CodeFluent.Runtime.Design.DockItemEventArgs)">
            <summary>
            Called when an item is closed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:CodeFluent.Runtime.Design.DockItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateHandle">
            <summary>
            Creates a handle for the control.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The object is in a disposed state. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateSelectionForm">
            <summary>
            Creates a selection form.
            </summary>
            <returns>An instance of the Form class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateFloatWindow">
            <summary>
            Creates a float window.
            </summary>
            <returns>An instance of the DockFloatWindow class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateDropForm(System.Drawing.Point)">
            <summary>
            Creates a drop form.
            </summary>
            <param name="locationOffset">The location offset.</param>
            <returns>An instance of the DockDropForm class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateFloatDropForm">
            <summary>
            Creates a float drop form.
            </summary>
            <returns>An instance of the DockFloatDropForm class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateAutoHideWindow">
            <summary>
            Creates an auto hide window.
            </summary>
            <returns>An instance of the DockAutoHideWindow class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateAutoHidePanel(CodeFluent.Runtime.Design.DockWindowPosition)">
            <summary>
            Creates an auto hide panel.
            </summary>
            <param name="position">The position.</param>
            <returns>An instance of the DockAutoHidePanel class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.Dispose(System.Boolean)">
            <summary>
            Releases disposable resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.GetWindowFromPoint(System.Drawing.Point)">
            <summary>
            Gets the window from a screen location.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>An instance of the DockWindow class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.GetFloatWindowFromPoint(System.Drawing.Point)">
            <summary>
            Gets the floating window a screen location.
            </summary>
            <param name="screenLocation">The screen location.</param>
            <returns>An instance of the DockFloatWindow class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CloseItem(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <param name="name">The name. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.GetItem(System.String)">
            <summary>
            Gets the item with the specified name.
            </summary>
            <param name="name">The name. May not be null.</param>
            <returns></returns>
            <returns>An instance of the DockItem class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.Clear">
            <summary>
            Clears this panel.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.CreateContextMenu(System.EventHandler)">
            <summary>
            Creates the context menu.
            </summary>
            <param name="onItemClick">The handler for item click.</param>
            <returns>An instance of the ContextMenuStrip class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Raises the <see cref="E:Layout"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.ComputeFloatWindows">
            <summary>
            Computes the floating windows layout.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.ComputeAutoHideWindows">
            <summary>
            Computes the auto hide windows layout.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.BuildSplitWindowsControl(System.Collections.Generic.IEnumerable{CodeFluent.Runtime.Design.DockWindow})">
            <summary>
            Builds the main split control.
            </summary>
            <param name="windows">The list of windows.</param>
            <returns>An instance of the Control class or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.ComputeDockedWindows">
            <summary>
            Computes the docked windows layout.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.LoadLayout(System.String)">
            <summary>
            Loads the layout from a string.
            </summary>
            <param name="layout">The layout string.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.LoadItemLayout(CodeFluent.Runtime.Design.DockItem,System.Xml.XmlElement)">
            <summary>
            Loads an item layout from an XmlElement.
            </summary>
            <param name="item">The item. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.LoadWindowLayout(CodeFluent.Runtime.Design.DockWindow,System.Xml.XmlElement)">
            <summary>
            Loads a window layout from an XmlElement.
            </summary>
            <param name="window">The window. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.SaveItemLayout(CodeFluent.Runtime.Design.DockItem,System.Xml.XmlElement)">
            <summary>
            Saves an item layout to an XmlElement.
            </summary>
            <param name="item">The item. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.SaveWindowLayout(CodeFluent.Runtime.Design.DockWindow,System.Xml.XmlElement)">
            <summary>
            Saves a window layout to an XmlElement.
            </summary>
            <param name="window">The window. May not be null.</param>
            <param name="element">The element. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockPanel.SaveLayout">
            <summary>
            Saves the layout.
            </summary>
            <returns>A string representing the layout</returns>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockPanel.ItemClosing">
            <summary>
            Occurs when an item is closing.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Design.DockPanel.ItemClosed">
            <summary>
            Occurs when an item is closed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropCenterImage">
            <summary>
            Gets the dock drop center image.
            </summary>
            <value>The dock drop center image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropTopImage">
            <summary>
            Gets the dock drop top image.
            </summary>
            <value>The dock drop top image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropBottomImage">
            <summary>
            Gets the dock drop bottom image.
            </summary>
            <value>The dock drop bottom image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropLeftImage">
            <summary>
            Gets the dock drop left image.
            </summary>
            <value>The dock drop left image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockDropRightImage">
            <summary>
            Gets the dock drop right image.
            </summary>
            <value>The dock drop right image.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.CaptionImages">
            <summary>
            Gets the caption images.
            </summary>
            <value>The caption images.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.BackPanel">
            <summary>
            Gets the back panel.
            </summary>
            <value>The back panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.Windows">
            <summary>
            Gets the list of docked windows.
            </summary>
            <value>The windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.FloatWindows">
            <summary>
            Gets the list of floating windows.
            </summary>
            <value>The float windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AutoHideWindow">
            <summary>
            Gets the auto hide window.
            </summary>
            <value>The auto hide window.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AllItems">
            <summary>
            Enumerates all items.
            </summary>
            <value>All items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AutoHidePanels">
            <summary>
            Gets the collection of all auto hide panels.
            </summary>
            <value>The auto hide panels.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.TopAutoHidePanel">
            <summary>
            Gets the top auto hide panel.
            </summary>
            <value>The top auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.BottomAutoHidePanel">
            <summary>
            Gets the bottom auto hide panel.
            </summary>
            <value>The bottom auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.LeftAutoHidePanel">
            <summary>
            Gets the left auto hide panel.
            </summary>
            <value>The left auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.RightAutoHidePanel">
            <summary>
            Gets the right auto hide panel.
            </summary>
            <value>The right auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.WindowCaption">
            <summary>
            Gets the window caption brush.
            </summary>
            <value>The window caption brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.CapturedWindowCaption">
            <summary>
            Gets the captured window caption brush.
            </summary>
            <value>The captured window caption brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.WindowCaptionText">
            <summary>
            Gets the window caption text brush.
            </summary>
            <value>The window caption text brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.WindowBorderPen">
            <summary>
            Gets the window border pen brush.
            </summary>
            <value>The window border pen brush.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.TabsListPadding">
            <summary>
            Gets or sets the tabs list padding.
            </summary>
            <value>The tab list padding.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.TabsListHeight">
            <summary>
            Gets or sets the height of the tabs list.
            </summary>
            <value>The height of the tab list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.CaptionHeight">
            <summary>
            Gets or sets the height of the caption.
            </summary>
            <value>The height of the caption.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.AutoHideWindows">
            <summary>
            Enumerates the auto hide windows.
            </summary>
            <value>The auto hide windows.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockPanel.DockedWindows">
            <summary>
            Enumerates the docked windows.
            </summary>
            <value>The docked windows.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockLayoutPanel">
            <summary>
            Defines a TableLayoutPanel that is optimized for double-buffering.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockLayoutPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockLayoutPanel"/> class.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockItemEventArgs">
            <summary>
            Provides data for the dock item events.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockItemEventArgs.#ctor(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockItemEventArgs"/> class.
            </summary>
            <param name="item">The item. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockItemEventArgs.Item">
            <summary>
            Gets the item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockDropSelectionForm">
            <summary>
            Defines a utility Form to display the selection box of the DockPanel control.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockDropSelectionForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockDropSelectionForm"/> class.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockDropSelectionForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SecurityUtilities">
            <summary>
            Defines a set of security utilities.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SecurityUtilities.IsRepeatableHashAlgorithm(System.String)">
            <summary>
            Determines whether the specified algorithm computes a repeatable hash result.
            </summary>
            <param name="hashAlgorithmType">The hash algorithm type. May not be null.</param>
            <returns>
            	<c>true</c> if the specified algorithm computes a repeatable hash result; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter">
            <summary>
            Defines a class that keeps the current line and column information over a regular StreamWriter.
            It is also capable of indenting new lines by spaces or tabs characters.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified stream, using UTF-8 encoding and the default buffer size.
            </summary>
            <param name="stream">The stream to write to.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified stream, using the specified encoding and the default buffer size.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified file on the specified path, using the default encoding and buffer size.
            </summary>
            <param name="path">The complete file path to write to.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class for the specified file on the specified path, using the default encoding and buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
            </summary>
            <param name="path">The complete file path to write to.</param>
            <param name="append">Determines whether data is to be appended to the file. If the file exists and append is false, the file is overwritten. If the file exists and append is true, the data is appended to the file. Otherwise, a new file is created.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class  for the specified file on the specified path, using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
            </summary>
            <param name="path">The complete file path to write to.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.#ctor(System.String,System.Boolean,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.LineInfoStreamWriter"/> class  for the specified file on the specified path, using the specified encoding and default buffer size. If the file exists, it can be either overwritten or appended to. If the file does not exist, this constructor creates a new file.
            </summary>
            <param name="path">The complete file path to write to.</param>
            <param name="append">Determines whether data is to be appended to the file. If the file exists and append is false, the file is overwritten. If the file exists and append is true, the data is appended to the file. Otherwise, a new file is created.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.ToIndentedTextWriter(System.IO.TextWriter)">
            <summary>
            Creates an indented text writer from a specified writer.
            </summary>
            <param name="writer">The input writer. May not be null.</param>
            <returns>An instance of the IndentedTextWriter type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.ToIndentedTextWriter">
            <summary>
            Creates an indented text writer from this writer.
            </summary>
            <returns>An instance of the IndentedTextWriter type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.Char[])">
            <summary>
            Writes a character array to the stream.
            </summary>
            <param name="buffer">A character array containing the data to write. If <paramref name="buffer"/> is null, nothing is written.</param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and current writer is closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"/> is at the end the stream.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.Char)">
            <summary>
            Writes a character to the stream.
            </summary>
            <param name="value">The character to write to the text stream.</param>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and current writer is closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"/> is at the end the stream.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.String)">
            <summary>
            Writes a string to the stream.
            </summary>
            <param name="value">The string to write to the stream. If <paramref name="value"/> is null, nothing is written.</param>
            <exception cref="T:System.ObjectDisposedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and current writer is closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"/> is at the end the stream.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
            Writes a subarray of characters to the stream.
            </summary>
            <param name="buffer">A character array containing the data to write.</param>
            <param name="index">The index into <paramref name="buffer"/> at which to begin writing.</param>
            <param name="count">The number of characters to read from <paramref name="buffer"/>.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is null.
            </exception>
            <exception cref="T:System.ArgumentException">
            The buffer length minus <paramref name="index"/> is less than <paramref name="count"/>.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> or <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and current writer is closed.
            </exception>
            <exception cref="T:System.NotSupportedException">
            	<see cref="P:System.IO.StreamWriter.AutoFlush"/> is true or the <see cref="T:System.IO.StreamWriter"/> buffer is full, and the contents of the buffer cannot be written to the underlying fixed size stream because the <see cref="T:System.IO.StreamWriter"/> is at the end the stream.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.LinePosition">
            <summary>
            Gets the current line position. Includes tabs characters.
            </summary>
            <value>The line position.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.LineTabsNumber">
            <summary>
            Gets the number of tabs characters on the current line.
            </summary>
            <value>The number of tabs characters on the current line.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.SpaceIndent">
            <summary>
            Gets or sets the space indent.
            </summary>
            <value>The indent.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.LineInfoStreamWriter.TabIndent">
            <summary>
            Gets or sets the tab indent.
            </summary>
            <value>The tab indent.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ComVisibleWrapper">
            <summary>
            Wraps a non ComVisible object to make it visible to Com. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ComVisibleWrapper.#ctor(System.Object,CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ComVisibleWrapper"/> class.
            </summary>
            <param name="obj">The underlying object. May not be null and may not be of the ComVisibleWrapper type.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ComVisibleWrapper.UnderlyingObject">
            <summary>
            Gets the underlying object.
            </summary>
            <value>The underlying object.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options">
            <summary>
            Defines custom options for Com wrappers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.MarshalGuidAsByteArray">
            <summary>
            Marshal System.Guid objects as automation byte arrays.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.MarshalGuidAsString">
            <summary>
            Marshal System.Guid objects as automation strings, using the D format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.GuidFormatB">
            <summary>
            Marshal System.Guid objects as automation strings, using the B format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.GuidFormatP">
            <summary>
            Marshal System.Guid objects as automation strings, using the P format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.GuidFormatN">
            <summary>
            Marshal System.Guid objects as automation strings, using the N format.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.MarshalCharAsString">
            <summary>
            Marshal System.Char objects as automation strings, not as 32 bits integers.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ComVisibleWrapper.Options.Default">
            <summary>
            The default options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundStorage">
            <summary>
            A utility class to read and write Compound File properties. Also supports NTFS native implementation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundStorage"/> class.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundStorage"/> class.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="readOnly">if set to <c>true</c> the file will be open for read only operations.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.EnumerateFormats">
            <summary>
            Enumerates the property set format identifiers (FMTID) of the storage.
            </summary>
            <returns>A list of guids.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.LoadProperties(System.Guid)">
            <summary>
            Loads the properties for a given format.
            </summary>
            <param name="formatId">The format id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundStorage.CommitChanges">
            <summary>
            Commits the changes if any.
            </summary>
            <returns>true if changes were detected and commited; otherwise false.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundStorage.FilePath">
            <summary>
            Gets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundStorage.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.CompoundStorage.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.EmailValidator">
            <summary>
            Provides validation of an email string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.DefaultExpression">
            <summary>
            Defines the default regular expression for email address validation as per RFC 2822.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.EmailValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.String,System.String,System.Text.RegularExpressions.RegexOptions,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.EmailValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="validDomains">A comma separated list of valid domains.</param>
            <param name="expression">A string that specifies the regular expression to use.</param>
            <param name="regexOptions">Regular expression options.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.EmailValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is a valid email.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.EmailValidator.ValidDomains">
            <summary>
            Gets or sets a list of valid domain names. If null or empty, all domain names are allowed.
            Only used if the regular expression defines a match 'domain' group, which is the default case.
            The first character of a specified name may be the wildcard '*' character.
            </summary>
            <value>The valid domain names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.EmailValidator.Expression">
            <summary>
            Gets or sets the regular expression that validates email.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.EmailValidator.RegexOptions">
            <summary>
            Gets or sets optional flags for the regular expression that validates email.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.EmailValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.Failed">
            <summary>
            The string is not a valid email.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.EmailValidator.FailureCode.InvalidDomain">
            <summary>
            The domain name is invalid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.PersistenceSerializationMode">
            <summary>
            Defines the persistence serialization mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.None">
            <summary>
            The property must not be serialized.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Xml">
            <summary>
            The property will be serialized using Xml serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Soap">
            <summary>
            The property will be serialized using Soap serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Binary">
            <summary>
            The property will be serialized using Binary serialization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Custom">
            <summary>
            The property will be serialized using the ICodeFluentSerializable interface.
            The corresponding CLR type must implement this interface.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.ArrayOfBytesType">
            <summary>
            The property will be serialized as an array of bytes to the persistence layer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.StringType">
            <summary>
            The property will be serialized as a string to the persistence layer.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.Default">
            <summary>
            The default value. Currently defined as Binary | ArrayOfBytesType.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.ModeMask">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.PersistenceSerializationMode.TypeMask">
            <summary>
            Supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream">
            <summary>
            Defines a utility class to read NTFS alternate streams data.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.IsSupported(System.String)">
            <summary>
            Determines whether named streams are supported for the specified drive root name.
            </summary>
            <param name="rootPathName">The drive root name.</param>
            <returns>
            	<c>true</c> if named streams are supported; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.IsSupported(System.String,System.Boolean)">
            <summary>
            Determines whether named streams are supported for the specified drive root name.
            </summary>
            <param name="rootPathName">The drive root name.</param>
            <param name="throwIfNotSupported">if set to <c>true</c> an exception will be raised if the drive does not support named streams.</param>
            <returns>
            	<c>true</c> if named streams are supported; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file using the default encoding, and then closes the file.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="text">The text to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="text">The text to write.</param>
            <param name="encoding">The file encoding. If null, the default encoding will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.ReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>An array of bytes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="bytes">The bytes to write. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.WriteAllBytes(System.String,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="bytes">The bytes to write. May not be null.</param>
            <param name="offset">The offset in the byte array.</param>
            <param name="count">The count of bytes to write.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Exists(System.String)">
            <summary>
            Determines whether the specified file exists.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Open(System.String,System.IO.FileAccess,System.IO.FileMode,System.IO.FileShare)">
            <summary>
            Creates a file stream.
            This methods supports NTFS alternate file streams paths.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <param name="access">The file access.</param>
            <param name="mode">The file mode.</param>
            <param name="share">The file share.</param>
            <returns>An instance of the FileStream class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Delete(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted.</param>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.GetFullPath(System.String)">
            <summary>
            Returns the absolute path for the specified path string.
            </summary>
            <param name="path">The file or directory for which to obtain absolute path information.</param>
            <returns>A string containing the fully qualified location of path, such as "C:\MyFile.txt".</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.EnumerateStreams(System.String)">
            <summary>
            Enumerates the alternate streams from a file.
            </summary>
            <param name="fileName">The file path.</param>
            <returns>A collection of NTFS alternate streams</returns>
        </member>
        <member name="M:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.EnumerateStreams(System.IO.FileInfo)">
            <summary>
            Enumerates the alternate streams from a file.
            </summary>
            <param name="file">The file. May not be null.</param>
            <returns>A collection of NTFS alternate streams </returns>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Name">
            <summary>
            Gets the stream name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.StreamType">
            <summary>
            Gets the stream type.
            </summary>
            <value>The type of the stream.</value>
        </member>
        <member name="P:CodeFluent.Runtime.BinaryServices.NtfsAlternateStream.Size">
            <summary>
            Gets the stream size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException">
            <summary>
            The exception that is thrown when a runtime error occurs in a CodeFluent template.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException.#ctor(CodeFluent.Model.Common.Templating.Template,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException"/> class.
            </summary>
            <param name="template">The template. May not be null.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.CodeFluentTemplateRuntimeException.Template">
            <summary>
            Gets the template.
            </summary>
            <value>The template.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace">
            <summary>
            Defines an XmlLineInfoWhitespace that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace"/> class.
            </summary>
            <param name="strData">The white space characters of the node.</param>
            <param name="doc">The <see cref="T:System.Xml.XmlDocument"/> object.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoWhitespace.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2">
            <summary>
            Provides a generic collection that supports data binding and sorting.
            </summary>
            <typeparam name="Te">The type of items in the collection.</typeparam>
            <typeparam name="Tk">The type of keys of items in the collection.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
            <param name="keyComparer">The key comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> of items to be contained in the <see cref="T:System.ComponentModel.BindingList`1"/>.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IEqualityComparer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.SortableBindingCollection`2"/> class.
            </summary>
            <param name="list">An <see cref="T:System.Collections.Generic.IList`1"/> of items to be contained in the <see cref="T:System.ComponentModel.BindingList`1"/>.</param>
            <param name="keyComparer">The key comparer.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.ClearItems">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the specified item in the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where the item is to be inserted.</param>
            <param name="item">The item to insert in the collection.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.SetItem(System.Int32,`0)">
            <summary>
            Replaces the item at the specified index with the specified item.
            </summary>
            <param name="index">The zero-based index of the item to replace.</param>
            <param name="item">The new value for the item at the specified index. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="index"/> is less than zero.-or-<paramref name="index"/> is greater than <see cref="P:System.Collections.ObjectModel.Collection`1.Count"/>.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">You are removing a newly added item and <see cref="P:System.ComponentModel.IBindingList.AllowRemove"/> is set to false. </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.RemoveKey(`1)">
            <summary>
            Removes the specified item by its key.
            </summary>
            <param name="key">The item key. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Remove(`0)">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item to remove. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.ContainsKey(`1)">
            <summary>
            Determines whether the collection contains an item with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the collection contains an item with the specified key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.IndexOf(`1)">
            <summary>
            Determines the index of a specific item in the collection
            </summary>
            <param name="key">The key of the object to locate.</param>
            <returns>The index of item if found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.ContainsValue(`0)">
            <summary>
            Determines whether the collection contains the specified item.
            </summary>
            <param name="item">The item to test.</param>
            <returns>
            	<c>true</c> if the collection contains the specified value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.ComponentModel.BindingList`1.ListChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.OnNodeKeyChanged(System.Object,CodeFluent.Runtime.Utilities.KeyChangedEventArgs{`1})">
            <summary>
            Called when an item's key changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.CloneEmptyCollection">
            <summary>
            Clones the collection without the elements.
            </summary>
            <returns>A new instance of the collection.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Clone(System.Boolean)">
            <summary>
            Clones the specified collection.
            </summary>
            <param name="deep">if set to <c>true</c> the objects contained in the collection will be cloned as well if they implement the System.ICloneable interface.</param>
            <returns>A new instance of the collection that can be safely cast to a SortableBindingCollection.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Dictionary">
            <summary>
            Gets the underlying dictionary instance.
            </summary>
            <value>The dictionary instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.AllowReplaceOnInsert">
            <summary>
            Gets a value indicating whether items must be replaced if they already exist.
            </summary>
            <value><c>true</c> if items must be replaced if they already exist; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SortableBindingCollection`2.Item(`1)">
            <summary>
            Gets or sets the item with the specified key.
            </summary>
            <value>The item instance.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.Country">
            <summary>
            Represents a country.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.#ctor(System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Country"/> class.
            </summary>
            <param name="culture">The culture.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Country"/> class.
            </summary>
            <param name="name">The country name. May be null.</param>
            <param name="lcid">The country LCID.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.Country"/> class using a geographical location identifier (GeoId).
            </summary>
            <param name="geoId">The geo id.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetCurrencyCountries(System.String)">
            <summary>
            Gets countries using the specified currency symbol.
            </summary>
            <param name="isoCurrencySymbol">The iso currency symbol. May not be null.</param>
            <returns>A list of countries.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.GetCountry(System.String)">
            <summary>
            Gets a country or location using the specified ISO-3166 two-letter code.
            </summary>
            <param name="twoLetterISOName">The iso code. May not be null.</param>
            <returns>An instance of the Country class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.op_Equality(CodeFluent.Runtime.Utilities.Country,CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.op_Inequality(CodeFluent.Runtime.Utilities.Country,CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.Equals(CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Equalses the specified obj.
            </summary>
            <param name="obj">The obj.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the value of the current instance using the specified format.
            </summary>
            <param name="format">The <see cref="T:System.String"/> specifying the format to use.-or- null to use the default format defined for the type of the <see cref="T:System.IFormattable"/> implementation.</param>
            <param name="formatProvider">The <see cref="T:System.IFormatProvider"/> to use to format the value.-or- null to obtain the numeric format information from the current locale setting of the operating system.</param>
            <returns>
            A <see cref="T:System.String"/> containing the value of the current instance in the specified format.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.CompareTo(System.Object)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.Country.CompareTo(CodeFluent.Runtime.Utilities.Country)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings: Value Meaning Less than zero This object is less than the <paramref name="other"/> parameter.Zero This object is equal to <paramref name="other"/>. Greater than zero This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Location">
            <summary>
            Gets the current location.
            </summary>
            <value>An instance of the country class.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Current">
            <summary>
            Gets the current country.
            </summary>
            <value>An instance of the country class.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.UICurrent">
            <summary>
            Gets the current UI country.
            </summary>
            <value>An instance of the country class.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Culture">
            <summary>
            Gets the culture. May be null for a location-only country.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.LCID">
            <summary>
            Gets the LCID.
            </summary>
            <value>The LCID.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.Region">
            <summary>
            Gets the region.
            </summary>
            <value>The region. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.GeoId">
            <summary>
            Gets the geo id.
            </summary>
            <value>The geo id.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.TwoLetterISOName">
            <summary>
            Gets the ISO 3166 two-letter code for the country or location.
            </summary>
            <value>The name of the two letter ISO country.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.NativeName">
            <summary>
            Gets the native name.
            </summary>
            <value>The native name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.MixedName">
            <summary>
            Gets a mixed name (english name concatenated with native name).
            </summary>
            <value>The mixed name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.LocationName">
            <summary>
            Gets the location name. May be null.
            </summary>
            <value>The location name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.EnglishName">
            <summary>
            Gets english name.
            </summary>
            <value>The english name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.SystemMixedName">
            <summary>
            Gets the system mixed name (system name concatenated with native name).
            </summary>
            <value>The system mixed name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.SystemName">
            <summary>
            Gets the system name.
            </summary>
            <value>The system name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.AllLocations">
            <summary>
            Gets all countries or locations installed in this system.
            </summary>
            <value>A list of countries.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.Country.AllCountries">
            <summary>
            Gets all culture countries installed in this system.
            </summary>
            <value>A list of countries.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities">
            <summary>
            A set of conversion utilities.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultBooleanValue">
            <summary>
            Defines what is the default value for System.Boolean values transferred accross persistence layers.
            Currently defined as 'false'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultCharValue">
            <summary>
            Defines what is the default value for System.Char values transferred accross persistence layers.
            Currently defined as '\0'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultByteValue">
            <summary>
            Defines what is the default value for System.Byte values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultDecimalValue">
            <summary>
            Defines what is the default value for System.Decimal values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultDoubleValue">
            <summary>
            Defines what is the default value for System.Double values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultInt16Value">
            <summary>
            Defines what is the default value for System.Int16 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultInt32Value">
            <summary>
            Defines what is the default value for System.Int32 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultInt64Value">
            <summary>
            Defines what is the default value for System.Int64 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultSByteValue">
            <summary>
            Defines what is the default value for System.SByte values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultSingleValue">
            <summary>
            Defines what is the default value for System.Single values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultUInt16Value">
            <summary>
            Defines what is the default value for System.UInt16 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultUInt32Value">
            <summary>
            Defines what is the default value for System.UInt32 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultUInt64Value">
            <summary>
            Defines what is the default value for System.UInt64 values transferred accross persistence layers.
            Currently defined as 0.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DateTimeUniversalFormat">
            <summary>
            Represents a System.DateTime serialization format that allows universal serialization and deserialization, independent from local time zones. Equals to 'yyyy-MM-ddTHH:mm:ss.ffffzzzzzz'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluationDelimiter">
            <summary>
            Defines the delimiter character for evaluations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultGuidValue">
            <summary>
            Defines what is the default value for System.Guid values transferred accross persistence layers.
            Currently defined as Guid.Empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultDateTimeValue">
            <summary>
            Defines what is the default value for System.DateTime values transferred accross persistence layers.
            Currently defined as DateTime.MinValue.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultTimeSpanValue">
            <summary>
            Defines what is the default value for System.TimeSpan values transferred accross persistence layers.
            Currently defined as TimeSpan.Zero.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SparseFilePath(System.String,System.Int32)">
            <summary>
            Splits a file path. Used to sparse a huge number of files in a directory to avoid putting all the files in the same directory.
            </summary>
            <param name="fileName">The file path. May not be null.</param>
            <param name="level">The level. If the level is 0, the original file path is returned.</param>
            <returns>The original file path prefixed with [level] parent directories.
            Each parent directory uses a character of the file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ConcatenateCollection(System.Collections.IEnumerable,System.String,System.String)">
            <summary>
            Concatenates a collection into a string using a separator character.
            An expression is ran on each object in the collection using ASP.NET DataBinding syntax style.
            </summary>
            <param name="collection">The input collection. If null, null will be returned.</param>
            <param name="expression">The input expression. May be null.</param>
            <param name="separator">The separator character.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ConcatenateCollection(System.Collections.IEnumerable,System.String,System.String,System.IFormatProvider)">
            <summary>
            Concatenates a collection into a string using a separator character.
            An expression is ran on each object in the collection using ASP.NET DataBinding syntax style.
            </summary>
            <param name="collection">The input collection. If null, null will be returned.</param>
            <param name="expression">The input expression. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="formatProvider">The format provider to use. May be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Concatenate(System.Collections.IEnumerable,System.String)">
            <summary>
            Concatenates the specified objects using their string representation.
            </summary>
            <param name="objects">The collection of objects to concatenate. If the enumerable is null, null will be returned.</param>
            <param name="separator">The separator character.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Concatenate(System.Collections.IDictionary,System.String,System.String)">
            <summary>
            Concatenates a dictionary of <see cref="T:System.Collections.DictionaryEntry"/>.
            </summary>
            <param name="texts">The input dictionary. If null, null will be returned</param>
            <param name="keyValueSeparator">The separator character to use between each key and its associated value.</param>
            <param name="lineSeparator">The line separator character to use after each entry.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractFileText(System.String,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text file and optionally adds an error.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="encoding">The file character encoding. If null, encoding will be detected using byte order mark.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractText(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from another text and optionally adds an error.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractText(System.IO.TextReader,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text reader and optionally adds an error.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExtractFileText(System.IO.Stream,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text stream and optionally adds an error.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="encoding">The file character encoding. If null, encoding will be detected using byte order mark.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.RemoveDiacritics(System.String)">
            <summary>
            Removes diacritics from a text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.RemoveCharactersFromUnicodeCategories(System.String,System.Globalization.UnicodeCategory[])">
            <summary>
            Removes characters from specified Unicode categories from a text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="categories">The character categories.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Replace(System.String,System.String,System.String)">
            <summary>
            Replaces all occurrences of a specified string in this instance with another string using a case insensitive current culture string comparer.
            </summary>
            <param name="original">The original string. If null, null will be returned.</param>
            <param name="pattern">The pattern to search for. If null, the original string will be returned.</param>
            <param name="replacement">The replacement string. May be null.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Replace(System.String,System.String,System.String,System.StringComparison)">
            <summary>
            Replaces all occurrences of a specified string in this instance with another string.
            </summary>
            <param name="original">The original string. If null, null will be returned.</param>
            <param name="pattern">The pattern to search for. If null, the original string will be returned.</param>
            <param name="replacement">The replacement string. May be null.</param>
            <param name="comparisonType">Type of the comparison.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Concatenate(System.String[],System.String)">
            <summary>
            Concatenates a collection of string using a separator string.
            </summary>
            <param name="texts">The collection of strings to concatenate. If null, null will be returned.</param>
            <param name="separator">The separator string to use. May be null.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToList``1(System.String,System.Char[])">
            <summary>
            Splits a text into a collection of typed objects.
            Returned objects are automatically converted into the proper type if needed.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to split. If null, an empty list will be returned.</param>
            <param name="separators">The separator characters to use.</param>
            <returns>A collection of objects of the T type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDistinctDictionary(System.String,System.Char[])">
            <summary>
            Splits a text into a collection of unique string tokens.
            Comparison is case insensitive.
            </summary>
            <param name="text">The text to split. If null, an empty collection will be returned.</param>
            <param name="separator">The separator.</param>
            <returns>A collection of string tokens.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDistinctDictionary(System.String,System.StringComparer,System.Char[])">
            <summary>
            Splits a text into a collection of unique string tokens.
            Comparison is case insensitive.
            </summary>
            <param name="text">The text to split. If null, an empty collection will be returned.</param>
            <param name="comparer">The string comparer to use. If null, a case insensitive comparer will be used.</param>
            <param name="separator">The separator.</param>
            <returns>A collection of string tokens.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDistinctDictionary``1(System.String,System.Collections.Generic.IEqualityComparer{``0},System.Char[])">
            <summary>
            Splits a text into a collection of typed objects.
            Returned objects are automatically converted into the proper type if needed.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="text">The text to split. If null, an empty collection will be returned.</param>
            <param name="equalityComparer">The equality comparer to use.</param>
            <param name="separator">The separator character to use.</param>
            <returns>A collection of objects of the T type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToList(System.String,System.Char)">
            <summary>
            Splits a text into a collection of strings.
            </summary>
            <param name="text">The text to split. If null, an empty list will be returned.</param>
            <param name="separator">The separator character to use.</param>
            <returns>A collection of strings.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToDictionary(System.String,System.Char,System.Boolean)">
            <summary>
            Splits a text into a collection of <see cref="T:System.Collections.DictionaryEntry"/>.
            </summary>
            <param name="text">The text to split. If null, an empty dictionary will be returned.</param>
            <param name="separator">The separator character to use.</param>
            <param name="caseInsensitive">if set to <c>true</c> the returned dictionary will use case insensitive key comparison.</param>
            <returns>A dictionary instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitToTable(System.String,System.Char,System.Boolean)">
            <summary>
            Splits a text into a collection of <see cref="T:System.Collections.DictionaryEntry"/>.
            </summary>
            <param name="text">The text to split. If null, an empty dictionary will be returned.</param>
            <param name="separator">The separator character to use.</param>
            <param name="caseInsensitive">if set to <c>true</c> the returned dictionary will use case insensitive key comparison.</param>
            <returns>A dictionary instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitEnumNames(System.Object)">
            <summary>
            Splits a flags enum combination into its values.
            </summary>
            <param name="value">The enum value.</param>
            <returns>A list of enum values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitEnumValues``1(``0)">
            <summary>
            Splits a flags enum combination into its values.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="value">The enum value.</param>
            <returns>A list of enum values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SplitEnumValues(System.Object)">
            <summary>
            Splits a flags enum combination into its values.
            </summary>
            <param name="value">The enum value.</param>
            <returns>A list of enum values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetCommandLineArgument(System.String,System.String)">
            <summary>
            Gets a named command line argument.
            A named command line argument can be specified by '/name:value' or '-name:value'
            </summary>
            <param name="name">The argument name. May not be null.</param>
            <param name="defaultValue">The default value if the argument was not found.</param>
            <returns>The value of the named argument.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExpandEnvironmentVariables(System.String)">
            <summary>
            Expands the environment variable. The format can be '%variable%' for an environment variable,
            '%=index%' for command line argument at the specified index,
            '%=name%' for a named command line argument,
            '%#expression%' for a data binding expression, or
            '%!expression%' for an XPath expression if the container argument implements IXPathNavigable.
            </summary>
            <param name="value">The variable to expand. If null, null will be returned.</param>
            <returns>The expanded variable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExpandEnvironmentVariables(System.String,System.Object)">
            <summary>
            Expands the environment variable. The format can be '%variable%' for an environment variable,
            '%=index%' for command line argument at the specified index,
            '%=name%' for a named command line argument,
            '%#expression%' for a data binding expression, or
            '%!expression%' for an XPath expression if the container argument implements IXPathNavigable.
            </summary>
            <param name="value">The variable to expand. If null, null will be returned.</param>
            <param name="container">The container object to evaluate data binding expressions. May be null.</param>
            <returns>The expanded variable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ExpandEnvironmentVariables(System.Char,System.String,System.Object)">
            <summary>
            Expands the environment variable. The format can be '%variable%' for an environment variable,
            '%=index%' for command line argument at the specified index,
            '%=name%' for a named command line argument,
            '%#expression%' for a data binding expression, or
            '%!expression%' for an XPath expression if the container argument implements IXPathNavigable.
            </summary>
            <param name="separator">The separator character if not %.</param>
            <param name="value">The variable to expand. If null, null will be returned.</param>
            <param name="container">The container object to evaluate data binding expressions. May be null.</param>
            <returns>The expanded variable.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexa(System.Byte[])">
            <summary>
            Converts a byte array to its hexadecimal string representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <returns>The string representation of the byte array.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexa(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal string representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The string representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.String)">
            <summary>
            Converts a string to its hexadecimal dump representation.
            </summary>
            <param name="text">The input string. If null, an empty string will be returned.</param>
            <returns>
            The hexadecimal dump representation of the string.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.String,System.Text.Encoding)">
            <summary>
            Converts a string to its hexadecimal dump representation.
            </summary>
            <param name="text">The input string. If null, an empty string will be returned.</param>
            <param name="encoding">The encoding to use. May be null.</param>
            <returns>
            The hexadecimal dump representation of the string.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[])">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.String)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. If null, an empty string will be returned.</param>
            <param name="prefix">The prefix to use. It consists generally of tabs or space characters. May be null.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.IntPtr,System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="ptr">The input byte array. May not be null.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.IntPtr,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="ptr">The input byte array. May not be null.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <param name="prefix">The prefix to use. It consists generally of tabs or space characters. May be null.</param>
            <param name="addHeader">if set to <c>true</c> a header is displayed.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHexaDump(System.Byte[],System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Converts a byte array to its hexadecimal dump representation.
            </summary>
            <param name="bytes">The input byte array. May not be null.</param>
            <param name="offset">The zero-based byte offset in buffer at which to begin dumping bytes.</param>
            <param name="count">The number of bytes to be dumped.</param>
            <param name="prefix">The prefix to use. It consists generally of tabs or space characters. May be null.</param>
            <param name="addHeader">if set to <c>true</c> a header is displayed.</param>
            <returns>
            The hexadecimal dump representation of the byte array.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBytesFromArray(System.String,System.Char[])">
            <summary>
            Converts a string representation of a byte array to a byte array.
            Invalid characters are just skipped, without throwing any exception.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">A list of possible separators. Mut contain at least one element.</param>
            <returns>The converted byte array. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBytesFromArray(System.String,System.Boolean,System.Char[])">
            <summary>
            Converts a string representation of a byte array to a byte array.
            Invalid characters are just skipped, without throwing any exception.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be throw if the input text is invalid.</param>
            <param name="separators">A list of possible separators. Mut contain at least one element.</param>
            <returns>The converted byte array. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBytesFromHexa(System.String)">
            <summary>
            Converts an hexadecimal string representation to a byte array.
            Invalid characters are just skipped, without throwing any exception.
            This function also supports <see cref="T:System.Guid"/> string representation.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>The converted byte array. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetHexaByte(System.Char)">
            <summary>
            Gets the hexadecimal byte for the specified character.
            </summary>
            <param name="c">The input character.</param>
            <returns>The corresponding hexadecimal byte.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetValidIdentifier(System.String)">
            <summary>
            Gets a valid C# identifier from any given input text.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>A string representing a valid identifier.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidNamespaceIdentifier(System.String)">
            <summary>
            Determines whether the specified identifier is a valid namespace.
            </summary>
            <param name="identifier">The input identifier. Null is always invalid.</param>
            <returns>
            	<c>true</c> if the specified identifier is a valid namespace; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidIdentifier(System.String)">
            <summary>
            Determines whether the specified identifier is valid.
            </summary>
            <param name="identifier">The input identifier. Null is always invalid.</param>
            <returns>
            	<c>true</c> if the specified identifier is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidIdentifierStart(System.Char)">
            <summary>
            Determines whether the specified character is a valid identifier start.
            Valids unicode categories are Lu, Ll, Lt, Lm, Lo, Nl
            </summary>
            <param name="character">The input character.</param>
            <returns>
            	<c>true</c> if the specified character is a valid identifier start; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidIdentifierPart(System.Char)">
            <summary>
            Determines whether the specified character is a valid identifier part.
            Valids unicode categories are Lu, Ll, Lt, Lm, Lo, Nl, Mn, Mc, Nd, Pc, Cf
            </summary>
            <param name="character">The character.</param>
            <returns>
            	<c>true</c> if the specified character is a valid identifier part; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetValidXmlName(System.String)">
            <summary>
            Gets a valid Xml name from any given input text.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>
            A string representing a valid identifier.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromBase64(System.String)">
            <summary>
            Converts a base 64 formatted string into a string.
            Assumes the intermediary byte array is encoded using UTF-8.
            If the conversion fails, a default value is returned.
            </summary>
            <param name="s">The input string. If null, the default value is returned.</param>
            <returns>A converted string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromBase64(System.String,System.String)">
            <summary>
            Converts a base 64 formatted string into a string.
            Assumes the intermediary byte array is encoded using UTF-8.
            If the conversion fails, a default value is returned.
            </summary>
            <param name="s">The input string. If null, the default value is returned.</param>
            <param name="defaultValue">The default value to return.</param>
            <returns>A converted string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBase64(System.String)">
            <summary>
            Converts a string into a base 64 formatted string.
            </summary>
            <param name="s">The input string. If null, null will be returned.</param>
            <returns>A converted string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToHashtable(System.Collections.IDictionary)">
            <summary>
            Converts a dictionary to a hashtable.
            If the dictionary actually is a hashtable, it is just returned as is.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>An Hashtable instance or null if the input dictionary is null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Copy(System.Collections.IDictionary,System.Collections.IDictionary)">
            <summary>
            Copies one dictionary entries to another.
            </summary>
            <param name="source">The source dictionary. May be null.</param>
            <param name="target">The target dictionary. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Copy(System.Collections.IDictionary,System.Collections.IDictionary,System.Boolean,System.Boolean)">
            <summary>
            Copies one dictionary entries to another.
            </summary>
            <param name="source">The source dictionary. May be null.</param>
            <param name="target">The target dictionary. May not be null.</param>
            <param name="overwrite">if set to <c>true</c> existing target entries are overwritten.</param>
            <param name="throwIfExists">if set to <c>true</c> an exception is thrown if at least one source entry already exists in the target.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Type,System.Object)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Type,System.Object,System.IFormatProvider)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Type,System.Object,System.IFormatProvider,System.String)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="format">The format to use. May be null.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.String,System.String)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="format">The format to use. May be null.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.String,System.IFormatProvider,System.String)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="format">The format to use. May be null.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Evaluate(System.Object,System.String,System.Object)">
            <summary>
            Evaluates the specified expression on a given container object.
            In case of an error, the defaultValue parameter will be returned.
            </summary>
            <param name="container">The container object. If null, the defaultValue parameter will be returned.</param>
            <param name="expression">The DataBinder.Eval expression. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>A value of the target type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsValidFileName(System.String)">
            <summary>
            Determines whether the specified text represents a valid file name.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>
            	<c>true</c> if the specified text represents a valid file name; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToFilePath(System.String)">
            <summary>
            Converts a text into a valid file path.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>A valid file path.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToFileName(System.String)">
            <summary>
            Converts a text into a valid file name.
            </summary>
            <param name="text">The input text. May not be null nor empty.</param>
            <returns>A valid file name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.StartsWith(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Determines whether the beginning of an instance of System.String matches a specified string.
            </summary>
            <param name="text">The input string. May not be null.</param>
            <param name="value">The string to compare.</param>
            <param name="startIndex">The start index.</param>
            <param name="caseInsensitive">if set to <c>true</c> case is ignored when comparing strings.</param>
            <returns><c>true</c> if the value parameter matches the beginning of this string; otherwise, <c>false</c></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetType(System.String)">
            <summary>
            Gets a CLR type from a full type name.
            This function supports CodeFluent type aliases.
            </summary>
            <param name="fullTypeName">The full type name. May not be null.</param>
            <returns>A CLR type instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.String,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The input object. May be null.</param>
            <param name="fullTypeName">The target type full name.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String,System.Object)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.String,System.Object,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="fullTypeName">The target full type name. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>An object of the target type whose value is equivalent to input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToType(System.Data.DbType)">
            <summary>
            Converts a DbType into a CLR type.
            </summary>
            <param name="dbType">The input DbType.</param>
            <returns>An instance of the Type class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Data.DbType)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="dbType">The target data type.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Data.DbType,System.Object)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="dbType">The target data type.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type,System.Object)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of type T will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object,System.IFormatProvider)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of type T will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object,``0)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType``1(System.Object,``0,System.IFormatProvider)">
            <summary>
            Returns an instance of type T whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="value">The input object. May be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type,System.Object,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetMinValue(System.Type)">
            <summary>
            Gets the minimum value for a given type.
            </summary>
            <param name="conversionType">The target type. May not be null.</param>
            <returns>
            An object of the target type whose value represents the minimum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetMaxValue(System.Type)">
            <summary>
            Gets the maximum value for a given type.
            </summary>
            <param name="conversionType">The target type. May not be null.</param>
            <returns>
            An object of the target type whose value represents the maximum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ChangeType(System.Object,System.Type,System.IFormatProvider)">
            <summary>
            Returns a System.Object with a specified type and whose value is equivalent to a specified input object.
            If an error occurs, a computed default value of the target type will be returned.
            </summary>
            <param name="value">The input object. May be null.</param>
            <param name="conversionType">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Data.DbType,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The object to convert.</param>
            <param name="dbType">The target type.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Data.DbType,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The object to convert.</param>
            <param name="dbType">The target type.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType``1(System.Object,``0@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="obj">The object to convert.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType``1(System.Object,System.IFormatProvider,``0@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="obj">The object to convert.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Type,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified object of to its typed equivalent.
            </summary>
            <param name="obj">The object to convert.</param>
            <param name="type">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse``1(System.String,``0@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="s">A string to convert. May be null.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse``1(System.String,System.IFormatProvider,``0@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="s">A string to convert. May be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Type,System.IFormatProvider,System.Object@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <param name="s">A string to convert. May be null.</param>
            <param name="type">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Type,System.IFormatProvider,System.Object,System.Object@)">
            <summary>
            Converts the specified string representation of an object of the specified type to its typed equivalent using the TryParse method if it exists on the type.
            </summary>
            <param name="s">A string to convert. May be null.</param>
            <param name="type">The target type. May not be null.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="styles">The styles to use. Depends on the target type.</param>
            <param name="value">When this method returns, contains the typed value.</param>
            <returns>
            true if the string was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <returns>
            The result of the expression. May be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String,System.String)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="format">The input format. May be null.</param>
            <returns>
            The result of the expression. May be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String,System.String,System.Boolean)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="format">The input format. May be null.</param>
            <param name="ignoreCase">if set to <c>true</c> case is ignored when comparing strings.</param>
            <returns>
            The result of the expression. May be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStaticExpression(System.String,System.Boolean)">
            <summary>
            Evaluates a static expression.
            </summary>
            <param name="expression">The expression to evaluate.</param>
            <param name="ignoreCase">if set to <c>true</c> case is ignored when comparing strings.</param>
            <returns>The result of the expression. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluateTemplatedString(System.String,System.Object)">
            <summary>
            Evaluates a templated string, using reflection to parse and evaluate a data-binding expression against an object at run time.
            </summary>
            <param name="source">The source. If null, null will be returned.</param>
            <param name="container">The object reference against which the expression is evaluated.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluateTemplatedString(System.String,System.Object,System.Char,System.Char,System.Boolean)">
            <summary>
            Evaluates a templated string, using reflection to parse and evaluate a data-binding expression against an object at run time.
            </summary>
            <param name="source">The source. If null, null will be returned.</param>
            <param name="container">The object reference against which the expression is evaluated.</param>
            <param name="firstSeparator">The first separator.</param>
            <param name="secondSeparator">The second separator.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown.</param>
            <returns>The resulting string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TruncateMilliseconds(System.DateTime)">
            <summary>
            Truncates the milliseconds from a given input date time value.
            </summary>
            <param name="dateTime">The input date time value.</param>
            <returns>An equivalent date time value without milliseconds.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TruncateTicks(System.DateTime)">
            <summary>
            Truncates the ticks from a given input date time value.
            </summary>
            <param name="dateTime">The input date time value.</param>
            <returns>An equivalent date time value without ticks.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsNullOrEmpty(System.String,System.Boolean)">
            <summary>
            Determines whether the specified string is null or empty.
            </summary>
            <param name="text">The input string.</param>
            <param name="trim">if set to <c>true</c> the string will be trimmed before being checked for emptyness.</param>
            <returns>
            	<c>true</c> if the specified string is null or empty; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Nullify(System.String,System.Boolean)">
            <summary>
            Nullifies the specified string.
            </summary>
            <param name="text">The input string.</param>
            <param name="trim">if set to <c>true</c> the string will be trimmed before being checked for emptyness.</param>
            <returns>Null if the string is null or empty; otherwise the original string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum``1(System.String)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="value">The input value. May be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum``1(System.String,``0)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <typeparam name="T">The enum type</typeparam>
            <param name="value">The input value. May be null.</param>
            <param name="defaultValue">The default value. May not be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumTryParse(System.Type,System.String,System.Object@)">
            <summary>
            Converts the string representation of an enum to its Enum equivalent value. A return value indicates whether the operation succeeded.
            This method does not rely on Enum.Parse and therefore will never raise any first or second chance exception.
            </summary>
            <param name="type">The enum target type. May not be null.</param>
            <param name="input">The input text. May be null.</param>
            <param name="value">When this method returns, contains Enum equivalent value to the enum contained in input, if the conversion succeeded.</param>
            <returns>
            true if s was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.Object,System.Enum)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value. May be null.</param>
            <param name="defaultValue">The default value. May not be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.String,System.Type)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, a computed default value of the target enum type will be returned.
            </summary>
            <param name="text">The input string.</param>
            <param name="enumType">The target enum type. May not be null.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.String,System.Enum)">
            <summary>
            Converts the input value to an equivalent enum value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input string.</param>
            <param name="defaultValue">The value to use if an error occurs.</param>
            <returns>An enum value of the target enum type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Transforms the input collection into an array of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="enumerable">The input collection. May be null.</param>
            <returns>An array of the given type or null if null was passed.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToArray``1(System.Collections.IEnumerable)">
            <summary>
            Transforms the input collection into an array of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="enumerable">The input collection. May be null.</param>
            <returns>An array of the given type or null if null was passed.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnumerable``1(System.Collections.IEnumerable)">
            <summary>
            Transforms the input collection into an enumeration of the given type.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="enumerable">The input collection. May be null.</param>
            <returns>
            An enumeration of the given type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsSame(System.Array,System.Array)">
            <summary>
            Determines whether the specified arrays size is the same and if values are equals.
            Supports only one dimensional arrays.
            </summary>
            <param name="array1">The first array.</param>
            <param name="array2">The second array.</param>
            <returns>
            	<c>true</c> if arrays size and values are the same; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Xml.XmlDocument@)">
            <summary>
            Converts a specified value to an XmlDocument.
            </summary>
            <param name="value">The input value.</param>
            <param name="document">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToXmlDocument(System.Object,System.Xml.XmlDocument)">
            <summary>
            Converts a specified value to an XmlDocument.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The XmlDocument equivalent to the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToChar(System.String,System.Char)">
            <summary>
            Converts a specified value to a Unicode character.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Unicode character equivalent to the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToString(System.Object,System.String)">
            <summary>
            Converts the specified value to its equivalent String representation.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The String equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToString(System.Object,System.String,System.Boolean)">
            <summary>
            Converts the specified value to its equivalent String representation.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <param name="trim">if set to <c>true</c> the output will be trimmed.</param>
            <returns>
            The String equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBoolean(System.Object,System.Boolean)">
            <summary>
            Converts the specified value to an equivalent Boolean value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="obj">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The Boolean equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Boolean@)">
            <summary>
            Converts the specified string representation of a logical value to its System.Boolean
            equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">When this method returns, if the conversion succeeded, contains the converted value.</param>
            <returns>
            true if value was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToBoolean(System.String,System.Boolean)">
            <summary>
            Converts the specified value to an equivalent Boolean value.
            If an error occurs, the defaultValue parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>
            The Boolean equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryParse(System.String,System.Guid@)">
            <summary>
            Converts the specified string representation of a logical value to its System.Guid
            equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">When this method returns, if the conversion succeeded, contains the converted value.</param>
            <returns>
            true if value was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToGuid(System.String)">
            <summary>
            Converts the specified value to an equivalent Guid value.
            If an error occurs, the value parameter will be returned.
            Special input values 'new', 'newid', 'newguid' will generate a new Guid.
            </summary>
            <param name="text">The input value.</param>
            <returns>The Guid equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToGuid(System.String,System.Guid)">
            <summary>
            Converts the specified value to an equivalent Guid value.
            If an error occurs, the value parameter will be returned.
            Special input values 'new', 'newid', 'newguid' will generate a new Guid.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Guid equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToTimeSpan(System.String,System.TimeSpan)">
            <summary>
            Converts the specified value to an equivalent TimeSpan value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The TimeSpan equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDateTime(System.String,System.DateTime)">
            <summary>
            Converts the specified value to an equivalent DateTime value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The DateTime equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDateTime(System.String,System.DateTime,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent DateTime value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The DateTime equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDecimal(System.String,System.Decimal)">
            <summary>
            Converts the specified value to an equivalent Decimal value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The Decimal equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDecimal(System.String,System.Decimal,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Decimal value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The Decimal equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDouble(System.String,System.Double)">
            <summary>
            Converts the specified value to an equivalent Double value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The Double equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToDouble(System.String,System.Double,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Double value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The Double equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSingle(System.String,System.Single)">
            <summary>
            Converts the specified value to an equivalent Single value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The Single equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSingle(System.String,System.Single,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Single value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>
            The Single equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt32(System.String,System.Int32)">
            <summary>
            Converts the specified value to an equivalent Int32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Int32 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt32(System.String,System.Int32,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Int32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Int32 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt16(System.String,System.Int16)">
            <summary>
            Converts the specified value to an equivalent Int16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Int16 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt16(System.String,System.Int16,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Int16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Int16 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt64(System.String,System.Int64)">
            <summary>
            Converts the specified value to an equivalent Int64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Int64 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToInt64(System.String,System.Int64,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Int64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Int64 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt64(System.String,System.Enum)">
            <summary>
            Converts an enum value to an UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value. May not be null.</param>
            <returns>
            The UInt64 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt64(System.String,System.UInt64)">
            <summary>
            Converts the specified value to an equivalent UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The UInt64 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt64(System.String,System.UInt64,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The UInt64 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt32(System.String,System.UInt32)">
            <summary>
            Converts the specified value to an equivalent UInt32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The UInt32 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt32(System.String,System.UInt32,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent UInt32 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The UInt32 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt16(System.String,System.UInt16)">
            <summary>
            Converts the specified value to an equivalent UInt16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>
            The UInt16 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToUInt16(System.String,System.UInt16,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent UInt16 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The UInt16 equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToByte(System.String,System.Byte)">
            <summary>
            Converts the specified value to an equivalent Byte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The Byte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToByte(System.String,System.Byte,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent Byte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The Byte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSByte(System.String,System.SByte)">
            <summary>
            Converts the specified value to an equivalent SByte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <returns>The SByte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToSByte(System.String,System.SByte,System.IFormatProvider)">
            <summary>
            Converts the specified value to an equivalent SByte value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="value">The value.</param>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <returns>The SByte equivalent of the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EscapeSingleQuotes(System.String)">
            <summary>
            Escapes the single quotes in a string.
            </summary>
            <param name="text">The text.</param>
            <returns>A string with single quotes double</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UnescapeXml(System.String)">
            <summary>
            Unescapes an Xml text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>An unescaped Xml text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EscapeXml(System.String)">
            <summary>
            Escapes an Xml text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>An escaped Xml text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EscapeJavascript(System.String)">
            <summary>
            Converts the specified string to use the % character to escape reserved characters (@, *, _, +, -, ., /) and express them in Unicode notation.
            </summary>
            <param name="text">The input text.</param>
            <returns>An escaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UnescapeJavascript(System.String)">
            <summary>
            Converts the specified javascript escaped string.
            </summary>
            <param name="text">The input text.</param>
            <returns>An unescaped string.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeSplit(System.String)">
            <summary>
            Decamelizes and splits the input text using default decamelization options.
            </summary>
            <param name="text">The input text.</param>
            <returns>A list of strings.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeSplit(System.String,CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions)">
            <summary>
            Decamelizes and splits the input text.
            </summary>
            <param name="text">The input text.</param>
            <param name="options">The decamelization options.</param>
            <returns>A list of strings.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Decamelize(System.String)">
            <summary>
            Decamelizes the specified text using default decamelization options.
            </summary>
            <param name="text">The input text.</param>
            <returns>A decamelized text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Decamelize(System.String,CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions)">
            <summary>
            Decamelizes the specified text.
            </summary>
            <param name="text">The input text.</param>
            <param name="options">The decamelization options.</param>
            <returns>A decamelized text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ComputeGuidHash(System.String)">
            <summary>
            Computes a 128bits hash from a text.
            </summary>
            <param name="text">The input text. May not be null.</param>
            <returns>A System.Guid representing the hash.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetDefaultEqualityComparer(System.Type)">
            <summary>
            Gets the default equality comparer for the given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <returns>An instance of the default equality comparer.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetStringComparer(System.StringComparison)">
            <summary>
            Gets the string comparer for a given string comparison.
            </summary>
            <param name="comparison">The comparison to use.</param>
            <returns>An instance of a StringComparer.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetDefaultEqualityComparer(System.Type,System.StringComparison)">
            <summary>
            Gets the default equality comparer for the given type.
            </summary>
            <param name="type">The input type. May not be null.</param>
            <param name="comparison">The string comparison to use if a string comparer is implicitely chosen.</param>
            <returns>
            An instance of the default equality comparer.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetEnumMaxPower(System.Type)">
            <summary>
            Gets the maximum bitness for an enum type.
            </summary>
            <param name="enumType">The input enum type. May not be null.</param>
            <returns>8, 16, 32, or 64 depending on the enum underlying type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetEnumUnderlyingTypeMaxPower(System.Type)">
            <summary>
            Gets the maximum bitness for an enum underlying type.
            </summary>
            <param name="underlyingType">The input enum underlying type. May not be null.</param>
            <returns>8, 16, 32, or 64 depending on the input type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsFlagsEnum(System.Type)">
            <summary>
            Determines whether the specified enum type has the Flags attribute.
            </summary>
            <param name="enumType">The type to check. May not be null.</param>
            <returns>
            	<c>true</c> if the specified enum type has the Flags attribute; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumToUInt64(System.String,System.Type)">
            <summary>
            Converts an enum value to an UInt64 value.
            If an error occurs, the value parameter will be returned.
            </summary>
            <param name="text">The input value.</param>
            <param name="enumType">The enum type. May not be null.</param>
            <returns>
            The UInt64 equivalent of the input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumToUInt64(System.Object)">
            <summary>
            Converts an enum value to an UInt64 value.
            </summary>
            <param name="value">The enum value. May not be null.</param>
            <returns>The UInt64 value equivalent to the input value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetNullableArgument(System.Type)">
            <summary>
            Determines whether the specified type is nullable, and returns the argument type.
            </summary>
            <param name="type">The input type. May not be null</param>
            <returns>
            	<c>The argument type or null.</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.IsNullable(System.Type)">
            <summary>
            Determines whether the specified type is nullable.
            </summary>
            <param name="type">The input type. May not be null</param>
            <returns>
            	<c>true</c> if the specified type is nullable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumEnumerateValues``1">
            <summary>
            Enumerates an enumeration type values.
            </summary>
            <typeparam name="T">The enumeration type.</typeparam>
            <returns>A collection of enumeration values.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EnumToObject(System.Type,System.Object)">
            <summary>
            Returns an instance of the specified enumeration type set to the underlying type.
            </summary>
            <param name="enumType">The Enum type. May not be null.</param>
            <param name="value">The enum value. May not be null.</param>
            <returns>
            An instance of the enumeration set to value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToEnum(System.String,System.Type,CodeFluent.Runtime.Utilities.NameValueCollectionCollection)">
            <summary>
            Returns an anum value with a specified type and whose value is equivalent to a specified input value.
            </summary>
            <param name="text">The input value.</param>
            <param name="enumType">The target enum type. May not be null.</param>
            <param name="mappings">A list of mapping keys/pairs.</param>
            <returns>
            An object of the target type whose value is equivalent to input value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatEnum(System.Object,CodeFluent.Runtime.Utilities.NameValueCollectionCollection)">
            <summary>
            Formats an enum value using a list of mappings key/pairs.
            </summary>
            <param name="value">The input enum value. May not be null.</param>
            <param name="mappings">A list of mapping values comma-separated. May be null or empty.</param>
            <returns>
            A formatted string representing the enum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatEnum(System.Object,System.String,System.String)">
            <summary>
            Formats an enum value using a list of mappings key/pairs.
            </summary>
            <param name="value">The input enum value. May not be null.</param>
            <param name="mappings">A list of mapping values comma-separated. May be null or empty.</param>
            <param name="separator">The separator string to use.</param>
            <returns>
            A formatted string representing the enum value.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FormatEnum(System.Object,CodeFluent.Runtime.Utilities.NameValueCollectionCollection,System.String)">
            <summary>
            Formats an enum value using a list of mappings key/pairs.
            </summary>
            <param name="value">The input enum value. May not be null.</param>
            <param name="mappings">A list of mapping values. May be null or empty.</param>
            <param name="separator">The separator string to use.</param>
            <returns>A formatted string representing the enum value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromImageFormat(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Converts an image format to the corresponding file extension.
            </summary>
            <param name="imageFormat">The image format.</param>
            <returns>A file extension.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.FromFileExtension(System.String)">
            <summary>
            Converts a file extension to the corresponding image format.
            </summary>
            <param name="extension">The extension. If null, Jpeg will be returned.</param>
            <returns>An image format instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EndsWithNewLine(System.String)">
            <summary>
            Determines if a string ends with a CR or LF or CRLF character(s).
            </summary>
            <param name="text">The text to test. If null or empty, <c>false</c> will be returned.</param>
            <returns><c>true</c> if the strings ends with a CR or LF or CRLF character(s); otherwise, <c>false</c></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UrlFromNamespace(System.String)">
            <summary>
            Builds an url from a namespace.
            </summary>
            <param name="ns">The input namespace. May not be null.</param>
            <returns>The built url.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.UrlFromNamespace(System.String,System.String,System.String)">
            <summary>
            Builds an url from a namespace.
            </summary>
            <param name="ns">The input namespace. May not be null.</param>
            <param name="domainPrefix">The domain prefix. May be null. If null, 'schemas.' will be used.</param>
            <param name="domainPostfix">The domain postfix. May be null. If null, '.com' will be used.</param>
            <returns>The built url.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Camel(System.String)">
            <summary>
            Camelizes the specified name.
            </summary>
            <param name="name">The input name. If null, null will be returned.</param>
            <returns>The camelized name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Uncamel(System.String)">
            <summary>
            Uncamelizes the specified name.
            </summary>
            <param name="name">The input name. If null, null will be returned.</param>
            <returns>The uncamelized name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.PrivateMemberCamel(System.String)">
            <summary>
            Camelizes and prefixes the specified name.
            </summary>
            <param name="name">The input name. If null, null will be returned.</param>
            <returns>The camelized and prefixed name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <param name="defaultCulture">The default culture to return if an error occurs.</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Globalization.CultureInfo@)">
            <summary>
            Converts the specified object to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="value">The input value.</param>
            <param name="culture">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Boolean,System.Globalization.CultureInfo@)">
            <summary>
            Converts the specified object to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If null or empty is passed, the current culture will be returned.
            </summary>
            <param name="value">The input value.</param>
            <param name="useUserOverride">A Boolean that denotes whether to use the user-selected culture settings (true) or the default culture settings (false). Not supported on Silverlight</param>
            <param name="culture">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Version@)">
            <summary>
            Converts the specified object to an equivalent Version instance.
            The object can be a version string, or an array of integers.
            </summary>
            <param name="value">The input value.</param>
            <param name="version">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TryChangeType(System.Object,System.Text.Encoding@)">
            <summary>
            Converts the specified object to an equivalent Encoding instance.
            The value can be an encoding name of the string representation of a code page number.
            Not supported on Silverlight.
            </summary>
            <param name="value">The input value.</param>
            <param name="encoding">When this method returns, contains the typed value.</param>
            <returns>
            true if the object was converted successfully; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String,System.Boolean)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If empty is passed, the invariant culture will be returned.
            If null is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <param name="useUserOverride">A Boolean that denotes whether to use the user-selected culture settings (true) or the default culture settings (false).</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.ToCultureInfo(System.String,System.Boolean,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified text to an equivalent CultureInfo instance.
            The text can be a culture name of the string representation of an lcid.
            If empty is passed, the invariant culture will be returned.
            If null is passed, the current culture will be returned.
            </summary>
            <param name="culture">The input text.</param>
            <param name="useUserOverride">A Boolean that denotes whether to use the user-selected culture settings (true) or the default culture settings (false).</param>
            <param name="defaultCulture">The default culture to return if an error occurs.</param>
            <returns>A CultureInfo instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.String)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            Handles integer values passed as a string.
            </summary>
            <param name="name">The name of the culture.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.String,System.Boolean)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            Handles integer values passed as a string.
            </summary>
            <param name="name">The name of the culture.</param>
            <param name="throwOnError">if set to <c>true</c>, throws error if the culture name is invalid.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.Int32)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            </summary>
            <param name="lcid">The locale.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.SetCurrentThreadCulture(System.Int32,System.Boolean)">
            <summary>
            Sets the current thread culture.
            Handles neutral or non neutral cultures.
            </summary>
            <param name="lcid">The locale.</param>
            <param name="throwOnError">if set to <c>true</c>, throws error if the culture lcid is invalid.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Format(System.IFormatProvider,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Formats the specified text.
            </summary>
            <param name="provider">An IFormatProvider interface implementation that supplies culture-specific formatting information.</param>
            <param name="text">The input text.</param>
            <param name="replacements">The replacement strings for the corresponding arguments.</param>
            <returns>A formatted text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Format(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Formats the specified text.
            </summary>
            <param name="text">The input text.</param>
            <param name="replacements">The replacement strings for the corresponding arguments.</param>
            <returns>A formatted text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Extract(System.String)">
            <summary>
            Extracts argument pairs from a given text.
            </summary>
            <param name="text">The input text. May be null.</param>
            <returns>An array of pair instance. The first property is the argument start, and the second property is the argument length.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.Format(System.Object,System.String,System.IFormatProvider)">
            <summary>
            Formats the specified object.
            </summary>
            <param name="obj">The object. If null, null will be returned.</param>
            <param name="format">The format to use. May be null.</param>
            <param name="formatProvider">The format provider. May be null.</param>
            <returns>A string containing the value of the current instance in the specified format.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds an enumerable collection to another collection.
            </summary>
            <typeparam name="T">The type of items in both collections.</typeparam>
            <param name="collection">The collection to add items to. May not be null.</param>
            <param name="range">The collection containing the items to add. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.CopyTo``1(System.Collections.Generic.IEnumerable{``0},System.Array,System.Int32)">
            <summary>
            Copies an IEnumerable instance to a target array.
            </summary>
            <param name="enumerable">The enumerable instance. May not be null.</param>
            <param name="array">The target array. May not be null.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.CopyTo(System.Collections.IEnumerable,System.Array,System.Int32)">
            <summary>
            Copies an IEnumerable instance to a target array.
            </summary>
            <param name="enumerable">The enumerable instance. May not be null.</param>
            <param name="array">The target array. May not be null.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.EvaluateCollection``1(System.Collections.ICollection,System.String,``0)">
            <summary>
            Evaluates the collection using DataBinder syntax.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The collection to evaluate. May be null.</param>
            <param name="propertyName">The property name. Follows DataBinder syntax. May not be null.</param>
            <param name="defaultValue">The default value.</param>
            <returns>A collection of evaluated properties</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.TruncateName(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Truncates a text to a maximum length and return a unique text from a list of existing texts.
            </summary>
            <param name="text">The text to truncate. May be null.</param>
            <param name="maxLength">Maximum length of the text.</param>
            <param name="names">The existing names. May be null.</param>
            <returns>A text possibly truncated. May be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.GetUniqueName(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
            <summary>
            Get a name guaranteed not to be in a given a list of names.
            This method appends numbers to a preferred name.
            </summary>
            <param name="names">The list names. May be null.</param>
            <param name="preferredName">The preferred name. May not be null.</param>
            <param name="comparison">The comparison to use.</param>
            <returns>A unique name.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ConvertUtilities.FrameworkVersions">
            <summary>
            Gets the .NET Framework versions installed on this system.
            </summary>
            <value>An array of framework versions.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ConvertUtilities.LatestFrameworkVersion">
            <summary>
            Gets the latest .NET Framework version installed on this system.
            </summary>
            <value>The version of the latest .NET Framework detected.</value>
            <returns>The version of the latest .NET Framework detected.</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ConvertUtilities.RegisteredOrganization">
            <summary>
            Gets the registered organization, the registry key value from HKLM\Software\Microsoft\Windows NT\CurrentVersion\RegisteredOrganization.
            </summary>
            <value>The registered organization.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions">
            <summary>
            Defines the options for decamelization.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.None">
            <summary>
            No option is defined.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ForceFirstUpper">
            <summary>
            First character will be upper case.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ForceRestLower">
            <summary>
            Characters beyond the first will be lower case.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.UnescapeUnicode">
            <summary>
            Unescape unicode encoding (format is \u0000).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.UnescapeHexadecimal">
            <summary>
            Unescape hexadecimal encoding (format is \x0000).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ReplaceSpacesByUnderscore">
            <summary>
            Replaces spaces by underscore.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ReplaceSpacesByMinus">
            <summary>
            Replaces spaces by minus.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.ReplaceSpacesByDot">
            <summary>
            Replaces spaces by dot.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.KeepFirstUnderscores">
            <summary>
            Keep first underscores sticked as is.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.DontDecamelizeNumbers">
            <summary>
            Numbers are not considered as separators.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.KeepFormattingIndices">
            <summary>
            Keep indices used by the String.Format method.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.ConvertUtilities.DecamelizeOptions.Default">
            <summary>
            Defines the default options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue`1">
            <summary>
            A utility class to check if a given value is the default value for the given type.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue`1.IsDefault(System.Object)">
            <summary>
            Determines whether the specified value is the default value for the given type.
            </summary>
            <param name="value">The input value. May be null.</param>
            <returns>
            	<c>true</c> if the specified value is the default value for the given type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue">
            <summary>
            A utility class to check if a given value is the default value for the given type.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ConvertUtilities.DefaultValue.IsDefault(System.Type,System.Object)">
            <summary>
            Determines whether the specified value is the default value for the given type.
            </summary>
            <param name="type">The expected value type. May not be null.</param>
            <param name="value">The input value. May be null.</param>
            <returns>
            	<c>true</c> if the specified value is the default value for the given type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonItemMode">
            <summary>
            Defines a ribbon item mode.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonItemMode.Icon">
            <summary>
            The item will be displayed as an icon of size 32x32.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonItemMode.SmallIcon">
            <summary>
            The item will be displayed as an icon of size 16x16.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.RibbonItemMode.SmallIconNoText">
            <summary>
            The item will be displayed as an icon of size 16x16 without text.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.OpenWithEditor">
            <summary>
            Defines a UITypeEditor for file paths.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenWithEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <returns>
            A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle"/> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)"/> method. If the <see cref="T:System.Drawing.Design.UITypeEditor"/> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenWithEditor.Open(System.String)">
            <summary>
            Opens the specified path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.OpenWithEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by the <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle"/> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that can be used to gain additional context information.</param>
            <param name="provider">An <see cref="T:System.IServiceProvider"/> that this editor can use to obtain services.</param>
            <param name="value">The object to edit.</param>
            <returns>
            The new value of the object. If the value of the object has not changed, this should return the same object it was passed.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.EncodingConverter">
            <summary>
            Provides a type converter to convert Encoding objects to and from various other representations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType">A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>
            true if this converter can perform the conversion; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">The <see cref="T:System.Globalization.CultureInfo"/> to use as the current culture.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="M:CodeFluent.Runtime.Design.EncodingConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified context and culture information.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/>. If null is passed, the current culture is assumed.</param>
            <param name="value">The <see cref="T:System.Object"/> to convert.</param>
            <param name="destinationType">The <see cref="T:System.Type"/> to convert the <paramref name="value"/> parameter to.</param>
            <returns>
            An <see cref="T:System.Object"/> that represents the converted value.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="destinationType"/> parameter is null.
            </exception>
            <exception cref="T:System.NotSupportedException">
            The conversion cannot be performed.
            </exception>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockWindowMenuItem">
            <summary>
            Defines the list of well-known menu items for a window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.Dock">
            <summary>
            Docks the window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.Float">
            <summary>
            Transform the window in a floating window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.Hide">
            <summary>
            Hide the window.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Design.DockWindowMenuItem.AutoHide">
            <summary>
            Transform the window in an auto hide window.
            </summary>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.TemplateEngine">
            <summary>
            Defines the template engine.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateEngine.Default">
            <summary>
            The default embedded template engine.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateEngine.Rtf">
            <summary>
            The Rtf embedded template engine.
            </summary>
        </member>
        <member name="F:CodeFluent.Model.Common.Templating.TemplateEngine.Razor">
            <summary>
            The Razor template engine.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoComment">
            <summary>
            Defines an XmlComment that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoComment.#ctor(System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoComment"/> class.
            </summary>
            <param name="comment">The content of the comment element.</param>
            <param name="doc">The parent XML document.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoComment.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoComment.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoComment.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoComment.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute">
            <summary>
            Defines an XmlAttribute that stores line information.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute"/> class.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="localname">The localname.</param>
            <param name="namespaceURI">The namespace URI.</param>
            <param name="doc">The doc.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.SetLineInfo(System.Int32,System.Int32)">
            <summary>
            Sets line informmation.
            </summary>
            <param name="number">The line number.</param>
            <param name="position">The line position.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.HasLineInfo">
            <summary>
            Gets a value indicating whether the class can return line information.
            </summary>
            <returns>
            true if <see cref="P:System.Xml.IXmlLineInfo.LineNumber"/> and <see cref="P:System.Xml.IXmlLineInfo.LinePosition"/> can be provided; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.LineNumber">
            <summary>
            Gets the current line number.
            </summary>
            <value></value>
            <returns>
            The current line number or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.XmlLineInfoAttribute.LinePosition">
            <summary>
            Gets the current line position.
            </summary>
            <value></value>
            <returns>
            The current line position or 0 if no line information is available (for example, <see cref="M:System.Xml.IXmlLineInfo.HasLineInfo"/> returns false).
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SilverlightUtilities">
            <summary>
            Defines a set of utilities for Silverlight.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetCodeFluentRuntimePath(CodeFluent.Runtime.Utilities.SilverlightVersion)">
            <summary>
            Gets the CodeFluent Entities runtime path for a given Silverlight version.
            </summary>
            <param name="slVersion">The Silverlight version.</param>
            <returns></returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetSdks">
            <summary>
            Gets a list of Silverlight SDKs.
            </summary>
            <returns>A list of Silverlight SDKs.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetSdkForReferencePath(System.String)">
            <summary>
            Gets the Silverlight SDK instance for a specific path.
            </summary>
            <param name="path">The input path. May not be null.</param>
            <returns>An instance of the SilverlightSdk class or null if it was not found.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.GetSdk(CodeFluent.Runtime.Utilities.SilverlightVersion)">
            <summary>
            Gets the Silverlight SDK instance for a specific Silverlight version. Silverlight 1 is not supported.
            </summary>
            <param name="version">The Silverlight version.</param>
            <returns>An instance of the SilverlightSdk class or null if it was not found.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk">
            <summary>
            Defines a Silverlight SDK.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.CompareTo(CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.Version">
            <summary>
            Gets the corresponding installed runtime version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.SilverlightVersion">
            <summary>
            Gets the silverlight version.
            </summary>
            <value>The silverlight version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.Name">
            <summary>
            Gets the Silverlight name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.DisplayVersion">
            <summary>
            Gets the Silverlight display version.
            </summary>
            <value>The display version.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.RuntimeInstallationPath">
            <summary>
            Gets the runtime installation path.
            </summary>
            <value>The installation path. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.InstallationPath">
            <summary>
            Gets the SDK installation path.
            </summary>
            <value>The installation path. May be null.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.SilverlightUtilities.SilverlightSdk.ClientLibrariesPath">
            <summary>
            Gets the SDK client libraries path.
            </summary>
            <value>The client libraries path.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection">
            <summary>
            Represents a collection of associated NameValueCollection objects, parsed from an input string, that can be accessed either with the key or with the index.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.DefaultSeparator">
            <summary>
            Defines the default separator character to use. Defined as ';'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.DefaultQuote">
            <summary>
            Defines the default quote character to use. Defined as '"'.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.DefaultAssignment">
            <summary>
            Defines the default assignment character to use. Defined as '='.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Char,System.Char,System.Char,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="separator">The separator character to use.</param>
            <param name="quote">The quote character to use.</param>
            <param name="assignment">The assignment character to use.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Char,System.Char,System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="separator">The separator character to use.</param>
            <param name="quote">The quote character to use.</param>
            <param name="assignment">The assignment character to use.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
            <param name="createByValueIndex">if set to <c>true</c> a by-value index is also created.</param>
            <param name="unescape">if set to <c>true</c> the input text is unescaped.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.#ctor(System.String,System.Char[],System.Char[],System.Char,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollectionCollection"/> class.
            </summary>
            <param name="text">The text to parse. May be null.</param>
            <param name="separators">The separator characters to use.</param>
            <param name="quotes">The quote characters to use.</param>
            <param name="assignment">The assignment character to use.</param>
            <param name="trim">if set to <c>true</c> names are trimmed.</param>
            <param name="caseSensitive">if set to <c>true</c> the created collection are case sensitive.</param>
            <param name="createByValueIndex">if set to <c>true</c> a by-value index is also created.</param>
            <param name="unescape">if set to <c>true</c> the input text is unescaped.</param>
            <param name="keepQuotes">if set to <c>true</c> quotes are kept.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToString(System.Collections.IDictionary)">
            <summary>
            Creates a string representation of a dictionary instance.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <returns>The output string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToString(System.Collections.IDictionary,System.Char,System.Char,System.Char)">
            <summary>
            Creates a string representation of a dictionary instance.
            </summary>
            <param name="dictionary">The input dictionary. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="assignment">The assignment character.</param>
            <returns>The output string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char[],System.Char[],System.Boolean)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">The separator characters.</param>
            <param name="quotes">The quote characters.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char,System.Char,System.Boolean)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <returns>An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char[],System.Char[],System.Boolean,System.Int32)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">The separator characters.</param>
            <param name="quotes">The quote characters.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <param name="maxCount">The maximum number of substrings to return.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char[],System.Char[],System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separators">The separator characters.</param>
            <param name="quotes">The quote characters.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <param name="maxCount">The maximum number of substrings to return.</param>
            <param name="keepQuotes">if set to <c>true</c> quotes are kept.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Split(System.String,System.Char,System.Char,System.Boolean,System.Int32)">
            <summary>
            Returns a String array containing the substrings in this instance that are delimited by elements of a specified Char or String array.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="separator">The separator character.</param>
            <param name="quote">The quote character.</param>
            <param name="trim">if set to <c>true</c> the input names are trimmed.</param>
            <param name="maxCount">The maximum number of substrings to return.</param>
            <returns>
            An array whose elements contain the substrings in this instance that are delimited by one or more characters in separator.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified value to the collection.
            </summary>
            <param name="name">The name to use. may not be null.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Add(CodeFluent.Runtime.Utilities.NameValueCollection)">
            <summary>
            Adds the specified list to the collection.
            </summary>
            <param name="list">The input list. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Object)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.String)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue``1(System.String,``0)">
            <summary>
            Gets the first value at the specified index.
            </summary>
            <typeparam name="T">The value target type.</typeparam>
            <param name="name">The value name. May not be null.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue``1(System.String,System.Int32,``0)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <typeparam name="T">The value target type.</typeparam>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Boolean)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Int32,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Byte,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Int16,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Int64,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.DateTime,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Guid)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Decimal,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Double,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Single,System.IFormatProvider)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <param name="provider">The input provider format provider.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Char)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetValue(System.String,System.Int32,System.Enum)">
            <summary>
            Gets the value at the specified index.
            </summary>
            <param name="name">The value name. May not be null.</param>
            <param name="index">The index to search at.</param>
            <param name="defaultValue">The default value if an error occurs.</param>
            <returns>The value at the specified index.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetNameByValue(System.String)">
            <summary>
            Gets a name by its value.
            Only available if the by-value index has been created.
            if multiple names have the same value, the results are not deterministic.
            </summary>
            <param name="value">The value.</param>
            <returns>The name.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToTable">
            <summary>
            Converts to a dictionary.
            </summary>
            <returns>An instance of a Hashtable type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToDictionary">
            <summary>
            Converts to a dictionary.
            </summary>
            <returns>An instance of a IDictionary type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToDictionary``1">
            <summary>
            Converts to a dictionary.
            </summary>
            <typeparam name="T">The type of target values.</typeparam>
            <returns>An instance of a IDictionary type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.ToDictionary(System.Boolean)">
            <summary>
            Converts to a dictionary.
            </summary>
            <param name="ordered">if set to <c>true</c>, the target IDictionary will be ordered.</param>
            <returns>An instance of a IDictionary type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.KeepQuotes">
            <summary>
            Gets a value indicating whether quotes are kept.
            </summary>
            <value><c>true</c> if quotes are kept; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.MustTrim">
            <summary>
            Gets a value indicating whether names must be trimmed.
            </summary>
            <value><c>true</c> if names must be trimmed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.MustCreateByValueIndex">
            <summary>
            Gets a value indicating whether a by-value index must be created.
            </summary>
            <value>
            	<c>true</c> if a by-value index must be created; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.MustUnescape">
            <summary>
            Gets a value indicating whether the input text must be escaped.
            </summary>
            <value><c>true</c> if the input text must be escaped; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.SeparatorChar">
            <summary>
            Gets the first separator character.
            </summary>
            <value>The separator character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.SeparatorChars">
            <summary>
            Gets the separator characters.
            </summary>
            <value>The separator characters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.QuoteChar">
            <summary>
            Gets the quote character.
            </summary>
            <value>The quote character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.QuoteChars">
            <summary>
            Gets the quote characters.
            </summary>
            <value>The quote characters.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.AssignmentChar">
            <summary>
            Gets the assignment character.
            </summary>
            <value>The assignment character.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Text">
            <summary>
            Gets the original input text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollection"/> at the specified index.
            </summary>
            <value>The collection instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:CodeFluent.Runtime.Utilities.NameValueCollection"/> with the specified name.
            </summary>
            <value>The collection instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.NameValueCollectionCollection.Count">
            <summary>
            Gets the count of collections in this collection.
            </summary>
            <value>The count.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities">
            <summary>
            Represents IO utilities.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.IOUtilities.DefaultWrapSharingViolationsRetryCount">
            <summary>
            Defines the default number of retries for sharing violations wrapping.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.IOUtilities.DefaultWrapSharingViolationsWaitTime">
            <summary>
            Defines the default wait time in milliseconds for sharing violations wrapping.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExcludedApplicationFromErrorReporting">
            <summary>
            Excludes the current application from error reporting.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExcludedApplicationFromErrorReporting(System.String)">
            <summary>
            Excludes an application from error reporting.
            </summary>
            <param name="executableName">Name of the executable. If null, the current process will be used.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolations(CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback)">
            <summary>
            Wraps sharing violations that could occur on a file IO operation.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolations(CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback,System.Int32,System.Int32)">
            <summary>
            Wraps sharing violations that could occur on a file IO operation.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
            <param name="retryCount">The retry count.</param>
            <param name="waitTime">The wait time in milliseconds.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolations(CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback,CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsExceptionsCallback,System.Int32,System.Int32)">
            <summary>
            Wraps sharing violations that could occur on a file IO operation.
            </summary>
            <param name="action">The action to execute. May not be null.</param>
            <param name="exceptionsCallback">The exceptions callback. May be null.</param>
            <param name="retryCount">The retry count.</param>
            <param name="waitTime">The wait time in milliseconds.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.IsSharingViolation(System.IO.IOException)">
            <summary>
            Determines whether the specified exception is a sharing violation exception.
            </summary>
            <param name="exception">The exception. May not be null.</param>
            <returns>
            	<c>true</c> if the specified exception is a sharing violation exception; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetHResult(System.IO.IOException,System.Int32)">
            <summary>
            Gets the HRESULT of the specified exception.
            </summary>
            <param name="exception">The exception to test. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <returns>The HRESULT value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetHResult(System.IO.IOException,System.UInt32)">
            <summary>
            Gets the HRESULT of the specified exception.
            </summary>
            <param name="exception">The exception to test. May not be null.</param>
            <param name="defaultValue">The default value in case of an error.</param>
            <returns>The HRESULT value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractFileText(System.String,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text file and optionally adds an error.
            </summary>
            <param name="filePath">The input file path. May not be null.</param>
            <param name="encoding">The file character encoding. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractFileText(System.IO.Stream,System.Text.Encoding,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text stream and optionally adds an error.
            </summary>
            <param name="stream">The input stream. May not be null.</param>
            <param name="encoding">The file character encoding. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractText(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from another text and optionally adds an error.
            </summary>
            <param name="text">The input text. May be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.ExtractText(System.IO.TextReader,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Extracts text from a text reader and optionally adds an error.
            </summary>
            <param name="reader">The input reader. May not be null.</param>
            <param name="column">The column number.</param>
            <param name="line">The line number.</param>
            <param name="totalLines">The total lines to extract.</param>
            <param name="error">The error to add.</param>
            <returns>A resulting text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.FileReadLines(System.String,System.Text.Encoding,System.Int32)">
            <summary>
            Opens a file, reads a specific number of lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="encoding">The encoding applied to the contents of the file. If null, UTF-8 will be used.</param>
            <param name="count">The number of lines to read.</param>
            <returns>A string array containing lines from the file.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsEqual(System.String,System.String)">
            <summary>
            Determines if a path is equal to another path.
            </summary>
            <param name="path1">The first path. May not be null.</param>
            <param name="path2">The second path. May not be null.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsChildOrEqual(System.String,System.String)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathIsChild(System.String,System.String)">
            <summary>
            Determines if a path is a child of a given path.
            </summary>
            <param name="path">The path. May not be null.</param>
            <param name="child">The child. May not be null.</param>
            <returns>
            	<c>true</c> if the child path is a child of path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.FileExists(System.String)">
            <summary>
            Determines if a file exists. Eats all exceptions.
            </summary>
            <param name="path">The file path. May not be null.</param>
            <returns>
            	<c>true</c> if the file exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.DirectoryExists(System.String)">
            <summary>
            Determines if a directory exists. Eats all exceptions.
            </summary>
            <param name="path">The directory path. May not be null.</param>
            <returns>
            	<c>true</c> if the directory exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathOverwrite(System.String,System.String)">
            <summary>
            Copies a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathOverwrite(System.String,System.String,System.Boolean)">
            <summary>
            Copies a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
            <param name="unprotect">if set to <c>true</c> unprotects the file if the ReadOnly attribute is set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMove(System.String,System.String)">
            <summary>
            Moves a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMove(System.String,System.String,System.Boolean)">
            <summary>
            Moves a file forcing overwrite if needed.
            </summary>
            <param name="source">The source file. May not be null.</param>
            <param name="destination">The destination file. May not be null.</param>
            <param name="unprotect">if set to <c>true</c> unprotects the file if the ReadOnly attribute is set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathDelete(System.String)">
            <summary>
            Deletes a file.
            </summary>
            <param name="filePath">The path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathDelete(System.String,System.Boolean)">
            <summary>
            Deletes a file.
            </summary>
            <param name="filePath">The path. May not be null.</param>
            <param name="unprotect">if set to <c>true</c> unprotects the file if the ReadOnly attribute is set.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMakeRelativeIfChild(System.String,System.String)">
            <summary>
            Determines the difference between two paths if path2 is a child of path1. This method returns path2 relatively to path1.
            </summary>
            <param name="path1">The path1. May not be null.</param>
            <param name="path2">The path2. May not be null.</param>
            <returns>The relative path. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathMakeRelative(System.String,System.String)">
            <summary>
            Determines the difference between two absolute paths. This method returns path2 relatively to path1.
            If paths are relative, the method will try to expand them using environment variables.
            </summary>
            <param name="path1">The path1. May not be null.</param>
            <param name="path2">The path2. May not be null.</param>
            <returns>The relative path. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathCreateDirectory(System.String)">
            <summary>
            Makes sure a directory exists for a given file path.
            </summary>
            <param name="filePath">The file path. Note this is not to be confused with the directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathHasInvalidChars(System.String)">
            <summary>
            Determines if the specified has invalid chars.
            </summary>
            <param name="path">The input path. If null, true will be returned.</param>
            <returns>true if the path has invalid chars; otherwise false.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathCheckWriteAccess(System.String)">
            <summary>
            Check write access for a given directory path.
            </summary>
            <param name="directoryPath">The directory path to check. May not be null.</param>
            <returns>
            	<c>true</c> if the given path is a writable directory path; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.PathUnprotect(System.String)">
            <summary>
            Unprotects the given file path.
            </summary>
            <param name="path">The file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlEncode(System.String)">
            <summary>
            Encodes a url string without a reference to the System.Web assembly.
            </summary>
            <param name="text">The input text.</param>
            <returns>A encoded string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlDecode(System.String)">
            <summary>
            Decodes a url string without a reference to the System.Web assembly.
            </summary>
            <param name="text">The input text.</param>
            <returns>A decoded string</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlDirectoryFromUrl(System.String)">
            <summary>
            Computes the directory url from a given url.
            </summary>
            <param name="uriString">The uri string. May not be null.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.UrlDirectoryFromUrl(System.String,System.Boolean)">
            <summary>
            Computes the directory url from a given url.
            </summary>
            <param name="uriString">The uri string. May not be null.</param>
            <param name="trailingDirectorySeparator">if set to <c>true</c>, a trailing directory separator will be added.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.DirectoryUrlFromUrl(System.Uri)">
            <summary>
            Computes the directory <see cref="T:System.Uri"/> from a given <see cref="T:System.Uri"/> instance.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> instance to use.</param>
            <returns>The computed Uri instance. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.DirectoryUrlFromUrl(System.Uri,System.Boolean)">
            <summary>
            Computes the directory <see cref="T:System.Uri"/> from a given <see cref="T:System.Uri"/> instance.
            </summary>
            <param name="uri">The <see cref="T:System.Uri"/> instance to use.</param>
            <param name="trailingDirectorySeparator">if set to <c>true</c>, a trailing directory separator will be added.</param>
            <returns>
            The computed Uri instance. May not be null.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.SchemeHostPortFromUrl(System.Uri)">
            <summary>
            Computes a combined scheme+host+port url from a given Uri instance.
            </summary>
            <param name="uri">The input Uri instance. May not be null.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.SchemeHostPortFromUrl(System.Uri,System.Boolean)">
            <summary>
            Computes a combined scheme+host+port url from a given Uri instance.
            </summary>
            <param name="uri">The input Uri instance. May not be null.</param>
            <param name="appendAltDirectorySeparatorChar">if set to <c>true</c> append the alternate directory separator character will be appended to the resulting url.</param>
            <returns>The computed url. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetSharingViolationException(System.String,System.Exception)">
            <summary>
            Gets a sharing violation exception.
            </summary>
            <param name="filePath">The file path. May not be null.</param>
            <param name="innerException">The inner exception. May be null.</param>
            <returns>An exception instance or null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetProcessesOpeningFile(System.String)">
            <summary>
            Gets a list of processes opening a given file.
            </summary>
            <param name="filePath">The searched file path. May not be null.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetProcessesOpeningFile(System.String,System.Boolean)">
            <summary>
            Gets a list of processes opening a given file.
            </summary>
            <param name="filePath">The searched file path. May not be null.</param>
            <param name="throwOnError">if set to <c>true</c> errors may be thrown; otherwise an empty list will be returned.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles(System.String,System.Int32)">
            <summary>
            Gets a list of processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <param name="searchExpression">A search expression filter. The expected syntax is a regular expression. To filter a path, you must double the directory separator character. If null, no filter will be applied. </param>
            <param name="processId">A process identifier filter. If lower than or equal to zero, no filter will be applied.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles">
            <summary>
            Gets a list of all processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles(System.String)">
            <summary>
            Gets a list of all processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <param name="searchExpression">A search expression filter. The expected syntax is a regular expression. To filter a path, you must double the directory separator character. If null, no filter will be applied. </param>
            <returns>A list of processes.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.IOUtilities.GetOpenedFiles(System.String,System.String)">
            <summary>
            Gets a list of processes and the files they have opened.
            This method is based on the http://www.sysinternals.com tool named HANDLE.EXE.
            This tool must be accessible to the running program for this method to succeed.
            </summary>
            <param name="searchExpression">A search expression filter. The expected syntax is a regular expression. To filter a path, you must double the directory separator character. If null, no filter will be applied. </param>
            <param name="processNameOrId">A process name or identifier filter. If null, no filter will be applied.</param>
            <returns>A list of processes.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsCallback">
            <summary>
            Defines a sharing violation wrapper delegate.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities.WrapSharingViolationsExceptionsCallback">
            <summary>
            Defines a sharing violation wrapper delegate for handling exception.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess">
            <summary>
            Defines a process and its opened files.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.FileNames">
            <summary>
            Gets a list of file names opened by this process.
            </summary>
            <value>The list of file names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.Process">
            <summary>
            Gets the process instance. May be null if the process has terminated.
            </summary>
            <value>The process instance.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.Id">
            <summary>
            Gets the process identifier.
            </summary>
            <value>The process identifier.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.IOUtilities.OpenedFileProcess.Name">
            <summary>
            Gets the process name.
            </summary>
            <value>The process name.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.CompoundFileException">
            <summary>
            The exception that is thrown when a compound file error occurs.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.CompoundFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.CompoundFileException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
              </exception>
              
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
              </exception>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.ArrayDataReader">
            <summary>
            Defines an IDataReader implementation based on an array.
            Supports one-dimensional and two-dimensional arrays only.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.ArrayDataReader.#ctor(System.Array)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.ArrayDataReader"/> class.
            </summary>
            <param name="array">The underlying array. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ArrayDataReader.CurrentRow">
            <summary>
            Gets the current row.
            </summary>
            <value>The current row.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.ArrayDataReader.Array">
            <summary>
            Gets the underlying rray.
            </summary>
            <value>The array.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.ObjectValidator">
            <summary>
            Provides validation of an object, preferrably an entity or a collection.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ObjectValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.ObjectValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="allowNullOrEmpty">if set to <c>true</c> if empty collections or null entities are allowed.</param>
            <param name="enumerate">if set to <c>true</c> IEnumerable should be used if implemented.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ObjectValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.ObjectValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">The name of a member being validated. May be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.ObjectValidator.Enumerate">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:CodeFluent.Runtime.Rules.ObjectValidator"/> should enumerate objects implementing IEnumerable.
            </summary>
            <value><c>true</c> if IEnumerable should be used; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.ObjectValidator.AllowNullOrEmpty">
            <summary>
            Gets or sets a value indicating whether empty collections or null entities are allowed.
            </summary>
            <value><c>true</c> if empty collections or null entities are allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.ObjectValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ObjectValidator.FailureCode.Null">
            <summary>
            The entity is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.ObjectValidator.FailureCode.Empty">
            <summary>
            The collection is empty.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonButton">
            <summary>
            Defines a ribbon button.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonButton"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonButton"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonButton.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the item.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonButton.DrawText">
            <summary>
            Gets a value indicating whether text will be drawn.
            </summary>
            <value><c>true</c> if text will be drawn; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonButton.ForeColor">
            <summary>
            Gets the text color.
            </summary>
            <value>The text color.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockCaption">
            <summary>
            Defines a Control that will display a window caption.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.#ctor(CodeFluent.Runtime.Design.IDockCaptionOwner)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockCaption"/> class.
            </summary>
            <param name="owner">The owner. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.ShowContextMenu(System.Drawing.Point)">
            <summary>
            Shows the context menu.
            </summary>
            <param name="location">The menu location.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnContextMenuOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when the context menu is opening.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnContextMenuClick(System.Object,System.EventArgs)">
            <summary>
            Called when a context menu item is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.GetButtonBounds(CodeFluent.Runtime.Design.DockCaptionButton)">
            <summary>
            Gets a caption button bounds.
            </summary>
            <param name="button">The button.</param>
            <returns>An instance of the Rectangle structure.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.CloseItem">
            <summary>
            Closes the item.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnButtonDown(System.Windows.Forms.MouseEventArgs,CodeFluent.Runtime.Design.DockCaptionButton)">
            <summary>
            Raises the <see cref="E:ButtonDown"/> event.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <param name="button">The button.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseClick"/> event.
            </summary>
            <param name="e">An <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockCaption.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockCaption.CanClose">
            <summary>
            Gets a value indicating whether the current item can be closed.
            </summary>
            <value><c>true</c> if the current item can be closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockCaption.CanAutoHide">
            <summary>
            Gets a value indicating whether the current item can be auto hidden.
            </summary>
            <value>
            	<c>true</c> if the current item can be auto hidden; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockCaption.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockAutoHideWindow">
            <summary>
            Defines a Form that will be used for showing items in auto hide windows.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.#ctor(CodeFluent.Runtime.Design.DockPanel)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockAutoHideWindow"/> class.
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.CreateCaption">
            <summary>
            Creates an instance of the DockCaption class.
            </summary>
            <returns>An instance of the DockCaption class.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnShowTimerTick(System.Object,System.EventArgs)">
            <summary>
            Called when the show timer ticks.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.InSplitter(System.Drawing.Point)">
            <summary>
            Determines if the location is over the splitter.
            </summary>
            <param name="location">The location.</param>
            <returns>true if the location is over the splitter; false otherwise.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.GetAutoHideSize(CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Gets the size of the auto hide window, vertical or horizontal.
            </summary>
            <param name="item">The item. May not be null.</param>
            <returns>The size in pixels.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Defines the window procedure function.
            </summary>
            <param name="m">The window message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.Show(CodeFluent.Runtime.Design.DockAutoHidePanel,CodeFluent.Runtime.Design.DockItem)">
            <summary>
            Shows the specified item using this form instance.
            </summary>
            <param name="autoHidePanel">The owning auto hide panel. May not be null.</param>
            <param name="item">The item. May not be null.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.Panel">
            <summary>
            Gets the panel.
            </summary>
            <value>The panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.AutoHidePanel">
            <summary>
            Gets the owning auto hide panel.
            </summary>
            <value>The auto hide panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.Item">
            <summary>
            Gets the shown item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.BackPanel">
            <summary>
            Gets the back panel.
            </summary>
            <value>The back panel.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.Caption">
            <summary>
            Gets the caption.
            </summary>
            <value>The caption.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm">
            <summary>
            Defines a form that will be used to display a splitter bar.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.DockAutoHideWindow.DockSplitterForm.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            <value></value>
            <returns>True if the window will not be activated when it is shown; otherwise, false. The default is false.</returns>
        </member>
        <member name="T:CodeFluent.Runtime.Design.AutoCompletion">
            <summary>
            A utility class that can display an auto complete list box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.#ctor(System.Windows.Forms.TextBoxBase)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion"/> class.
            </summary>
            <param name="textBox">The owning text box.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.Hide">
            <summary>
            Hides the auto completion list box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.Show">
            <summary>
            Shows the auto completion list box. If there are no items in the list, it will not be shown.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Design.AutoCompletion.TextChanged">
            <summary>
            Occurs when owning textbox text changed.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.IsEnabled">
            <summary>
            Gets or sets a value indicating whether auto completion is enabled or not.
            </summary>
            <value><c>true</c> if auto completion is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.UserDismissed">
            <summary>
            Gets or sets a value indicating whether user has dismissed the list box manually using escape.
            </summary>
            <value><c>true</c> if user dismissed the list box manually; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.SelectedItem">
            <summary>
            Gets or sets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Font">
            <summary>
            Gets or sets the font used for the list box.
            </summary>
            <value>The font.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.MinimumLines">
            <summary>
            Gets or sets the minimum lines to display in the list box.
            </summary>
            <value>The minimum lines.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.MaximumLines">
            <summary>
            Gets or sets the maximum lines to display in the list box.
            </summary>
            <value>The maximum lines.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.ImageMargin">
            <summary>
            Gets or sets the image margin.
            </summary>
            <value>The image margin.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>The margin.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.BorderStyle">
            <summary>
            Gets or sets the form border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Images">
            <summary>
            Gets or sets the images list.
            </summary>
            <value>The images list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.Items">
            <summary>
            Gets the items to display.
            </summary>
            <value>The list of items to display.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem">
            <summary>
            Defines a item to add in the auto completion list box.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="imageIndex">Index of the image.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="imageIndex">Index of the image.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="toolTip">The tool tip.</param>
            <param name="toolTipTitle">The tool tip title.</param>
            <param name="imageIndex">Index of the image.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.ToolTip">
            <summary>
            Gets or sets the tool tip text.
            </summary>
            <value>The tool tip.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.ToolTipTitle">
            <summary>
            Gets or sets the tool tip title.
            </summary>
            <value>The tool tip title.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.AutoCompletion.AutoCompletionItem.ImageIndex">
            <summary>
            Gets or sets the index of the image in the images list.
            </summary>
            <value>The image index.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile">
            <summary>
            Represents a .ZIP file archive.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.DefaultBufferSize">
            <summary>
            Defines the default size of the buffer for block operations.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.#ctor(System.String,CodeFluent.Runtime.Compression.ZipFile.Mode)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile"/> class.
            </summary>
            <param name="filePath">The file path.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddStream(System.String)">
            <summary>
            Creates an entry to the archive using a stream, at the specified path.
            </summary>
            <param name="path">The path of the entry to create.</param>
            <returns>A writable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddStream(System.String,System.DateTime)">
            <summary>
            Creates an entry to the archive using a stream, at the specified path.
            </summary>
            <param name="path">The path of the entry to create.</param>
            <param name="lastWriteTime">The last write time.</param>
            <returns>A writable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddStream(System.String,System.String,System.Int32,System.Int32,System.DateTime)">
            <summary>
            Creates an entry to the archive using a stream, at the specified path.
            </summary>
            <param name="path">The path of the entry to create.</param>
            <param name="password">The password.</param>
            <param name="crc">The CRC to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="lastWriteTime">The entry last write time.</param>
            <returns>A writable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetStream(System.String)">
            <summary>
            Gets a readable stream from an existing entry in the archive.
            </summary>
            <param name="path">The entry relative path in the archive file.</param>
            <returns>A readable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetStream(System.String,System.String)">
            <summary>
            Gets a readable stream from an existing entry in the archive.
            </summary>
            <param name="path">The entry relative path in the archive file.</param>
            <param name="password">The password to use.</param>
            <returns>A readable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetStream(System.String,System.String,System.Int32,System.DateTime@)">
            <summary>
            Gets a readable stream from an existing entry in the archive.
            </summary>
            <param name="path">The entry relative path in the archive file.</param>
            <param name="password">The password to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="lastWriteTime">The entry last write time.</param>
            <returns>A readable stream instance.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String,System.String)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
            <param name="path">The relative path of the entry in the archive file.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String,System.String,System.String)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
            <param name="path">The relative path of the entry in the archive file.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddFile(System.String,System.String,System.String,System.Int32)">
            <summary>
            Adds an entry to the archive using a file on the disk.
            </summary>
            <param name="filePath">The source file path.</param>
            <param name="path">The relative path of the entry in the archive file.</param>
            <param name="password">The password to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddDirectory(System.String)">
            <summary>
            Adds the content of a directory to the archive, keeping file paths relative to the root directory path.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddDirectory(System.String,System.String)">
            <summary>
            Adds the content of a directory to the archive.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.AddDirectory(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds the content of a directory to the archive.
            </summary>
            <param name="directoryPath">The directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
            <param name="recursive">if set to <c>true</c> sub directories are processed as well.</param>
            <param name="keepPaths">if set to <c>true</c> relative paths are kept identically.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Create(System.String,System.String)">
            <summary>
            Creates the specified .ZIP archive file from the content of a directory.
            Also processes sub directories.
            </summary>
            <param name="zipFilePath">The target file path. May not be null.</param>
            <param name="directoryPath">The input directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Create(System.String,System.String,System.String)">
            <summary>
            Creates the specified .ZIP archive file from the content of a directory.
            Also processes sub directories.
            </summary>
            <param name="zipFilePath">The target file path. May not be null.</param>
            <param name="directoryPath">The input directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Create(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates the specified .ZIP archive file from the content of a directory.
            </summary>
            <param name="zipFilePath">The target file path. May not be null.</param>
            <param name="directoryPath">The input directory path. May not be null.</param>
            <param name="rootPath">The root relative path of files in the archive.</param>
            <param name="recursive">if set to <c>true</c> sub directories are processed as well.</param>
            <param name="keepPaths">if set to <c>true</c> relative path are kept identically.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFile(System.String,System.String)">
            <summary>
            Saves an entry from the archive to a file on the disk.
            </summary>
            <param name="path">The relative path of the entry in the archive file. May not be null.</param>
            <param name="filePath">The output file path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFile(System.String,System.String,System.Int32,System.String)">
            <summary>
            Saves an entry from the archive to a file on the disk.
            </summary>
            <param name="path">The relative path of the entry in the archive file. May not be null.</param>
            <param name="filePath">The output file path. May not be null.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="password">The password to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFiles(System.String)">
            <summary>
            Saves the entire content of the archive to a directory on the disk.
            </summary>
            <param name="directoryPath">The output directory path. May not be null.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.GetFiles(System.String,System.String,System.Int32,System.Boolean)">
            <summary>
            Saves the entire content of the archive to a directory on the disk.
            </summary>
            <param name="directoryPath">The output directory path. May not be null.</param>
            <param name="password">The password to use.</param>
            <param name="bufferSize">Size of the buffer for block operations.</param>
            <param name="keepPaths">if set to <c>true</c> relative paths in the archive are conserved for output.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Close">
            <summary>
            Closes this instance and flush the data.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.ZipFile.OnGetFile">
            <summary>
            Occurs when a file is read from the archive.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.ZipFile.OnGotFile">
            <summary>
            Occurs when a file has been read from the archive.
            </summary>
        </member>
        <member name="E:CodeFluent.Runtime.Compression.ZipFile.OnAddFile">
            <summary>
            Occurs when a file is being added to the archive.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.IsZip64Format">
            <summary>
            Gets a value indicating whether this instance has the ZIP64 format.
            </summary>
            <value>
              <c>true</c> if this instance has the ZIP64 format; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipMode">
            <summary>
            Gets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.FilePath">
            <summary>
            Gets the archive file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.Entries">
            <summary>
            Gets all the entries in the archive.
            </summary>
            <value>An array of entries.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.Mode">
            <summary>
            Defines how a .ZIP file will be accessed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Read">
            <summary>
            The file is open for read only operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Overwrite">
            <summary>
            The file is open for write operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Append">
            <summary>
            The file is open for write with append operations.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Compression.ZipFile.Mode.Zip64">
            <summary>
            Use ZIP64 format for write operations. The file may be saved as a ZIP64 only if needed.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventHandler">
            <summary>
            Represents the method that handles a <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs"/> event. 
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs">
            <summary>
            Provides data for a zip file event.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs"/> class.
            </summary>
            <param name="path">The relative path in the archive.</param>
            <param name="filePath">The .ZIP archive file path.</param>
            <param name="bufferSize">Size of the buffer to use for block operations.</param>
            <param name="password">The password to use, if needed.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.Path">
            <summary>
            Gets the relative path in the archive.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.FilePath">
            <summary>
            Gets or sets the file path.
            </summary>
            <value>The file path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.BufferSize">
            <summary>
            Gets or sets the size of the buffer for block operations.
            </summary>
            <value>The size of the buffer.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.Password">
            <summary>
            Gets or sets the archive password.
            </summary>
            <value>The password.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipFileEventArgs.Skip">
            <summary>
            Gets or sets a value indicating whether a file must be skipped.
            </summary>
            <value><c>true</c> if skip; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipEntry">
            <summary>
            Defines an entry in the .ZIP archive file.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.CompareTo(CodeFluent.Runtime.Compression.ZipFile.ZipEntry)">
            <summary>
            Compares the current object with another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has the following meanings:
            Value
            Meaning
            Less than zero
            This object is less than the <paramref name="other"/> parameter.
            Zero
            This object is equal to <paramref name="other"/>.
            Greater than zero
            This object is greater than <paramref name="other"/>.
            </returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Flags">
            <summary>
            Gets the general purpose bit flags.
            </summary>
            <value>
            The flags.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Crc">
            <summary>
            Gets the crc.
            </summary>
            <value>
            The crc.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Path">
            <summary>
            Gets the entry relative path in the archive.
            </summary>
            <value>The path.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.Method">
            <summary>
            Gets the store method name. Can be 'Stored', 'Deflated' or 'Unknown'.
            </summary>
            <value>The method name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.CompressionMethod">
            <summary>
            Gets the compression method.
            </summary>
            <value>
            The compression method.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.CompressedSize">
            <summary>
            Gets compressed entry size.
            </summary>
            <value>The compressed entry size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.UncompressedSize">
            <summary>
            Gets uncompressed entry size.
            </summary>
            <value>The uncompressed entry size.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Compression.ZipFile.ZipEntry.LastWriteTime">
            <summary>
            Gets the entry last write time.
            </summary>
            <value>The entry last write time.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Compression.ZipFile.ZipException">
            <summary>
            The exception that is thrown when an error occurs during any .ZIP operation.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.GetMessage(System.Int32)">
            <summary>
            Gets the exception text.
            </summary>
            <param name="code">The error code.</param>
            <returns>The text.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="hr">The hr.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Compression.ZipFile.ZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Compression.ZipFile.ZipException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="T:CodeFluent.Model.Common.Templating.TemplateStack">
            <summary>
            Represents a stack of template.
            This class supports the CodeFluent infrastructure and is not intended to be used directly from your code.
            </summary>
        </member>
        <member name="M:CodeFluent.Model.Common.Templating.TemplateStack.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.TemplateStack.Count">
            <summary>
            Gets the number of templates in the stack.
            </summary>
            <value>The number of templates in the stack.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.TemplateStack.First">
            <summary>
            Gets the first template in the stack.
            </summary>
            <value>The firsttemplate in the stack.</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.TemplateStack.Last">
            <summary>
            Gets the last template in the stack.
            </summary>
            <value>The last .</value>
        </member>
        <member name="P:CodeFluent.Model.Common.Templating.TemplateStack.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:CodeFluent.Model.Common.Templating.Template"/> at the specified index.
            </summary>
            <value>A template instance</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.PerceivedTypeSource">
            <summary>
            Indicates the source of the perceived type information.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.Undefined">
            <summary>
            No perceived type was found.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.SoftCoded">
            <summary>
            The perceived type was determined through an association in the registry.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.HardCoded">
            <summary>
            The perceived type is inherently known to the operating system.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.NativeSupport">
            <summary>
            The perceived type was determined through a codec provided with the operating system.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.GdiPlus">
            <summary>
            The perceived type is supported by the Windows GDI+ library.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.WmSdk">
            <summary>
            The perceived type is supported by the Microsoft Windows Media software development kit (SDK).
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.ZipFolder">
            <summary>
            The perceived type is supported by Windows compressed folders.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Utilities.PerceivedTypeSource.Mime">
            <summary>
            The perceived type was determined through MIME content types in the registry.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DynamicObjectProperty">
            <summary>
            Represents a dynamic object property.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicObjectProperty"/> class.
            </summary>
            <param name="descriptor">The descriptor.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.#ctor(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.DynamicObjectProperty"/> class.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The property type.</param>
            <param name="attributes">The property custom attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.Construct(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Constructs the current instance.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The property type.</param>
            <param name="attributes">The property custom attributes.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.CanResetValue(System.Object)">
            <summary>
            When overridden in a derived class, returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>
            true if resetting the component changes its value; otherwise, false.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.GetValue(System.Object)">
            <summary>
            When overridden in a derived class, gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>
            The value of a property for a given component.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ResetValue(System.Object)">
            <summary>
            When overridden in a derived class, resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.SetValue(System.Object,System.Object)">
            <summary>
            When overridden in a derived class, sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ShouldSerializeValue(System.Object)">
            <summary>
            When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>
            true if the property should be persisted; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.DefaultValue">
            <summary>
            Gets or sets the default value.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>The sort order.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.HasDefaultValue">
            <summary>
            Gets a value indicating whether this instance has a default value.
            </summary>
            <value>
            	<c>true</c> if this instance has a default value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.ComponentType">
            <summary>
            When overridden in a derived class, gets the type of the component this property is bound to.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of component this property is bound to. When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)"/> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)"/> methods are invoked, the object specified might be an instance of this type.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.IsReadOnly">
            <summary>
            When overridden in a derived class, gets a value indicating whether this property is read-only.
            </summary>
            <value></value>
            <returns>true if the property is read-only; otherwise, false.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObjectProperty.PropertyType">
            <summary>
            When overridden in a derived class, gets the type of the property.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Type"/> that represents the type of the property.
            </returns>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.DynamicObject">
            <summary>
            Represents a dynamic object whose properties can be added or removed at runtime.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.AddProperty(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Adds a new property.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="attributes">The property custom attributes or null.</param>
            <returns>An instance of the DynamicObjectProperty type.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.AddProperty(System.String,System.Type,System.Object,System.Boolean,System.Int32,System.Attribute[])">
            <summary>
            Adds a new property.
            </summary>
            <param name="name">The name.</param>
            <param name="type">The type.</param>
            <param name="defaultValue">The default value.</param>
            <param name="readOnly">if set to <c>true</c> the property is read only.</param>
            <param name="sortOrder">The property sort order.</param>
            <param name="attributes">The property custom attributes or null.</param>
            <returns>
            An instance of the DynamicObjectProperty type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.SortProperties(System.Collections.Generic.IComparer{System.ComponentModel.PropertyDescriptor})">
            <summary>
            Sorts the properties using the specified comparer.
            </summary>
            <param name="comparer">The comparer to use.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.GetPropertyValue(System.String,System.Type,System.Object)">
            <summary>
            Gets a typed property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="type">The expected type.</param>
            <param name="defaultValue">The default value if the property value is not defined.</param>
            <returns>The property value or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.GetPropertyValue``1(System.String,``0)">
            <summary>
            Gets a typed property value.
            </summary>
            <typeparam name="T">The expected type.</typeparam>
            <param name="name">The property name.</param>
            <param name="defaultValue">The default value if the property value is not defined.</param>
            <returns>The property value or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.TryGetPropertyValue(System.String,System.Object@)">
            <summary>
            Gets the property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
            <returns>
            true if  the property value exists; false otherwise.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.GetPropertyValue(System.String,System.Object)">
            <summary>
            Gets a raw property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="defaultValue">The default value if the property value is not defined.</param>
            <returns>The property value or the default value.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.SetPropertyValue(System.String,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.CreateProperty(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Attribute})">
            <summary>
            Creates a property object.
            </summary>
            <param name="name">The property name. May not be null.</param>
            <param name="type">The property type. May not be null.</param>
            <param name="attributes">The property custom attributes or null.</param>
            <returns>
            An instance of the DynamicObjectProperty type.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.OnPropertyChanged(System.String)">
            <summary>
            Called when a property value has changed.
            </summary>
            <param name="name">The property name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.Validate">
            <summary>
            Validates the whole object.
            </summary>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.Validate(System.Globalization.CultureInfo)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.Globalization.CultureInfo,System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
            <returns>
            A text describing the error or null if there was no error.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.Globalization.CultureInfo,System.String,System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
            <param name="separator">The separator string to use.</param>
            <returns>A text describing the error or null if there was no error.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.DynamicObject.ValidateMember(System.Globalization.CultureInfo,System.Collections.Generic.IList{CodeFluent.Runtime.CodeFluentValidationException},System.String)">
            <summary>
            Validates the member.
            </summary>
            <param name="culture">The culture to use for error messages.</param>
            <param name="list">The list of exception to fill.</param>
            <param name="memberName">The name of the member to validate or null to validate the whole object.</param>
        </member>
        <member name="E:CodeFluent.Runtime.Utilities.DynamicObject.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>The attributes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.ClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <value>The class name.</value>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.ComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <value>The component name.</value>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Converter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <value>The converter.</value>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"/> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"/> for this object.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.DefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <value>The default event.</value>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"/> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.DefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <value>The default property.</value>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Editors">
            <summary>
            Gets the editors.
            </summary>
            <value>The editors.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Events">
            <summary>
            Gets the events.
            </summary>
            <value>The events.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.DynamicObject.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Utilities.BindingListManager`1">
            <summary>
            Helper class that implements IBindingList interface methods for a given List. 
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Utilities.BindingListManager`1"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.AddIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adds the PropertyDescriptor to the indexes used for searching.
            </summary>
            <param name="property">The property descriptor.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.RemoveIndex(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Removes the PropertyDescriptor from the indexes used for searching.
            </summary>
            <param name="property">The property descriptor.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the list based on a PropertyDescriptor and a ListSortDirection.
            </summary>
            <param name="property">The property descriptor.</param>
            <param name="direction">The sort direction.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.EnsureSort">
            <summary>
            Ensures the list is sorted.
            </summary>
            <value><c>true</c> if sort was applied; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.RemoveSort">
            <summary>
            Removes any sort applied using ApplySort.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Utilities.BindingListManager`1.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Returns the index of the list that has the given PropertyDescriptor.
            </summary>
            <param name="property">The property descriptor.</param>
            <param name="key">The key.</param>
            <returns>The index of the row that has the given PropertyDescriptor</returns>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.BaseList">
            <summary>
            Gets or sets the base list. May not be null.
            </summary>
            <value>The base list.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.IsSorted">
            <summary>
            Gets a value indicating whether this instance is sorted.
            </summary>
            <value><c>true</c> if this instance is sorted; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SortDirection">
            <summary>
            Gets the sort direction.
            </summary>
            <value>The sort direction.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SortProperty">
            <summary>
            Gets the sort property.
            </summary>
            <value>The sort property.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SupportsSearching">
            <summary>
            Gets a value indicating whether the list supports searching.
            </summary>
            <value><c>true</c> if the list supports searching; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.SupportsSorting">
            <summary>
            Gets a value indicating whether the list supports sorting.
            </summary>
            <value><c>true</c> if the list supports sorting; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.AllowEdit">
            <summary>
            Gets a value indicating whether modifying new items is allowed.
            </summary>
            <value><c>true</c> if modifying new items is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.AllowNew">
            <summary>
            Gets a value indicating whether adding new items is allowed.
            </summary>
            <value><c>true</c> if adding new items is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Utilities.BindingListManager`1.AllowRemove">
            <summary>
            Gets a value indicating whether removal of items is allowed.
            </summary>
            <value><c>true</c> if removal of items is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.UrlValidator">
            <summary>
            Provides validation of an url string.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.UrlValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.UriKind,System.String,System.String,System.String,System.String,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.StringValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="kind">The kind.</param>
            <param name="validSchemes">A comma separated list of valid schemes.</param>
            <param name="validPorts">A comma separated list of valid ports.</param>
            <param name="validHostNames">A comma separated list of valid host names.</param>
            <param name="validHostNameTypes">A comma separated list of valid host name types.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.UrlValidator.ValidateString(System.Object,System.String,System.String,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the string is a valid url.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidHostNameTypes">
            <summary>
            Gets or sets a list of valid host name types. If null or empty, all host name types are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid host name types.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidHostNames">
            <summary>
            Gets or sets a list of valid host names. If null or empty, all host names are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid host names.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidPorts">
            <summary>
            Gets or sets a list of valid ports. If null or empty, all ports are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid ports.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.ValidSchemes">
            <summary>
            Gets or sets a list of valid schemes. If null or empty, all schemes are allowed.
            Only used if the url is an absolute url.
            </summary>
            <value>The valid schemes.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.UrlValidator.Kind">
            <summary>
            Gets or sets the kind of uri. The default is Absolute.
            </summary>
            <value>The kind of the uri.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.UrlValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.Failed">
            <summary>
            The string is not a valid url.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidScheme">
            <summary>
            The scheme is invalid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidPort">
            <summary>
            The port is invalid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidHostName">
            <summary>
            The host name is invalid.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.UrlValidator.FailureCode.InvalidHostNameType">
            <summary>
            The host name type is invalid.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.StringValidatorOptions">
            <summary>
            Defines validation options for string.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.NullDisallowed">
            <summary>
            A null value is disallowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.EmptyDisallowed">
            <summary>
            An empty value is disallowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.Trim">
            <summary>
            The string is trimmed before being validated.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.StringValidatorOptions.EmptyAllowed">
            <summary>
            An empty string is always valid, regardless of other rules. The EmptyDisallowed option has priority over this option.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RuleParameterAttribute">
            <summary>
            Used to specify a rule parameter.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="name">The model name.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="name">The model name.</param>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="options">An optional set of flags.</param>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RuleParameterAttribute.#ctor(System.String,CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RuleParameterAttribute"/> class.
            </summary>
            <param name="name">The model name.</param>
            <param name="options">An optional set of flags.</param>
            <param name="defaultValue">The default value for the parameter.</param>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleParameterAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RuleParameterAttribute.DefaultValue">
            <summary>
            Gets the default value. May be null.
            </summary>
            <value>The default value.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions">
            <summary>
            Defines rule parameter options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RuleParameterAttribute.RuleParameterOptions.None">
            <summary>
            The rule parameter has no options.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RegularExpressionValidator">
            <summary>
            Provides validation of a string based on the rules provided by a regular expression.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RegularExpressionValidator.#ctor(CodeFluent.Runtime.Rules.IValueValidationFailureHandler,System.String,System.Text.RegularExpressions.RegexOptions,CodeFluent.Runtime.Rules.StringValidatorOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.RegularExpressionValidator"/> class.
            </summary>
            <param name="failureHandler">A specific failure handler. May be null.</param>
            <param name="expression">A string that specifies a regular expression.</param>
            <param name="regexOptions">Regular expression options.</param>
            <param name="options">Optional flags.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RegularExpressionValidator.Validate(System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.RegularExpressionValidator.Validate(System.Object,System.String,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Determines whether the value of an object is valid.
            </summary>
            <param name="owner">The value owner.</param>
            <param name="memberName">Name of the object's member. May not be null.</param>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <returns>
            null if the value is valid; otherwise an error message in the specified culture.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RegularExpressionValidator.Expression">
            <summary>
            Gets or sets the regular expression.
            </summary>
            <value>The expression.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RegularExpressionValidator.RegexOptions">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.RegularExpressionValidator.Options">
            <summary>
            Gets or sets optional flags.
            </summary>
            <value>The optional flags.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode">
            <summary>
            Defines failure codes.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode.Null">
            <summary>
            The string is null.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode.Empty">
            <summary>
            The string is empty.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.RegularExpressionValidator.FailureCode.RegexFailed">
            <summary>
            The string failed regex validation.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CompareValidatorOptions">
            <summary>
            Defines validation options for comparison validator.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.None">
            <summary>
            No options.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.IgnoreCase">
            <summary>
            String comparisons ignore case.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.NullAllowed">
            <summary>
            A null value is allowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.EmptyAllowed">
            <summary>
            An empty string value is allowed.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Rules.CompareValidatorOptions.Trim">
            <summary>
            The string for EmptyAllowed test is trimmed before being validated.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException">
            <summary>
            The exception that is thrown when a script error occures in the ScriptingRule rule engine.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="language">The rule language used.</param>
            <param name="source">The error source.</param>
            <param name="description">The error description.</param>
            <param name="line">The error line number.</param>
            <param name="column">The column number of the line.</param>
            <param name="number">The error number.</param>
            <param name="text">The source text.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="language">The rule language used.</param>
            <param name="source">The error source.</param>
            <param name="description">The error description.</param>
            <param name="line">The error line number.</param>
            <param name="column">The column number of the line.</param>
            <param name="number">The error number.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Description">
            <summary>
            Gets the error description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Line">
            <summary>
            Gets the error line number.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Column">
            <summary>
            Gets the error column number of the line.
            </summary>
            <value>The column.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Number">
            <summary>
            Gets a numeric value specifying the error.
            </summary>
            <value>The error number.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.CodeFluentScriptingRuleException.Text">
            <summary>
            Gets the source text.
            </summary>
            <value>The source text.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler">
            <summary>
            Defines the default validation failure handler.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.GetMessage(System.Globalization.CultureInfo,CodeFluent.Runtime.Rules.ValueValidator,System.String,System.Object[])">
            <summary>
            Gets a validation failure message.
            </summary>
            <param name="culture">The culture. May be null.</param>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="failureCode">The failure code. May be null.</param>
            <param name="arguments">The arguments.</param>
            <returns>The validation failure message. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.GetCode(CodeFluent.Runtime.Rules.ValueValidator,System.String)">
            <summary>
            Gets the resource code for a failure code.
            </summary>
            <param name="validator">The validator instance. May not be null.</param>
            <param name="failureCode">The failure code. May be null.</param>
            <returns>The resource code. May not be null.</returns>
        </member>
        <member name="M:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.Handle(System.Object,System.Globalization.CultureInfo,CodeFluent.Runtime.Rules.ValueValidator,System.String,System.Object[])">
            <summary>
            Handles a validation failure for a specific value.
            </summary>
            <param name="value">The value.</param>
            <param name="culture">The culture for error messages.</param>
            <param name="validator">The validator instance.</param>
            <param name="failureCode">The failure code.</param>
            <param name="arguments">The arguments.</param>
            <returns>
            The validation failure message. May not be null.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Rules.BaseValueValidationFailureHandler.Default">
            <summary>
            Gets the handler for CodeFluent default messages.
            </summary>
            <value>The handler for CodeFluent default messages.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers">
            <summary>
            Defines number for CodeFluent errors written to the Windows Journal.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.ListServiceException">
            <summary>
            An error occured in the List Service.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BlobHttpHandlerException">
            <summary>
            An error occured in the BLOB handler.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.SendErrorMessageException">
            <summary>
            An error occured trying to send an error message.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerHttpListenerException">
            <summary>
            An HttpListenerException error occured in the BITS Server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerIOException">
            <summary>
            An IOException error occured in the BITS Server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerException">
            <summary>
            An error occured in the BITS Server.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerWriteException">
            <summary>
            An error occured in the BITS Server trying to write to a client.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerCloseException">
            <summary>
            An error occured in the BITS Server trying to close the communication with a client.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.BitsServerResponseWriteException">
            <summary>
            An error occured in the BITS Server trying to write an HTML response to a client.
            </summary>
        </member>
        <member name="F:CodeFluent.Runtime.Diagnostics.EventLogErrorNumbers.ProjectDescriptorException">
            <summary>
            An error occured in the Project Descriptor.
            </summary>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownList">
            <summary>
            Defines a ribbon dropdown list button.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownList"/> class.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownList"/> class with a title.
            </summary>
            <param name="title">The title.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when the mouse is clicked on this button.
            </summary>
            <param name="sender">The sender.</param>
            <param name="ev">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.OnItemClick(System.Object,System.EventArgs)">
            <summary>
            Called when an item is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.Paint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the item.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.ComputeBounds">
            <summary>
            Computes the item and children bounds.
            </summary>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.AccessibleObject">
            <summary>
            Gets the accessible object.
            </summary>
            <value>The accessible object.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.VisibleItems">
            <summary>
            Gets the visible items.
            </summary>
            <value>The visible items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.RaiseItemMouseClick">
            <summary>
            Gets a value indicating whether mouse click must be raised at ribbon control level.
            </summary>
            <value>
            	<c>true</c> if mouse click must be raised at ribbon control; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.ComputedMode">
            <summary>
            Gets or sets the computed mode.
            </summary>
            <value>The computed mode.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DrawText">
            <summary>
            Gets a value indicating whether text will be drawn.
            </summary>
            <value><c>true</c> if text will be drawn; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject">
            <summary>
            Defines the accessible object for a ribbon dropdown list.
            </summary>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.#ctor(CodeFluent.Runtime.Design.RibbonDropDownList)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject"/> class.
            </summary>
            <param name="item">The owner item.</param>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.GetChildCount">
            <summary>
            Retrieves the number of children belonging to an accessible object.
            </summary>
            <returns>
            The number of children belonging to an accessible object.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.GetChild(System.Int32)">
            <summary>
            Retrieves the accessible child corresponding to the specified index.
            </summary>
            <param name="index">The zero-based index of the accessible child.</param>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the accessible child corresponding to the specified index.
            </returns>
        </member>
        <member name="M:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.DoDefaultAction">
            <summary>
            Performs the default action associated with this accessible object.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The default action for the control cannot be performed.
            </exception>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Item">
            <summary>
            Gets the owner item.
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Bounds">
            <summary>
            Gets the location and size of the accessible object.
            </summary>
            <value></value>
            <returns>
            A <see cref="T:System.Drawing.Rectangle"/> that represents the bounds of the accessible object.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The bounds of control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Parent">
            <summary>
            Gets the parent of an accessible object.
            </summary>
            <value></value>
            <returns>
            An <see cref="T:System.Windows.Forms.AccessibleObject"/> that represents the parent of an accessible object, or null if there is no parent object.
            </returns>
            <PermissionSet>
            	<IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Description">
            <summary>
            Gets a string that describes the visual appearance of the specified object. Not all objects have a description.
            </summary>
            <value></value>
            <returns>
            A description of the object's visual appearance to the user, or null if the object does not have a description.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The description for the control cannot be retrieved.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Name">
            <summary>
            Gets or sets the object name.
            </summary>
            <value></value>
            <returns>
            The object name, or null if the property has not been set.
            </returns>
            <exception cref="T:System.Runtime.InteropServices.COMException">
            The name of the control cannot be retrieved or set.
            </exception>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.State">
            <summary>
            Gets the state of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleStates"/> values, or <see cref="F:System.Windows.Forms.AccessibleStates.None"/>, if no state has been set.
            </returns>
        </member>
        <member name="P:CodeFluent.Runtime.Design.RibbonDropDownList.DropDownListAccessibleObject.Role">
            <summary>
            Gets the role of this accessible object.
            </summary>
            <value></value>
            <returns>
            One of the <see cref="T:System.Windows.Forms.AccessibleRole"/> values, or <see cref="F:System.Windows.Forms.AccessibleRole.None"/> if no role has been specified.
            </returns>
        </member>
    </members>
</doc>
